/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/kubeform/apis/base/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Tag struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              TagSpec   `json:"spec,omitempty"`
	Status            TagStatus `json:"status,omitempty"`
}

type TagSpec struct {
	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	DatabasesCount int64 `json:"databasesCount,omitempty" tf:"databases_count,omitempty"`
	// +optional
	DropletsCount int64 `json:"dropletsCount,omitempty" tf:"droplets_count,omitempty"`
	// +optional
	ImagesCount int64  `json:"imagesCount,omitempty" tf:"images_count,omitempty"`
	Name        string `json:"name" tf:"name"`
	// +optional
	TotalResourceCount int64 `json:"totalResourceCount,omitempty" tf:"total_resource_count,omitempty"`
	// +optional
	VolumeSnapshotsCount int64 `json:"volumeSnapshotsCount,omitempty" tf:"volume_snapshots_count,omitempty"`
	// +optional
	VolumesCount int64 `json:"volumesCount,omitempty" tf:"volumes_count,omitempty"`
}

type TagStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Output *TagSpec `json:"output,omitempty"`
	// +optional
	State *base.State `json:"state,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// TagList is a list of Tags
type TagList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Tag CRD objects
	Items []Tag `json:"items,omitempty"`
}
