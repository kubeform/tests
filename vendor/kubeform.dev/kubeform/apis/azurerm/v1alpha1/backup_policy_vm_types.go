/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/kubeform/apis/base/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type BackupPolicyVm struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              BackupPolicyVmSpec   `json:"spec,omitempty"`
	Status            BackupPolicyVmStatus `json:"status,omitempty"`
}

type BackupPolicyVmSpecBackup struct {
	Frequency string `json:"frequency" tf:"frequency"`
	Time      string `json:"time" tf:"time"`
	// +optional
	Weekdays []string `json:"weekdays,omitempty" tf:"weekdays,omitempty"`
}

type BackupPolicyVmSpecRetentionDaily struct {
	Count int64 `json:"count" tf:"count"`
}

type BackupPolicyVmSpecRetentionMonthly struct {
	Count    int64    `json:"count" tf:"count"`
	Weekdays []string `json:"weekdays" tf:"weekdays"`
	Weeks    []string `json:"weeks" tf:"weeks"`
}

type BackupPolicyVmSpecRetentionWeekly struct {
	Count    int64    `json:"count" tf:"count"`
	Weekdays []string `json:"weekdays" tf:"weekdays"`
}

type BackupPolicyVmSpecRetentionYearly struct {
	Count    int64    `json:"count" tf:"count"`
	Months   []string `json:"months" tf:"months"`
	Weekdays []string `json:"weekdays" tf:"weekdays"`
	Weeks    []string `json:"weeks" tf:"weeks"`
}

type BackupPolicyVmSpec struct {
	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +kubebuilder:validation:MaxItems=1
	Backup            []BackupPolicyVmSpecBackup `json:"backup" tf:"backup"`
	Name              string                     `json:"name" tf:"name"`
	RecoveryVaultName string                     `json:"recoveryVaultName" tf:"recovery_vault_name"`
	ResourceGroupName string                     `json:"resourceGroupName" tf:"resource_group_name"`
	// +optional
	// +kubebuilder:validation:MaxItems=1
	RetentionDaily []BackupPolicyVmSpecRetentionDaily `json:"retentionDaily,omitempty" tf:"retention_daily,omitempty"`
	// +optional
	// +kubebuilder:validation:MaxItems=1
	RetentionMonthly []BackupPolicyVmSpecRetentionMonthly `json:"retentionMonthly,omitempty" tf:"retention_monthly,omitempty"`
	// +optional
	// +kubebuilder:validation:MaxItems=1
	RetentionWeekly []BackupPolicyVmSpecRetentionWeekly `json:"retentionWeekly,omitempty" tf:"retention_weekly,omitempty"`
	// +optional
	// +kubebuilder:validation:MaxItems=1
	RetentionYearly []BackupPolicyVmSpecRetentionYearly `json:"retentionYearly,omitempty" tf:"retention_yearly,omitempty"`
	// +optional
	Tags map[string]string `json:"tags,omitempty" tf:"tags,omitempty"`
	// +optional
	Timezone string `json:"timezone,omitempty" tf:"timezone,omitempty"`
}

type BackupPolicyVmStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Output *BackupPolicyVmSpec `json:"output,omitempty"`
	// +optional
	State *base.State `json:"state,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// BackupPolicyVmList is a list of BackupPolicyVms
type BackupPolicyVmList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of BackupPolicyVm CRD objects
	Items []BackupPolicyVm `json:"items,omitempty"`
}
