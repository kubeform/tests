/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/kubeform/apis/base/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type AnalysisServicesServer struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AnalysisServicesServerSpec   `json:"spec,omitempty"`
	Status            AnalysisServicesServerStatus `json:"status,omitempty"`
}

type AnalysisServicesServerSpecIpv4FirewallRule struct {
	Name       string `json:"name" tf:"name"`
	RangeEnd   string `json:"rangeEnd" tf:"range_end"`
	RangeStart string `json:"rangeStart" tf:"range_start"`
}

type AnalysisServicesServerSpec struct {
	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`

	// +optional
	AdminUsers []string `json:"adminUsers,omitempty" tf:"admin_users,omitempty"`
	// +optional
	BackupBlobContainerURI string `json:"-" sensitive:"true" tf:"backup_blob_container_uri,omitempty"`
	// +optional
	EnablePowerBiService bool `json:"enablePowerBiService,omitempty" tf:"enable_power_bi_service,omitempty"`
	// +optional
	Ipv4FirewallRule []AnalysisServicesServerSpecIpv4FirewallRule `json:"ipv4FirewallRule,omitempty" tf:"ipv4_firewall_rule,omitempty"`
	Location         string                                       `json:"location" tf:"location"`
	Name             string                                       `json:"name" tf:"name"`
	// +optional
	QuerypoolConnectionMode string `json:"querypoolConnectionMode,omitempty" tf:"querypool_connection_mode,omitempty"`
	ResourceGroupName       string `json:"resourceGroupName" tf:"resource_group_name"`
	// +optional
	ServerFullName string `json:"serverFullName,omitempty" tf:"server_full_name,omitempty"`
	Sku            string `json:"sku" tf:"sku"`
	// +optional
	Tags map[string]string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type AnalysisServicesServerStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Output *AnalysisServicesServerSpec `json:"output,omitempty"`
	// +optional
	State *base.State `json:"state,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// AnalysisServicesServerList is a list of AnalysisServicesServers
type AnalysisServicesServerList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of AnalysisServicesServer CRD objects
	Items []AnalysisServicesServer `json:"items,omitempty"`
}
