/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/kubeform/apis/base/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type NetworkWatcherFlowLog struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              NetworkWatcherFlowLogSpec   `json:"spec,omitempty"`
	Status            NetworkWatcherFlowLogStatus `json:"status,omitempty"`
}

type NetworkWatcherFlowLogSpecRetentionPolicy struct {
	Days    int64 `json:"days" tf:"days"`
	Enabled bool  `json:"enabled" tf:"enabled"`
}

type NetworkWatcherFlowLogSpecTrafficAnalytics struct {
	Enabled             bool   `json:"enabled" tf:"enabled"`
	WorkspaceID         string `json:"workspaceID" tf:"workspace_id"`
	WorkspaceRegion     string `json:"workspaceRegion" tf:"workspace_region"`
	WorkspaceResourceID string `json:"workspaceResourceID" tf:"workspace_resource_id"`
}

type NetworkWatcherFlowLogSpec struct {
	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	Enabled                bool   `json:"enabled" tf:"enabled"`
	NetworkSecurityGroupID string `json:"networkSecurityGroupID" tf:"network_security_group_id"`
	NetworkWatcherName     string `json:"networkWatcherName" tf:"network_watcher_name"`
	ResourceGroupName      string `json:"resourceGroupName" tf:"resource_group_name"`
	// +kubebuilder:validation:MaxItems=1
	RetentionPolicy  []NetworkWatcherFlowLogSpecRetentionPolicy `json:"retentionPolicy" tf:"retention_policy"`
	StorageAccountID string                                     `json:"storageAccountID" tf:"storage_account_id"`
	// +optional
	// +kubebuilder:validation:MaxItems=1
	TrafficAnalytics []NetworkWatcherFlowLogSpecTrafficAnalytics `json:"trafficAnalytics,omitempty" tf:"traffic_analytics,omitempty"`
	// +optional
	Version int64 `json:"version,omitempty" tf:"version,omitempty"`
}

type NetworkWatcherFlowLogStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Output *NetworkWatcherFlowLogSpec `json:"output,omitempty"`
	// +optional
	State *base.State `json:"state,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// NetworkWatcherFlowLogList is a list of NetworkWatcherFlowLogs
type NetworkWatcherFlowLogList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of NetworkWatcherFlowLog CRD objects
	Items []NetworkWatcherFlowLog `json:"items,omitempty"`
}
