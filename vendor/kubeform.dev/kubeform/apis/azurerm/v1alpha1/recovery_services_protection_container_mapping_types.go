/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/kubeform/apis/base/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type RecoveryServicesProtectionContainerMapping struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              RecoveryServicesProtectionContainerMappingSpec   `json:"spec,omitempty"`
	Status            RecoveryServicesProtectionContainerMappingStatus `json:"status,omitempty"`
}

type RecoveryServicesProtectionContainerMappingSpec struct {
	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	Name                                  string `json:"name" tf:"name"`
	RecoveryFabricName                    string `json:"recoveryFabricName" tf:"recovery_fabric_name"`
	RecoveryReplicationPolicyID           string `json:"recoveryReplicationPolicyID" tf:"recovery_replication_policy_id"`
	RecoverySourceProtectionContainerName string `json:"recoverySourceProtectionContainerName" tf:"recovery_source_protection_container_name"`
	RecoveryTargetProtectionContainerID   string `json:"recoveryTargetProtectionContainerID" tf:"recovery_target_protection_container_id"`
	RecoveryVaultName                     string `json:"recoveryVaultName" tf:"recovery_vault_name"`
	ResourceGroupName                     string `json:"resourceGroupName" tf:"resource_group_name"`
}

type RecoveryServicesProtectionContainerMappingStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Output *RecoveryServicesProtectionContainerMappingSpec `json:"output,omitempty"`
	// +optional
	State *base.State `json:"state,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// RecoveryServicesProtectionContainerMappingList is a list of RecoveryServicesProtectionContainerMappings
type RecoveryServicesProtectionContainerMappingList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of RecoveryServicesProtectionContainerMapping CRD objects
	Items []RecoveryServicesProtectionContainerMapping `json:"items,omitempty"`
}
