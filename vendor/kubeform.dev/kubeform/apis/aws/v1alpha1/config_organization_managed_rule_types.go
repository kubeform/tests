/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/kubeform/apis/base/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type ConfigOrganizationManagedRule struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ConfigOrganizationManagedRuleSpec   `json:"spec,omitempty"`
	Status            ConfigOrganizationManagedRuleStatus `json:"status,omitempty"`
}

type ConfigOrganizationManagedRuleSpec struct {
	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	Arn string `json:"arn,omitempty" tf:"arn,omitempty"`
	// +optional
	Description string `json:"description,omitempty" tf:"description,omitempty"`
	// +optional
	// +kubebuilder:validation:MaxItems=1000
	ExcludedAccounts []string `json:"excludedAccounts,omitempty" tf:"excluded_accounts,omitempty"`
	// +optional
	InputParameters string `json:"inputParameters,omitempty" tf:"input_parameters,omitempty"`
	// +optional
	MaximumExecutionFrequency string `json:"maximumExecutionFrequency,omitempty" tf:"maximum_execution_frequency,omitempty"`
	Name                      string `json:"name" tf:"name"`
	// +optional
	ResourceIDScope string `json:"resourceIDScope,omitempty" tf:"resource_id_scope,omitempty"`
	// +optional
	// +kubebuilder:validation:MaxItems=100
	ResourceTypesScope []string `json:"resourceTypesScope,omitempty" tf:"resource_types_scope,omitempty"`
	RuleIdentifier     string   `json:"ruleIdentifier" tf:"rule_identifier"`
	// +optional
	TagKeyScope string `json:"tagKeyScope,omitempty" tf:"tag_key_scope,omitempty"`
	// +optional
	TagValueScope string `json:"tagValueScope,omitempty" tf:"tag_value_scope,omitempty"`
}

type ConfigOrganizationManagedRuleStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Output *ConfigOrganizationManagedRuleSpec `json:"output,omitempty"`
	// +optional
	State *base.State `json:"state,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ConfigOrganizationManagedRuleList is a list of ConfigOrganizationManagedRules
type ConfigOrganizationManagedRuleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of ConfigOrganizationManagedRule CRD objects
	Items []ConfigOrganizationManagedRule `json:"items,omitempty"`
}
