/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/kubeform/apis/base/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Ec2ClientVPNEndpoint struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              Ec2ClientVPNEndpointSpec   `json:"spec,omitempty"`
	Status            Ec2ClientVPNEndpointStatus `json:"status,omitempty"`
}

type Ec2ClientVPNEndpointSpecAuthenticationOptions struct {
	// +optional
	ActiveDirectoryID string `json:"activeDirectoryID,omitempty" tf:"active_directory_id,omitempty"`
	// +optional
	RootCertificateChainArn string `json:"rootCertificateChainArn,omitempty" tf:"root_certificate_chain_arn,omitempty"`
	Type                    string `json:"type" tf:"type"`
}

type Ec2ClientVPNEndpointSpecConnectionLogOptions struct {
	// +optional
	CloudwatchLogGroup string `json:"cloudwatchLogGroup,omitempty" tf:"cloudwatch_log_group,omitempty"`
	// +optional
	CloudwatchLogStream string `json:"cloudwatchLogStream,omitempty" tf:"cloudwatch_log_stream,omitempty"`
	Enabled             bool   `json:"enabled" tf:"enabled"`
}

type Ec2ClientVPNEndpointSpec struct {
	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +kubebuilder:validation:MaxItems=1
	AuthenticationOptions []Ec2ClientVPNEndpointSpecAuthenticationOptions `json:"authenticationOptions" tf:"authentication_options"`
	ClientCIDRBlock       string                                          `json:"clientCIDRBlock" tf:"client_cidr_block"`
	// +kubebuilder:validation:MaxItems=1
	ConnectionLogOptions []Ec2ClientVPNEndpointSpecConnectionLogOptions `json:"connectionLogOptions" tf:"connection_log_options"`
	// +optional
	Description string `json:"description,omitempty" tf:"description,omitempty"`
	// +optional
	DnsName string `json:"dnsName,omitempty" tf:"dns_name,omitempty"`
	// +optional
	DnsServers           []string `json:"dnsServers,omitempty" tf:"dns_servers,omitempty"`
	ServerCertificateArn string   `json:"serverCertificateArn" tf:"server_certificate_arn"`
	// +optional
	SplitTunnel bool `json:"splitTunnel,omitempty" tf:"split_tunnel,omitempty"`
	// +optional
	Status string `json:"status,omitempty" tf:"status,omitempty"`
	// +optional
	Tags map[string]string `json:"tags,omitempty" tf:"tags,omitempty"`
	// +optional
	TransportProtocol string `json:"transportProtocol,omitempty" tf:"transport_protocol,omitempty"`
}

type Ec2ClientVPNEndpointStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Output *Ec2ClientVPNEndpointSpec `json:"output,omitempty"`
	// +optional
	State *base.State `json:"state,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// Ec2ClientVPNEndpointList is a list of Ec2ClientVPNEndpoints
type Ec2ClientVPNEndpointList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Ec2ClientVPNEndpoint CRD objects
	Items []Ec2ClientVPNEndpoint `json:"items,omitempty"`
}
