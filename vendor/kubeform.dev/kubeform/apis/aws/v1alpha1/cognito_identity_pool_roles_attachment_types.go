/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/kubeform/apis/base/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type CognitoIdentityPoolRolesAttachment struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              CognitoIdentityPoolRolesAttachmentSpec   `json:"spec,omitempty"`
	Status            CognitoIdentityPoolRolesAttachmentStatus `json:"status,omitempty"`
}

type CognitoIdentityPoolRolesAttachmentSpecRoleMappingMappingRule struct {
	Claim     string `json:"claim" tf:"claim"`
	MatchType string `json:"matchType" tf:"match_type"`
	RoleArn   string `json:"roleArn" tf:"role_arn"`
	Value     string `json:"value" tf:"value"`
}

type CognitoIdentityPoolRolesAttachmentSpecRoleMapping struct {
	// +optional
	AmbiguousRoleResolution string `json:"ambiguousRoleResolution,omitempty" tf:"ambiguous_role_resolution,omitempty"`
	IdentityProvider        string `json:"identityProvider" tf:"identity_provider"`
	// +optional
	// +kubebuilder:validation:MaxItems=25
	MappingRule []CognitoIdentityPoolRolesAttachmentSpecRoleMappingMappingRule `json:"mappingRule,omitempty" tf:"mapping_rule,omitempty"`
	Type        string                                                         `json:"type" tf:"type"`
}

type CognitoIdentityPoolRolesAttachmentSpecRoles struct {
	// +optional
	Authenticated string `json:"authenticated,omitempty" tf:"authenticated,omitempty"`
	// +optional
	Unauthenticated string `json:"unauthenticated,omitempty" tf:"unauthenticated,omitempty"`
}

type CognitoIdentityPoolRolesAttachmentSpec struct {
	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	IdentityPoolID string `json:"identityPoolID" tf:"identity_pool_id"`
	// +optional
	RoleMapping []CognitoIdentityPoolRolesAttachmentSpecRoleMapping    `json:"roleMapping,omitempty" tf:"role_mapping,omitempty"`
	Roles       map[string]CognitoIdentityPoolRolesAttachmentSpecRoles `json:"roles" tf:"roles"`
}

type CognitoIdentityPoolRolesAttachmentStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Output *CognitoIdentityPoolRolesAttachmentSpec `json:"output,omitempty"`
	// +optional
	State *base.State `json:"state,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// CognitoIdentityPoolRolesAttachmentList is a list of CognitoIdentityPoolRolesAttachments
type CognitoIdentityPoolRolesAttachmentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of CognitoIdentityPoolRolesAttachment CRD objects
	Items []CognitoIdentityPoolRolesAttachment `json:"items,omitempty"`
}
