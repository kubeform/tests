/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/kubeform/apis/base/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type PinpointApp struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              PinpointAppSpec   `json:"spec,omitempty"`
	Status            PinpointAppStatus `json:"status,omitempty"`
}

type PinpointAppSpecCampaignHook struct {
	// +optional
	LambdaFunctionName string `json:"lambdaFunctionName,omitempty" tf:"lambda_function_name,omitempty"`
	// +optional
	Mode string `json:"mode,omitempty" tf:"mode,omitempty"`
	// +optional
	WebURL string `json:"webURL,omitempty" tf:"web_url,omitempty"`
}

type PinpointAppSpecLimits struct {
	// +optional
	Daily int64 `json:"daily,omitempty" tf:"daily,omitempty"`
	// +optional
	MaximumDuration int64 `json:"maximumDuration,omitempty" tf:"maximum_duration,omitempty"`
	// +optional
	MessagesPerSecond int64 `json:"messagesPerSecond,omitempty" tf:"messages_per_second,omitempty"`
	// +optional
	Total int64 `json:"total,omitempty" tf:"total,omitempty"`
}

type PinpointAppSpecQuietTime struct {
	// +optional
	End string `json:"end,omitempty" tf:"end,omitempty"`
	// +optional
	Start string `json:"start,omitempty" tf:"start,omitempty"`
}

type PinpointAppSpec struct {
	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	ApplicationID string `json:"applicationID,omitempty" tf:"application_id,omitempty"`
	// +optional
	Arn string `json:"arn,omitempty" tf:"arn,omitempty"`
	// +optional
	// +kubebuilder:validation:MaxItems=1
	CampaignHook []PinpointAppSpecCampaignHook `json:"campaignHook,omitempty" tf:"campaign_hook,omitempty"`
	// +optional
	// +kubebuilder:validation:MaxItems=1
	Limits []PinpointAppSpecLimits `json:"limits,omitempty" tf:"limits,omitempty"`
	// +optional
	Name string `json:"name,omitempty" tf:"name,omitempty"`
	// +optional
	NamePrefix string `json:"namePrefix,omitempty" tf:"name_prefix,omitempty"`
	// +optional
	// +kubebuilder:validation:MaxItems=1
	QuietTime []PinpointAppSpecQuietTime `json:"quietTime,omitempty" tf:"quiet_time,omitempty"`
	// +optional
	Tags map[string]string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type PinpointAppStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Output *PinpointAppSpec `json:"output,omitempty"`
	// +optional
	State *base.State `json:"state,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// PinpointAppList is a list of PinpointApps
type PinpointAppList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of PinpointApp CRD objects
	Items []PinpointApp `json:"items,omitempty"`
}
