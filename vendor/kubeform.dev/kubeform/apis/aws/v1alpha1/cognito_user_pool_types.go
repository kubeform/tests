/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/kubeform/apis/base/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type CognitoUserPool struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              CognitoUserPoolSpec   `json:"spec,omitempty"`
	Status            CognitoUserPoolStatus `json:"status,omitempty"`
}

type CognitoUserPoolSpecAdminCreateUserConfigInviteMessageTemplate struct {
	// +optional
	EmailMessage string `json:"emailMessage,omitempty" tf:"email_message,omitempty"`
	// +optional
	EmailSubject string `json:"emailSubject,omitempty" tf:"email_subject,omitempty"`
	// +optional
	SmsMessage string `json:"smsMessage,omitempty" tf:"sms_message,omitempty"`
}

type CognitoUserPoolSpecAdminCreateUserConfig struct {
	// +optional
	AllowAdminCreateUserOnly bool `json:"allowAdminCreateUserOnly,omitempty" tf:"allow_admin_create_user_only,omitempty"`
	// +optional
	// +kubebuilder:validation:MaxItems=1
	InviteMessageTemplate []CognitoUserPoolSpecAdminCreateUserConfigInviteMessageTemplate `json:"inviteMessageTemplate,omitempty" tf:"invite_message_template,omitempty"`
	// +optional
	UnusedAccountValidityDays int64 `json:"unusedAccountValidityDays,omitempty" tf:"unused_account_validity_days,omitempty"`
}

type CognitoUserPoolSpecDeviceConfiguration struct {
	// +optional
	ChallengeRequiredOnNewDevice bool `json:"challengeRequiredOnNewDevice,omitempty" tf:"challenge_required_on_new_device,omitempty"`
	// +optional
	DeviceOnlyRememberedOnUserPrompt bool `json:"deviceOnlyRememberedOnUserPrompt,omitempty" tf:"device_only_remembered_on_user_prompt,omitempty"`
}

type CognitoUserPoolSpecEmailConfiguration struct {
	// +optional
	EmailSendingAccount string `json:"emailSendingAccount,omitempty" tf:"email_sending_account,omitempty"`
	// +optional
	ReplyToEmailAddress string `json:"replyToEmailAddress,omitempty" tf:"reply_to_email_address,omitempty"`
	// +optional
	SourceArn string `json:"sourceArn,omitempty" tf:"source_arn,omitempty"`
}

type CognitoUserPoolSpecLambdaConfig struct {
	// +optional
	CreateAuthChallenge string `json:"createAuthChallenge,omitempty" tf:"create_auth_challenge,omitempty"`
	// +optional
	CustomMessage string `json:"customMessage,omitempty" tf:"custom_message,omitempty"`
	// +optional
	DefineAuthChallenge string `json:"defineAuthChallenge,omitempty" tf:"define_auth_challenge,omitempty"`
	// +optional
	PostAuthentication string `json:"postAuthentication,omitempty" tf:"post_authentication,omitempty"`
	// +optional
	PostConfirmation string `json:"postConfirmation,omitempty" tf:"post_confirmation,omitempty"`
	// +optional
	PreAuthentication string `json:"preAuthentication,omitempty" tf:"pre_authentication,omitempty"`
	// +optional
	PreSignUp string `json:"preSignUp,omitempty" tf:"pre_sign_up,omitempty"`
	// +optional
	PreTokenGeneration string `json:"preTokenGeneration,omitempty" tf:"pre_token_generation,omitempty"`
	// +optional
	UserMigration string `json:"userMigration,omitempty" tf:"user_migration,omitempty"`
	// +optional
	VerifyAuthChallengeResponse string `json:"verifyAuthChallengeResponse,omitempty" tf:"verify_auth_challenge_response,omitempty"`
}

type CognitoUserPoolSpecPasswordPolicy struct {
	// +optional
	MinimumLength int64 `json:"minimumLength,omitempty" tf:"minimum_length,omitempty"`
	// +optional
	RequireLowercase bool `json:"requireLowercase,omitempty" tf:"require_lowercase,omitempty"`
	// +optional
	RequireNumbers bool `json:"requireNumbers,omitempty" tf:"require_numbers,omitempty"`
	// +optional
	RequireSymbols bool `json:"requireSymbols,omitempty" tf:"require_symbols,omitempty"`
	// +optional
	RequireUppercase bool `json:"requireUppercase,omitempty" tf:"require_uppercase,omitempty"`
}

type CognitoUserPoolSpecSchemaNumberAttributeConstraints struct {
	// +optional
	MaxValue string `json:"maxValue,omitempty" tf:"max_value,omitempty"`
	// +optional
	MinValue string `json:"minValue,omitempty" tf:"min_value,omitempty"`
}

type CognitoUserPoolSpecSchemaStringAttributeConstraints struct {
	// +optional
	MaxLength string `json:"maxLength,omitempty" tf:"max_length,omitempty"`
	// +optional
	MinLength string `json:"minLength,omitempty" tf:"min_length,omitempty"`
}

type CognitoUserPoolSpecSchema struct {
	AttributeDataType string `json:"attributeDataType" tf:"attribute_data_type"`
	// +optional
	DeveloperOnlyAttribute bool `json:"developerOnlyAttribute,omitempty" tf:"developer_only_attribute,omitempty"`
	// +optional
	Mutable bool   `json:"mutable,omitempty" tf:"mutable,omitempty"`
	Name    string `json:"name" tf:"name"`
	// +optional
	// +kubebuilder:validation:MaxItems=1
	NumberAttributeConstraints []CognitoUserPoolSpecSchemaNumberAttributeConstraints `json:"numberAttributeConstraints,omitempty" tf:"number_attribute_constraints,omitempty"`
	// +optional
	Required bool `json:"required,omitempty" tf:"required,omitempty"`
	// +optional
	// +kubebuilder:validation:MaxItems=1
	StringAttributeConstraints []CognitoUserPoolSpecSchemaStringAttributeConstraints `json:"stringAttributeConstraints,omitempty" tf:"string_attribute_constraints,omitempty"`
}

type CognitoUserPoolSpecSmsConfiguration struct {
	ExternalID   string `json:"externalID" tf:"external_id"`
	SnsCallerArn string `json:"snsCallerArn" tf:"sns_caller_arn"`
}

type CognitoUserPoolSpecUserPoolAddOns struct {
	AdvancedSecurityMode string `json:"advancedSecurityMode" tf:"advanced_security_mode"`
}

type CognitoUserPoolSpecVerificationMessageTemplate struct {
	// +optional
	DefaultEmailOption string `json:"defaultEmailOption,omitempty" tf:"default_email_option,omitempty"`
	// +optional
	EmailMessage string `json:"emailMessage,omitempty" tf:"email_message,omitempty"`
	// +optional
	EmailMessageByLink string `json:"emailMessageByLink,omitempty" tf:"email_message_by_link,omitempty"`
	// +optional
	EmailSubject string `json:"emailSubject,omitempty" tf:"email_subject,omitempty"`
	// +optional
	EmailSubjectByLink string `json:"emailSubjectByLink,omitempty" tf:"email_subject_by_link,omitempty"`
	// +optional
	SmsMessage string `json:"smsMessage,omitempty" tf:"sms_message,omitempty"`
}

type CognitoUserPoolSpec struct {
	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	// +kubebuilder:validation:MaxItems=1
	AdminCreateUserConfig []CognitoUserPoolSpecAdminCreateUserConfig `json:"adminCreateUserConfig,omitempty" tf:"admin_create_user_config,omitempty"`
	// +optional
	AliasAttributes []string `json:"aliasAttributes,omitempty" tf:"alias_attributes,omitempty"`
	// +optional
	Arn string `json:"arn,omitempty" tf:"arn,omitempty"`
	// +optional
	AutoVerifiedAttributes []string `json:"autoVerifiedAttributes,omitempty" tf:"auto_verified_attributes,omitempty"`
	// +optional
	CreationDate string `json:"creationDate,omitempty" tf:"creation_date,omitempty"`
	// +optional
	// +kubebuilder:validation:MaxItems=1
	DeviceConfiguration []CognitoUserPoolSpecDeviceConfiguration `json:"deviceConfiguration,omitempty" tf:"device_configuration,omitempty"`
	// +optional
	// +kubebuilder:validation:MaxItems=1
	EmailConfiguration []CognitoUserPoolSpecEmailConfiguration `json:"emailConfiguration,omitempty" tf:"email_configuration,omitempty"`
	// +optional
	EmailVerificationMessage string `json:"emailVerificationMessage,omitempty" tf:"email_verification_message,omitempty"`
	// +optional
	EmailVerificationSubject string `json:"emailVerificationSubject,omitempty" tf:"email_verification_subject,omitempty"`
	// +optional
	Endpoint string `json:"endpoint,omitempty" tf:"endpoint,omitempty"`
	// +optional
	// +kubebuilder:validation:MaxItems=1
	LambdaConfig []CognitoUserPoolSpecLambdaConfig `json:"lambdaConfig,omitempty" tf:"lambda_config,omitempty"`
	// +optional
	LastModifiedDate string `json:"lastModifiedDate,omitempty" tf:"last_modified_date,omitempty"`
	// +optional
	MfaConfiguration string `json:"mfaConfiguration,omitempty" tf:"mfa_configuration,omitempty"`
	Name             string `json:"name" tf:"name"`
	// +optional
	// +kubebuilder:validation:MaxItems=1
	PasswordPolicy []CognitoUserPoolSpecPasswordPolicy `json:"passwordPolicy,omitempty" tf:"password_policy,omitempty"`
	// +optional
	// +kubebuilder:validation:MaxItems=50
	// +kubebuilder:validation:MinItems=1
	Schema []CognitoUserPoolSpecSchema `json:"schema,omitempty" tf:"schema,omitempty"`
	// +optional
	SmsAuthenticationMessage string `json:"smsAuthenticationMessage,omitempty" tf:"sms_authentication_message,omitempty"`
	// +optional
	// +kubebuilder:validation:MaxItems=1
	SmsConfiguration []CognitoUserPoolSpecSmsConfiguration `json:"smsConfiguration,omitempty" tf:"sms_configuration,omitempty"`
	// +optional
	SmsVerificationMessage string `json:"smsVerificationMessage,omitempty" tf:"sms_verification_message,omitempty"`
	// +optional
	Tags map[string]string `json:"tags,omitempty" tf:"tags,omitempty"`
	// +optional
	// +kubebuilder:validation:MaxItems=1
	UserPoolAddOns []CognitoUserPoolSpecUserPoolAddOns `json:"userPoolAddOns,omitempty" tf:"user_pool_add_ons,omitempty"`
	// +optional
	UsernameAttributes []string `json:"usernameAttributes,omitempty" tf:"username_attributes,omitempty"`
	// +optional
	// +kubebuilder:validation:MaxItems=1
	VerificationMessageTemplate []CognitoUserPoolSpecVerificationMessageTemplate `json:"verificationMessageTemplate,omitempty" tf:"verification_message_template,omitempty"`
}

type CognitoUserPoolStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Output *CognitoUserPoolSpec `json:"output,omitempty"`
	// +optional
	State *base.State `json:"state,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// CognitoUserPoolList is a list of CognitoUserPools
type CognitoUserPoolList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of CognitoUserPool CRD objects
	Items []CognitoUserPool `json:"items,omitempty"`
}
