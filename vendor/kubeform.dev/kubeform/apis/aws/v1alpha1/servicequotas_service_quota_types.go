/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/kubeform/apis/base/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type ServicequotasServiceQuota struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ServicequotasServiceQuotaSpec   `json:"spec,omitempty"`
	Status            ServicequotasServiceQuotaStatus `json:"status,omitempty"`
}

type ServicequotasServiceQuotaSpec struct {
	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	Adjustable bool `json:"adjustable,omitempty" tf:"adjustable,omitempty"`
	// +optional
	Arn string `json:"arn,omitempty" tf:"arn,omitempty"`
	// +optional
	DefaultValue float64 `json:"defaultValue,omitempty" tf:"default_value,omitempty"`
	QuotaCode    string  `json:"quotaCode" tf:"quota_code"`
	// +optional
	QuotaName string `json:"quotaName,omitempty" tf:"quota_name,omitempty"`
	// +optional
	RequestID string `json:"requestID,omitempty" tf:"request_id,omitempty"`
	// +optional
	RequestStatus string `json:"requestStatus,omitempty" tf:"request_status,omitempty"`
	ServiceCode   string `json:"serviceCode" tf:"service_code"`
	// +optional
	ServiceName string  `json:"serviceName,omitempty" tf:"service_name,omitempty"`
	Value       float64 `json:"value" tf:"value"`
}

type ServicequotasServiceQuotaStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Output *ServicequotasServiceQuotaSpec `json:"output,omitempty"`
	// +optional
	State *base.State `json:"state,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ServicequotasServiceQuotaList is a list of ServicequotasServiceQuotas
type ServicequotasServiceQuotaList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of ServicequotasServiceQuota CRD objects
	Items []ServicequotasServiceQuota `json:"items,omitempty"`
}
