/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/kubeform/apis/base/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type RamResourceShareAccepter struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              RamResourceShareAccepterSpec   `json:"spec,omitempty"`
	Status            RamResourceShareAccepterStatus `json:"status,omitempty"`
}

type RamResourceShareAccepterSpec struct {
	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	InvitationArn string `json:"invitationArn,omitempty" tf:"invitation_arn,omitempty"`
	// +optional
	ReceiverAccountID string `json:"receiverAccountID,omitempty" tf:"receiver_account_id,omitempty"`
	// +optional
	Resources []string `json:"resources,omitempty" tf:"resources,omitempty"`
	// +optional
	SenderAccountID string `json:"senderAccountID,omitempty" tf:"sender_account_id,omitempty"`
	ShareArn        string `json:"shareArn" tf:"share_arn"`
	// +optional
	ShareID string `json:"shareID,omitempty" tf:"share_id,omitempty"`
	// +optional
	ShareName string `json:"shareName,omitempty" tf:"share_name,omitempty"`
	// +optional
	Status string `json:"status,omitempty" tf:"status,omitempty"`
}

type RamResourceShareAccepterStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Output *RamResourceShareAccepterSpec `json:"output,omitempty"`
	// +optional
	State *base.State `json:"state,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// RamResourceShareAccepterList is a list of RamResourceShareAccepters
type RamResourceShareAccepterList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of RamResourceShareAccepter CRD objects
	Items []RamResourceShareAccepter `json:"items,omitempty"`
}
