/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/kubeform/apis/base/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type CodebuildWebhook struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              CodebuildWebhookSpec   `json:"spec,omitempty"`
	Status            CodebuildWebhookStatus `json:"status,omitempty"`
}

type CodebuildWebhookSpecFilterGroupFilter struct {
	// +optional
	ExcludeMatchedPattern bool   `json:"excludeMatchedPattern,omitempty" tf:"exclude_matched_pattern,omitempty"`
	Pattern               string `json:"pattern" tf:"pattern"`
	Type                  string `json:"type" tf:"type"`
}

type CodebuildWebhookSpecFilterGroup struct {
	// +optional
	Filter []CodebuildWebhookSpecFilterGroupFilter `json:"filter,omitempty" tf:"filter,omitempty"`
}

type CodebuildWebhookSpec struct {
	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`

	// +optional
	BranchFilter string `json:"branchFilter,omitempty" tf:"branch_filter,omitempty"`
	// +optional
	FilterGroup []CodebuildWebhookSpecFilterGroup `json:"filterGroup,omitempty" tf:"filter_group,omitempty"`
	// +optional
	PayloadURL  string `json:"payloadURL,omitempty" tf:"payload_url,omitempty"`
	ProjectName string `json:"projectName" tf:"project_name"`
	// +optional
	Secret string `json:"-" sensitive:"true" tf:"secret,omitempty"`
	// +optional
	Url string `json:"url,omitempty" tf:"url,omitempty"`
}

type CodebuildWebhookStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Output *CodebuildWebhookSpec `json:"output,omitempty"`
	// +optional
	State *base.State `json:"state,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// CodebuildWebhookList is a list of CodebuildWebhooks
type CodebuildWebhookList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of CodebuildWebhook CRD objects
	Items []CodebuildWebhook `json:"items,omitempty"`
}
