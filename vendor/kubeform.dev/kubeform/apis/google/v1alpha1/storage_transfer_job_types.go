/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/kubeform/apis/base/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type StorageTransferJob struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              StorageTransferJobSpec   `json:"spec,omitempty"`
	Status            StorageTransferJobStatus `json:"status,omitempty"`
}

type StorageTransferJobSpecScheduleScheduleEndDate struct {
	Day   int64 `json:"day" tf:"day"`
	Month int64 `json:"month" tf:"month"`
	Year  int64 `json:"year" tf:"year"`
}

type StorageTransferJobSpecScheduleScheduleStartDate struct {
	Day   int64 `json:"day" tf:"day"`
	Month int64 `json:"month" tf:"month"`
	Year  int64 `json:"year" tf:"year"`
}

type StorageTransferJobSpecScheduleStartTimeOfDay struct {
	Hours   int64 `json:"hours" tf:"hours"`
	Minutes int64 `json:"minutes" tf:"minutes"`
	Nanos   int64 `json:"nanos" tf:"nanos"`
	Seconds int64 `json:"seconds" tf:"seconds"`
}

type StorageTransferJobSpecSchedule struct {
	// +optional
	// +kubebuilder:validation:MaxItems=1
	ScheduleEndDate []StorageTransferJobSpecScheduleScheduleEndDate `json:"scheduleEndDate,omitempty" tf:"schedule_end_date,omitempty"`
	// +kubebuilder:validation:MaxItems=1
	ScheduleStartDate []StorageTransferJobSpecScheduleScheduleStartDate `json:"scheduleStartDate" tf:"schedule_start_date"`
	// +optional
	// +kubebuilder:validation:MaxItems=1
	StartTimeOfDay []StorageTransferJobSpecScheduleStartTimeOfDay `json:"startTimeOfDay,omitempty" tf:"start_time_of_day,omitempty"`
}

type StorageTransferJobSpecTransferSpecAwsS3DataSourceAwsAccessKey struct {
	AccessKeyID     string `json:"-" sensitive:"true" tf:"access_key_id"`
	SecretAccessKey string `json:"-" sensitive:"true" tf:"secret_access_key"`
}

type StorageTransferJobSpecTransferSpecAwsS3DataSource struct {
	// +kubebuilder:validation:MaxItems=1
	AwsAccessKey []StorageTransferJobSpecTransferSpecAwsS3DataSourceAwsAccessKey `json:"awsAccessKey" tf:"aws_access_key"`
	BucketName   string                                                          `json:"bucketName" tf:"bucket_name"`
}

type StorageTransferJobSpecTransferSpecGcsDataSink struct {
	BucketName string `json:"bucketName" tf:"bucket_name"`
}

type StorageTransferJobSpecTransferSpecGcsDataSource struct {
	BucketName string `json:"bucketName" tf:"bucket_name"`
}

type StorageTransferJobSpecTransferSpecHttpDataSource struct {
	ListURL string `json:"listURL" tf:"list_url"`
}

type StorageTransferJobSpecTransferSpecObjectConditions struct {
	// +optional
	ExcludePrefixes []string `json:"excludePrefixes,omitempty" tf:"exclude_prefixes,omitempty"`
	// +optional
	IncludePrefixes []string `json:"includePrefixes,omitempty" tf:"include_prefixes,omitempty"`
	// +optional
	MaxTimeElapsedSinceLastModification string `json:"maxTimeElapsedSinceLastModification,omitempty" tf:"max_time_elapsed_since_last_modification,omitempty"`
	// +optional
	MinTimeElapsedSinceLastModification string `json:"minTimeElapsedSinceLastModification,omitempty" tf:"min_time_elapsed_since_last_modification,omitempty"`
}

type StorageTransferJobSpecTransferSpecTransferOptions struct {
	// +optional
	DeleteObjectsFromSourceAfterTransfer bool `json:"deleteObjectsFromSourceAfterTransfer,omitempty" tf:"delete_objects_from_source_after_transfer,omitempty"`
	// +optional
	DeleteObjectsUniqueInSink bool `json:"deleteObjectsUniqueInSink,omitempty" tf:"delete_objects_unique_in_sink,omitempty"`
	// +optional
	OverwriteObjectsAlreadyExistingInSink bool `json:"overwriteObjectsAlreadyExistingInSink,omitempty" tf:"overwrite_objects_already_existing_in_sink,omitempty"`
}

type StorageTransferJobSpecTransferSpec struct {
	// +optional
	// +kubebuilder:validation:MaxItems=1
	AwsS3DataSource []StorageTransferJobSpecTransferSpecAwsS3DataSource `json:"awsS3DataSource,omitempty" tf:"aws_s3_data_source,omitempty"`
	// +optional
	// +kubebuilder:validation:MaxItems=1
	GcsDataSink []StorageTransferJobSpecTransferSpecGcsDataSink `json:"gcsDataSink,omitempty" tf:"gcs_data_sink,omitempty"`
	// +optional
	// +kubebuilder:validation:MaxItems=1
	GcsDataSource []StorageTransferJobSpecTransferSpecGcsDataSource `json:"gcsDataSource,omitempty" tf:"gcs_data_source,omitempty"`
	// +optional
	// +kubebuilder:validation:MaxItems=1
	HttpDataSource []StorageTransferJobSpecTransferSpecHttpDataSource `json:"httpDataSource,omitempty" tf:"http_data_source,omitempty"`
	// +optional
	// +kubebuilder:validation:MaxItems=1
	ObjectConditions []StorageTransferJobSpecTransferSpecObjectConditions `json:"objectConditions,omitempty" tf:"object_conditions,omitempty"`
	// +optional
	// +kubebuilder:validation:MaxItems=1
	TransferOptions []StorageTransferJobSpecTransferSpecTransferOptions `json:"transferOptions,omitempty" tf:"transfer_options,omitempty"`
}

type StorageTransferJobSpec struct {
	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`

	// +optional
	CreationTime string `json:"creationTime,omitempty" tf:"creation_time,omitempty"`
	// +optional
	DeletionTime string `json:"deletionTime,omitempty" tf:"deletion_time,omitempty"`
	Description  string `json:"description" tf:"description"`
	// +optional
	LastModificationTime string `json:"lastModificationTime,omitempty" tf:"last_modification_time,omitempty"`
	// +optional
	Name string `json:"name,omitempty" tf:"name,omitempty"`
	// +optional
	Project string `json:"project,omitempty" tf:"project,omitempty"`
	// +kubebuilder:validation:MaxItems=1
	Schedule []StorageTransferJobSpecSchedule `json:"schedule" tf:"schedule"`
	// +optional
	Status string `json:"status,omitempty" tf:"status,omitempty"`
	// +kubebuilder:validation:MaxItems=1
	TransferSpec []StorageTransferJobSpecTransferSpec `json:"transferSpec" tf:"transfer_spec"`
}

type StorageTransferJobStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Output *StorageTransferJobSpec `json:"output,omitempty"`
	// +optional
	State *base.State `json:"state,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// StorageTransferJobList is a list of StorageTransferJobs
type StorageTransferJobList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of StorageTransferJob CRD objects
	Items []StorageTransferJob `json:"items,omitempty"`
}
