/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/kubeform/apis/base/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type DnsManagedZone struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              DnsManagedZoneSpec   `json:"spec,omitempty"`
	Status            DnsManagedZoneStatus `json:"status,omitempty"`
}

type DnsManagedZoneSpecDnssecConfigDefaultKeySpecs struct {
	// +optional
	Algorithm string `json:"algorithm,omitempty" tf:"algorithm,omitempty"`
	// +optional
	KeyLength int64 `json:"keyLength,omitempty" tf:"key_length,omitempty"`
	// +optional
	KeyType string `json:"keyType,omitempty" tf:"key_type,omitempty"`
	// +optional
	Kind string `json:"kind,omitempty" tf:"kind,omitempty"`
}

type DnsManagedZoneSpecDnssecConfig struct {
	// +optional
	DefaultKeySpecs []DnsManagedZoneSpecDnssecConfigDefaultKeySpecs `json:"defaultKeySpecs,omitempty" tf:"default_key_specs,omitempty"`
	// +optional
	Kind string `json:"kind,omitempty" tf:"kind,omitempty"`
	// +optional
	NonExistence string `json:"nonExistence,omitempty" tf:"non_existence,omitempty"`
	// +optional
	State string `json:"state,omitempty" tf:"state,omitempty"`
}

type DnsManagedZoneSpecPrivateVisibilityConfigNetworks struct {
	// +optional
	NetworkURL string `json:"networkURL,omitempty" tf:"network_url,omitempty"`
}

type DnsManagedZoneSpecPrivateVisibilityConfig struct {
	// +optional
	Networks []DnsManagedZoneSpecPrivateVisibilityConfigNetworks `json:"networks,omitempty" tf:"networks,omitempty"`
}

type DnsManagedZoneSpec struct {
	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	Description string `json:"description,omitempty" tf:"description,omitempty"`
	DnsName     string `json:"dnsName" tf:"dns_name"`
	// +optional
	// +kubebuilder:validation:MaxItems=1
	DnssecConfig []DnsManagedZoneSpecDnssecConfig `json:"dnssecConfig,omitempty" tf:"dnssec_config,omitempty"`
	// +optional
	Labels map[string]string `json:"labels,omitempty" tf:"labels,omitempty"`
	Name   string            `json:"name" tf:"name"`
	// +optional
	NameServers []string `json:"nameServers,omitempty" tf:"name_servers,omitempty"`
	// +optional
	// +kubebuilder:validation:MaxItems=1
	PrivateVisibilityConfig []DnsManagedZoneSpecPrivateVisibilityConfig `json:"privateVisibilityConfig,omitempty" tf:"private_visibility_config,omitempty"`
	// +optional
	Project string `json:"project,omitempty" tf:"project,omitempty"`
	// +optional
	Visibility string `json:"visibility,omitempty" tf:"visibility,omitempty"`
}

type DnsManagedZoneStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Output *DnsManagedZoneSpec `json:"output,omitempty"`
	// +optional
	State *base.State `json:"state,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// DnsManagedZoneList is a list of DnsManagedZones
type DnsManagedZoneList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of DnsManagedZone CRD objects
	Items []DnsManagedZone `json:"items,omitempty"`
}
