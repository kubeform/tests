/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/kubeform/apis/base/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type ComputeReservation struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ComputeReservationSpec   `json:"spec,omitempty"`
	Status            ComputeReservationStatus `json:"status,omitempty"`
}

type ComputeReservationSpecSpecificReservationInstancePropertiesGuestAccelerators struct {
	AcceleratorCount int64  `json:"acceleratorCount" tf:"accelerator_count"`
	AcceleratorType  string `json:"acceleratorType" tf:"accelerator_type"`
}

type ComputeReservationSpecSpecificReservationInstancePropertiesLocalSsds struct {
	DiskSizeGb int64 `json:"diskSizeGb" tf:"disk_size_gb"`
	// +optional
	Interface string `json:"interface,omitempty" tf:"interface,omitempty"`
}

type ComputeReservationSpecSpecificReservationInstanceProperties struct {
	// +optional
	GuestAccelerators []ComputeReservationSpecSpecificReservationInstancePropertiesGuestAccelerators `json:"guestAccelerators,omitempty" tf:"guest_accelerators,omitempty"`
	// +optional
	LocalSsds   []ComputeReservationSpecSpecificReservationInstancePropertiesLocalSsds `json:"localSsds,omitempty" tf:"local_ssds,omitempty"`
	MachineType string                                                                 `json:"machineType" tf:"machine_type"`
	// +optional
	MinCPUPlatform string `json:"minCPUPlatform,omitempty" tf:"min_cpu_platform,omitempty"`
}

type ComputeReservationSpecSpecificReservation struct {
	Count int64 `json:"count" tf:"count"`
	// +optional
	InUseCount int64 `json:"inUseCount,omitempty" tf:"in_use_count,omitempty"`
	// +kubebuilder:validation:MaxItems=1
	InstanceProperties []ComputeReservationSpecSpecificReservationInstanceProperties `json:"instanceProperties" tf:"instance_properties"`
}

type ComputeReservationSpec struct {
	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	Commitment string `json:"commitment,omitempty" tf:"commitment,omitempty"`
	// +optional
	CreationTimestamp string `json:"creationTimestamp,omitempty" tf:"creation_timestamp,omitempty"`
	// +optional
	Description string `json:"description,omitempty" tf:"description,omitempty"`
	Name        string `json:"name" tf:"name"`
	// +optional
	Project string `json:"project,omitempty" tf:"project,omitempty"`
	// +optional
	SelfLink string `json:"selfLink,omitempty" tf:"self_link,omitempty"`
	// +kubebuilder:validation:MaxItems=1
	SpecificReservation []ComputeReservationSpecSpecificReservation `json:"specificReservation" tf:"specific_reservation"`
	// +optional
	SpecificReservationRequired bool `json:"specificReservationRequired,omitempty" tf:"specific_reservation_required,omitempty"`
	// +optional
	Status string `json:"status,omitempty" tf:"status,omitempty"`
	Zone   string `json:"zone" tf:"zone"`
}

type ComputeReservationStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Output *ComputeReservationSpec `json:"output,omitempty"`
	// +optional
	State *base.State `json:"state,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ComputeReservationList is a list of ComputeReservations
type ComputeReservationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of ComputeReservation CRD objects
	Items []ComputeReservation `json:"items,omitempty"`
}
