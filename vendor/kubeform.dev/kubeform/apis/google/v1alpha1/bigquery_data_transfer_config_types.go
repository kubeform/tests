/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/kubeform/apis/base/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type BigqueryDataTransferConfig struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              BigqueryDataTransferConfigSpec   `json:"spec,omitempty"`
	Status            BigqueryDataTransferConfigStatus `json:"status,omitempty"`
}

type BigqueryDataTransferConfigSpec struct {
	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	DataRefreshWindowDays int64  `json:"dataRefreshWindowDays,omitempty" tf:"data_refresh_window_days,omitempty"`
	DataSourceID          string `json:"dataSourceID" tf:"data_source_id"`
	DestinationDatasetID  string `json:"destinationDatasetID" tf:"destination_dataset_id"`
	// +optional
	Disabled    bool   `json:"disabled,omitempty" tf:"disabled,omitempty"`
	DisplayName string `json:"displayName" tf:"display_name"`
	// +optional
	Location string `json:"location,omitempty" tf:"location,omitempty"`
	// +optional
	Name   string            `json:"name,omitempty" tf:"name,omitempty"`
	Params map[string]string `json:"params" tf:"params"`
	// +optional
	Project string `json:"project,omitempty" tf:"project,omitempty"`
	// +optional
	Schedule string `json:"schedule,omitempty" tf:"schedule,omitempty"`
}

type BigqueryDataTransferConfigStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Output *BigqueryDataTransferConfigSpec `json:"output,omitempty"`
	// +optional
	State *base.State `json:"state,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// BigqueryDataTransferConfigList is a list of BigqueryDataTransferConfigs
type BigqueryDataTransferConfigList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of BigqueryDataTransferConfig CRD objects
	Items []BigqueryDataTransferConfig `json:"items,omitempty"`
}
