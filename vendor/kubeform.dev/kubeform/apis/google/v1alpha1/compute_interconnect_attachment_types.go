/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/kubeform/apis/base/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type ComputeInterconnectAttachment struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ComputeInterconnectAttachmentSpec   `json:"spec,omitempty"`
	Status            ComputeInterconnectAttachmentStatus `json:"status,omitempty"`
}

type ComputeInterconnectAttachmentSpecPrivateInterconnectInfo struct {
	// +optional
	Tag8021q int64 `json:"tag8021q,omitempty" tf:"tag8021q,omitempty"`
}

type ComputeInterconnectAttachmentSpec struct {
	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	AdminEnabled bool `json:"adminEnabled,omitempty" tf:"admin_enabled,omitempty"`
	// +optional
	Bandwidth string `json:"bandwidth,omitempty" tf:"bandwidth,omitempty"`
	// +optional
	CandidateSubnets []string `json:"candidateSubnets,omitempty" tf:"candidate_subnets,omitempty"`
	// +optional
	CloudRouterIPAddress string `json:"cloudRouterIPAddress,omitempty" tf:"cloud_router_ip_address,omitempty"`
	// +optional
	CreationTimestamp string `json:"creationTimestamp,omitempty" tf:"creation_timestamp,omitempty"`
	// +optional
	CustomerRouterIPAddress string `json:"customerRouterIPAddress,omitempty" tf:"customer_router_ip_address,omitempty"`
	// +optional
	Description string `json:"description,omitempty" tf:"description,omitempty"`
	// +optional
	EdgeAvailabilityDomain string `json:"edgeAvailabilityDomain,omitempty" tf:"edge_availability_domain,omitempty"`
	// +optional
	GoogleReferenceID string `json:"googleReferenceID,omitempty" tf:"google_reference_id,omitempty"`
	// +optional
	Interconnect string `json:"interconnect,omitempty" tf:"interconnect,omitempty"`
	Name         string `json:"name" tf:"name"`
	// +optional
	PairingKey string `json:"pairingKey,omitempty" tf:"pairing_key,omitempty"`
	// +optional
	PartnerAsn string `json:"partnerAsn,omitempty" tf:"partner_asn,omitempty"`
	// +optional
	// +kubebuilder:validation:MaxItems=1
	PrivateInterconnectInfo []ComputeInterconnectAttachmentSpecPrivateInterconnectInfo `json:"privateInterconnectInfo,omitempty" tf:"private_interconnect_info,omitempty"`
	// +optional
	Project string `json:"project,omitempty" tf:"project,omitempty"`
	// +optional
	Region string `json:"region,omitempty" tf:"region,omitempty"`
	Router string `json:"router" tf:"router"`
	// +optional
	SelfLink string `json:"selfLink,omitempty" tf:"self_link,omitempty"`
	// +optional
	State string `json:"state,omitempty" tf:"state,omitempty"`
	// +optional
	Type string `json:"type,omitempty" tf:"type,omitempty"`
	// +optional
	VlanTag8021q int64 `json:"vlanTag8021q,omitempty" tf:"vlan_tag8021q,omitempty"`
}

type ComputeInterconnectAttachmentStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Output *ComputeInterconnectAttachmentSpec `json:"output,omitempty"`
	// +optional
	State *base.State `json:"state,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ComputeInterconnectAttachmentList is a list of ComputeInterconnectAttachments
type ComputeInterconnectAttachmentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of ComputeInterconnectAttachment CRD objects
	Items []ComputeInterconnectAttachment `json:"items,omitempty"`
}
