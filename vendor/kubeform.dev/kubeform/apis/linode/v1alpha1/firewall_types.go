/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/kubeform/apis/base/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Firewall struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              FirewallSpec   `json:"spec,omitempty"`
	Status            FirewallStatus `json:"status,omitempty"`
}

type FirewallSpecDevices struct {
	// The ID of the underlying entity for the firewall device (e.g. the Linode's ID).
	// +optional
	EntityID int64 `json:"entityID,omitempty" tf:"entity_id,omitempty"`
	// The ID of the firewall device.
	// +optional
	ID int64 `json:"ID,omitempty" tf:"id,omitempty"`
	// The label of the underlying entity for the firewall device.
	// +optional
	Label string `json:"label,omitempty" tf:"label,omitempty"`
	// The type of firewall device.
	// +optional
	Type string `json:"type,omitempty" tf:"type,omitempty"`
	// The URL of the underlying entity for the firewall device.
	// +optional
	Url string `json:"url,omitempty" tf:"url,omitempty"`
}

type FirewallSpecInbound struct {
	// A list of IP addresses, CIDR blocks, or 0.0.0.0/0 (to whitelist all) this rule applies to.
	// +kubebuilder:validation:MinItems=1
	Addresses []string `json:"addresses" tf:"addresses"`
	// A list of ports and/or port ranges (i.e. "443" or "80-90").
	// +kubebuilder:validation:MinItems=1
	Ports []string `json:"ports" tf:"ports"`
	// The network protocol this rule controls.
	Protocol string `json:"protocol" tf:"protocol"`
}

type FirewallSpecOutbound struct {
	// A list of IP addresses, CIDR blocks, or 0.0.0.0/0 (to whitelist all) this rule applies to.
	// +kubebuilder:validation:MinItems=1
	Addresses []string `json:"addresses" tf:"addresses"`
	// A list of ports and/or port ranges (i.e. "443" or "80-90").
	// +kubebuilder:validation:MinItems=1
	Ports []string `json:"ports" tf:"ports"`
	// The network protocol this rule controls.
	Protocol string `json:"protocol" tf:"protocol"`
}

type FirewallSpec struct {
	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// The devices associated with this firewall.
	// +optional
	Devices []FirewallSpecDevices `json:"devices,omitempty" tf:"devices,omitempty"`
	// If true, the Firewall is inactive.
	// +optional
	Disabled bool `json:"disabled,omitempty" tf:"disabled,omitempty"`
	// A firewall rule that specifies what inbound network traffic is allowed.
	// +optional
	Inbound []FirewallSpecInbound `json:"inbound,omitempty" tf:"inbound,omitempty"`
	// The label for the Firewall. For display purposes only. If no label is provided, a default will be assigned.
	// +optional
	Label string `json:"label,omitempty" tf:"label,omitempty"`
	// The IDs of Linodes to apply this firewall to.
	// +kubebuilder:validation:MinItems=1
	Linodes []int64 `json:"linodes" tf:"linodes"`
	// A firewall rule that specifies what outbound network traffic is allowed.
	// +optional
	Outbound []FirewallSpecOutbound `json:"outbound,omitempty" tf:"outbound,omitempty"`
	// The status of the firewall.
	// +optional
	Status string `json:"status,omitempty" tf:"status,omitempty"`
	// An array of tags applied to this object. Tags are for organizational purposes only.
	// +optional
	Tags []string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type FirewallStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Output *FirewallSpec `json:"output,omitempty"`
	// +optional
	State *base.State `json:"state,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// FirewallList is a list of Firewalls
type FirewallList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Firewall CRD objects
	Items []Firewall `json:"items,omitempty"`
}
