/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Cluster struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ClusterSpec   `json:"spec,omitempty"`
	Status            ClusterStatus `json:"status,omitempty"`
}

type ClusterSpec struct {
	ClusterSpec2 `json:",inline"`
	// +optional
	KubeformOutput *ClusterSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type ClusterSpecMaintenanceWindow struct {
	Day  *string `json:"day" tf:"day"`
	Hour *string `json:"hour" tf:"hour"`
}

type ClusterSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`

	// +optional
	Database *string `json:"database,omitempty" tf:"database"`
	Engine   *string `json:"engine" tf:"engine"`
	// +optional
	EvictionPolicy *string `json:"evictionPolicy,omitempty" tf:"eviction_policy"`
	// +optional
	Host *string `json:"host,omitempty" tf:"host"`
	// +optional
	// +kubebuilder:validation:MinItems=1
	MaintenanceWindow []ClusterSpecMaintenanceWindow `json:"maintenanceWindow,omitempty" tf:"maintenance_window"`
	Name              *string                        `json:"name" tf:"name"`
	NodeCount         *int64                         `json:"nodeCount" tf:"node_count"`
	// +optional
	Password *string `json:"-" sensitive:"true" tf:"password"`
	// +optional
	Port *int64 `json:"port,omitempty" tf:"port"`
	// +optional
	PrivateHost *string `json:"privateHost,omitempty" tf:"private_host"`
	// +optional
	PrivateNetworkUUID *string `json:"privateNetworkUUID,omitempty" tf:"private_network_uuid"`
	// +optional
	PrivateURI *string `json:"-" sensitive:"true" tf:"private_uri"`
	Region     *string `json:"region" tf:"region"`
	Size       *string `json:"size" tf:"size"`
	// +optional
	SqlMode *string `json:"sqlMode,omitempty" tf:"sql_mode"`
	// +optional
	Tags []string `json:"tags,omitempty" tf:"tags"`
	// +optional
	Uri *string `json:"-" sensitive:"true" tf:"uri"`
	// +optional
	Urn *string `json:"urn,omitempty" tf:"urn"`
	// +optional
	User *string `json:"user,omitempty" tf:"user"`
	// +optional
	Version *string `json:"version,omitempty" tf:"version"`
}

type ClusterStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ClusterList is a list of Clusters
type ClusterList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Cluster CRD objects
	Items []Cluster `json:"items,omitempty"`
}
