// +build !ignore_autogenerated

/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	apiv1 "kmodules.xyz/client-go/api/v1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *App) DeepCopyInto(out *App) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new App.
func (in *App) DeepCopy() *App {
	if in == nil {
		return nil
	}
	out := new(App)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *App) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppList) DeepCopyInto(out *AppList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]App, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppList.
func (in *AppList) DeepCopy() *AppList {
	if in == nil {
		return nil
	}
	out := new(AppList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AppList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSpec) DeepCopyInto(out *AppSpec) {
	*out = *in
	in.AppSpec2.DeepCopyInto(&out.AppSpec2)
	if in.KubeformOutput != nil {
		in, out := &in.KubeformOutput, &out.KubeformOutput
		*out = new(AppSpec2)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSpec.
func (in *AppSpec) DeepCopy() *AppSpec {
	if in == nil {
		return nil
	}
	out := new(AppSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSpec2) DeepCopyInto(out *AppSpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	if in.ActiveDeploymentID != nil {
		in, out := &in.ActiveDeploymentID, &out.ActiveDeploymentID
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.DefaultIngress != nil {
		in, out := &in.DefaultIngress, &out.DefaultIngress
		*out = new(string)
		**out = **in
	}
	if in.LiveURL != nil {
		in, out := &in.LiveURL, &out.LiveURL
		*out = new(string)
		**out = **in
	}
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = new(AppSpecSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSpec2.
func (in *AppSpec2) DeepCopy() *AppSpec2 {
	if in == nil {
		return nil
	}
	out := new(AppSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSpecSpec) DeepCopyInto(out *AppSpecSpec) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = make([]AppSpecSpecDatabase, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = make([]AppSpecSpecDomain, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Domains != nil {
		in, out := &in.Domains, &out.Domains
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]AppSpecSpecEnv, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Job != nil {
		in, out := &in.Job, &out.Job
		*out = make([]AppSpecSpecJob, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = make([]AppSpecSpecService, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StaticSite != nil {
		in, out := &in.StaticSite, &out.StaticSite
		*out = make([]AppSpecSpecStaticSite, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Worker != nil {
		in, out := &in.Worker, &out.Worker
		*out = make([]AppSpecSpecWorker, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSpecSpec.
func (in *AppSpecSpec) DeepCopy() *AppSpecSpec {
	if in == nil {
		return nil
	}
	out := new(AppSpecSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSpecSpecDatabase) DeepCopyInto(out *AppSpecSpecDatabase) {
	*out = *in
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.DbName != nil {
		in, out := &in.DbName, &out.DbName
		*out = new(string)
		**out = **in
	}
	if in.DbUser != nil {
		in, out := &in.DbUser, &out.DbUser
		*out = new(string)
		**out = **in
	}
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Production != nil {
		in, out := &in.Production, &out.Production
		*out = new(bool)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSpecSpecDatabase.
func (in *AppSpecSpecDatabase) DeepCopy() *AppSpecSpecDatabase {
	if in == nil {
		return nil
	}
	out := new(AppSpecSpecDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSpecSpecDomain) DeepCopyInto(out *AppSpecSpecDomain) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Wildcard != nil {
		in, out := &in.Wildcard, &out.Wildcard
		*out = new(bool)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSpecSpecDomain.
func (in *AppSpecSpecDomain) DeepCopy() *AppSpecSpecDomain {
	if in == nil {
		return nil
	}
	out := new(AppSpecSpecDomain)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSpecSpecEnv) DeepCopyInto(out *AppSpecSpecEnv) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSpecSpecEnv.
func (in *AppSpecSpecEnv) DeepCopy() *AppSpecSpecEnv {
	if in == nil {
		return nil
	}
	out := new(AppSpecSpecEnv)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSpecSpecJob) DeepCopyInto(out *AppSpecSpecJob) {
	*out = *in
	if in.BuildCommand != nil {
		in, out := &in.BuildCommand, &out.BuildCommand
		*out = new(string)
		**out = **in
	}
	if in.DockerfilePath != nil {
		in, out := &in.DockerfilePath, &out.DockerfilePath
		*out = new(string)
		**out = **in
	}
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]AppSpecSpecJobEnv, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnvironmentSlug != nil {
		in, out := &in.EnvironmentSlug, &out.EnvironmentSlug
		*out = new(string)
		**out = **in
	}
	if in.Git != nil {
		in, out := &in.Git, &out.Git
		*out = new(AppSpecSpecJobGit)
		(*in).DeepCopyInto(*out)
	}
	if in.Github != nil {
		in, out := &in.Github, &out.Github
		*out = new(AppSpecSpecJobGithub)
		(*in).DeepCopyInto(*out)
	}
	if in.Gitlab != nil {
		in, out := &in.Gitlab, &out.Gitlab
		*out = new(AppSpecSpecJobGitlab)
		(*in).DeepCopyInto(*out)
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(AppSpecSpecJobImage)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(int64)
		**out = **in
	}
	if in.InstanceSizeSlug != nil {
		in, out := &in.InstanceSizeSlug, &out.InstanceSizeSlug
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RunCommand != nil {
		in, out := &in.RunCommand, &out.RunCommand
		*out = new(string)
		**out = **in
	}
	if in.SourceDir != nil {
		in, out := &in.SourceDir, &out.SourceDir
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSpecSpecJob.
func (in *AppSpecSpecJob) DeepCopy() *AppSpecSpecJob {
	if in == nil {
		return nil
	}
	out := new(AppSpecSpecJob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSpecSpecJobEnv) DeepCopyInto(out *AppSpecSpecJobEnv) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSpecSpecJobEnv.
func (in *AppSpecSpecJobEnv) DeepCopy() *AppSpecSpecJobEnv {
	if in == nil {
		return nil
	}
	out := new(AppSpecSpecJobEnv)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSpecSpecJobGit) DeepCopyInto(out *AppSpecSpecJobGit) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.RepoCloneURL != nil {
		in, out := &in.RepoCloneURL, &out.RepoCloneURL
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSpecSpecJobGit.
func (in *AppSpecSpecJobGit) DeepCopy() *AppSpecSpecJobGit {
	if in == nil {
		return nil
	}
	out := new(AppSpecSpecJobGit)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSpecSpecJobGithub) DeepCopyInto(out *AppSpecSpecJobGithub) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.DeployOnPush != nil {
		in, out := &in.DeployOnPush, &out.DeployOnPush
		*out = new(bool)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSpecSpecJobGithub.
func (in *AppSpecSpecJobGithub) DeepCopy() *AppSpecSpecJobGithub {
	if in == nil {
		return nil
	}
	out := new(AppSpecSpecJobGithub)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSpecSpecJobGitlab) DeepCopyInto(out *AppSpecSpecJobGitlab) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.DeployOnPush != nil {
		in, out := &in.DeployOnPush, &out.DeployOnPush
		*out = new(bool)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSpecSpecJobGitlab.
func (in *AppSpecSpecJobGitlab) DeepCopy() *AppSpecSpecJobGitlab {
	if in == nil {
		return nil
	}
	out := new(AppSpecSpecJobGitlab)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSpecSpecJobImage) DeepCopyInto(out *AppSpecSpecJobImage) {
	*out = *in
	if in.Registry != nil {
		in, out := &in.Registry, &out.Registry
		*out = new(string)
		**out = **in
	}
	if in.RegistryType != nil {
		in, out := &in.RegistryType, &out.RegistryType
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSpecSpecJobImage.
func (in *AppSpecSpecJobImage) DeepCopy() *AppSpecSpecJobImage {
	if in == nil {
		return nil
	}
	out := new(AppSpecSpecJobImage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSpecSpecService) DeepCopyInto(out *AppSpecSpecService) {
	*out = *in
	if in.BuildCommand != nil {
		in, out := &in.BuildCommand, &out.BuildCommand
		*out = new(string)
		**out = **in
	}
	if in.DockerfilePath != nil {
		in, out := &in.DockerfilePath, &out.DockerfilePath
		*out = new(string)
		**out = **in
	}
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]AppSpecSpecServiceEnv, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnvironmentSlug != nil {
		in, out := &in.EnvironmentSlug, &out.EnvironmentSlug
		*out = new(string)
		**out = **in
	}
	if in.Git != nil {
		in, out := &in.Git, &out.Git
		*out = new(AppSpecSpecServiceGit)
		(*in).DeepCopyInto(*out)
	}
	if in.Github != nil {
		in, out := &in.Github, &out.Github
		*out = new(AppSpecSpecServiceGithub)
		(*in).DeepCopyInto(*out)
	}
	if in.Gitlab != nil {
		in, out := &in.Gitlab, &out.Gitlab
		*out = new(AppSpecSpecServiceGitlab)
		(*in).DeepCopyInto(*out)
	}
	if in.HealthCheck != nil {
		in, out := &in.HealthCheck, &out.HealthCheck
		*out = new(AppSpecSpecServiceHealthCheck)
		(*in).DeepCopyInto(*out)
	}
	if in.HttpPort != nil {
		in, out := &in.HttpPort, &out.HttpPort
		*out = new(int64)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(AppSpecSpecServiceImage)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(int64)
		**out = **in
	}
	if in.InstanceSizeSlug != nil {
		in, out := &in.InstanceSizeSlug, &out.InstanceSizeSlug
		*out = new(string)
		**out = **in
	}
	if in.InternalPorts != nil {
		in, out := &in.InternalPorts, &out.InternalPorts
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Routes != nil {
		in, out := &in.Routes, &out.Routes
		*out = make([]AppSpecSpecServiceRoutes, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RunCommand != nil {
		in, out := &in.RunCommand, &out.RunCommand
		*out = new(string)
		**out = **in
	}
	if in.SourceDir != nil {
		in, out := &in.SourceDir, &out.SourceDir
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSpecSpecService.
func (in *AppSpecSpecService) DeepCopy() *AppSpecSpecService {
	if in == nil {
		return nil
	}
	out := new(AppSpecSpecService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSpecSpecServiceEnv) DeepCopyInto(out *AppSpecSpecServiceEnv) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSpecSpecServiceEnv.
func (in *AppSpecSpecServiceEnv) DeepCopy() *AppSpecSpecServiceEnv {
	if in == nil {
		return nil
	}
	out := new(AppSpecSpecServiceEnv)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSpecSpecServiceGit) DeepCopyInto(out *AppSpecSpecServiceGit) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.RepoCloneURL != nil {
		in, out := &in.RepoCloneURL, &out.RepoCloneURL
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSpecSpecServiceGit.
func (in *AppSpecSpecServiceGit) DeepCopy() *AppSpecSpecServiceGit {
	if in == nil {
		return nil
	}
	out := new(AppSpecSpecServiceGit)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSpecSpecServiceGithub) DeepCopyInto(out *AppSpecSpecServiceGithub) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.DeployOnPush != nil {
		in, out := &in.DeployOnPush, &out.DeployOnPush
		*out = new(bool)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSpecSpecServiceGithub.
func (in *AppSpecSpecServiceGithub) DeepCopy() *AppSpecSpecServiceGithub {
	if in == nil {
		return nil
	}
	out := new(AppSpecSpecServiceGithub)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSpecSpecServiceGitlab) DeepCopyInto(out *AppSpecSpecServiceGitlab) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.DeployOnPush != nil {
		in, out := &in.DeployOnPush, &out.DeployOnPush
		*out = new(bool)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSpecSpecServiceGitlab.
func (in *AppSpecSpecServiceGitlab) DeepCopy() *AppSpecSpecServiceGitlab {
	if in == nil {
		return nil
	}
	out := new(AppSpecSpecServiceGitlab)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSpecSpecServiceHealthCheck) DeepCopyInto(out *AppSpecSpecServiceHealthCheck) {
	*out = *in
	if in.FailureThreshold != nil {
		in, out := &in.FailureThreshold, &out.FailureThreshold
		*out = new(int64)
		**out = **in
	}
	if in.HttpPath != nil {
		in, out := &in.HttpPath, &out.HttpPath
		*out = new(string)
		**out = **in
	}
	if in.InitialDelaySeconds != nil {
		in, out := &in.InitialDelaySeconds, &out.InitialDelaySeconds
		*out = new(int64)
		**out = **in
	}
	if in.PeriodSeconds != nil {
		in, out := &in.PeriodSeconds, &out.PeriodSeconds
		*out = new(int64)
		**out = **in
	}
	if in.SuccessThreshold != nil {
		in, out := &in.SuccessThreshold, &out.SuccessThreshold
		*out = new(int64)
		**out = **in
	}
	if in.TimeoutSeconds != nil {
		in, out := &in.TimeoutSeconds, &out.TimeoutSeconds
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSpecSpecServiceHealthCheck.
func (in *AppSpecSpecServiceHealthCheck) DeepCopy() *AppSpecSpecServiceHealthCheck {
	if in == nil {
		return nil
	}
	out := new(AppSpecSpecServiceHealthCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSpecSpecServiceImage) DeepCopyInto(out *AppSpecSpecServiceImage) {
	*out = *in
	if in.Registry != nil {
		in, out := &in.Registry, &out.Registry
		*out = new(string)
		**out = **in
	}
	if in.RegistryType != nil {
		in, out := &in.RegistryType, &out.RegistryType
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSpecSpecServiceImage.
func (in *AppSpecSpecServiceImage) DeepCopy() *AppSpecSpecServiceImage {
	if in == nil {
		return nil
	}
	out := new(AppSpecSpecServiceImage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSpecSpecServiceRoutes) DeepCopyInto(out *AppSpecSpecServiceRoutes) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSpecSpecServiceRoutes.
func (in *AppSpecSpecServiceRoutes) DeepCopy() *AppSpecSpecServiceRoutes {
	if in == nil {
		return nil
	}
	out := new(AppSpecSpecServiceRoutes)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSpecSpecStaticSite) DeepCopyInto(out *AppSpecSpecStaticSite) {
	*out = *in
	if in.BuildCommand != nil {
		in, out := &in.BuildCommand, &out.BuildCommand
		*out = new(string)
		**out = **in
	}
	if in.CatchallDocument != nil {
		in, out := &in.CatchallDocument, &out.CatchallDocument
		*out = new(string)
		**out = **in
	}
	if in.DockerfilePath != nil {
		in, out := &in.DockerfilePath, &out.DockerfilePath
		*out = new(string)
		**out = **in
	}
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]AppSpecSpecStaticSiteEnv, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnvironmentSlug != nil {
		in, out := &in.EnvironmentSlug, &out.EnvironmentSlug
		*out = new(string)
		**out = **in
	}
	if in.ErrorDocument != nil {
		in, out := &in.ErrorDocument, &out.ErrorDocument
		*out = new(string)
		**out = **in
	}
	if in.Git != nil {
		in, out := &in.Git, &out.Git
		*out = new(AppSpecSpecStaticSiteGit)
		(*in).DeepCopyInto(*out)
	}
	if in.Github != nil {
		in, out := &in.Github, &out.Github
		*out = new(AppSpecSpecStaticSiteGithub)
		(*in).DeepCopyInto(*out)
	}
	if in.Gitlab != nil {
		in, out := &in.Gitlab, &out.Gitlab
		*out = new(AppSpecSpecStaticSiteGitlab)
		(*in).DeepCopyInto(*out)
	}
	if in.IndexDocument != nil {
		in, out := &in.IndexDocument, &out.IndexDocument
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OutputDir != nil {
		in, out := &in.OutputDir, &out.OutputDir
		*out = new(string)
		**out = **in
	}
	if in.Routes != nil {
		in, out := &in.Routes, &out.Routes
		*out = make([]AppSpecSpecStaticSiteRoutes, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceDir != nil {
		in, out := &in.SourceDir, &out.SourceDir
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSpecSpecStaticSite.
func (in *AppSpecSpecStaticSite) DeepCopy() *AppSpecSpecStaticSite {
	if in == nil {
		return nil
	}
	out := new(AppSpecSpecStaticSite)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSpecSpecStaticSiteEnv) DeepCopyInto(out *AppSpecSpecStaticSiteEnv) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSpecSpecStaticSiteEnv.
func (in *AppSpecSpecStaticSiteEnv) DeepCopy() *AppSpecSpecStaticSiteEnv {
	if in == nil {
		return nil
	}
	out := new(AppSpecSpecStaticSiteEnv)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSpecSpecStaticSiteGit) DeepCopyInto(out *AppSpecSpecStaticSiteGit) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.RepoCloneURL != nil {
		in, out := &in.RepoCloneURL, &out.RepoCloneURL
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSpecSpecStaticSiteGit.
func (in *AppSpecSpecStaticSiteGit) DeepCopy() *AppSpecSpecStaticSiteGit {
	if in == nil {
		return nil
	}
	out := new(AppSpecSpecStaticSiteGit)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSpecSpecStaticSiteGithub) DeepCopyInto(out *AppSpecSpecStaticSiteGithub) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.DeployOnPush != nil {
		in, out := &in.DeployOnPush, &out.DeployOnPush
		*out = new(bool)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSpecSpecStaticSiteGithub.
func (in *AppSpecSpecStaticSiteGithub) DeepCopy() *AppSpecSpecStaticSiteGithub {
	if in == nil {
		return nil
	}
	out := new(AppSpecSpecStaticSiteGithub)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSpecSpecStaticSiteGitlab) DeepCopyInto(out *AppSpecSpecStaticSiteGitlab) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.DeployOnPush != nil {
		in, out := &in.DeployOnPush, &out.DeployOnPush
		*out = new(bool)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSpecSpecStaticSiteGitlab.
func (in *AppSpecSpecStaticSiteGitlab) DeepCopy() *AppSpecSpecStaticSiteGitlab {
	if in == nil {
		return nil
	}
	out := new(AppSpecSpecStaticSiteGitlab)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSpecSpecStaticSiteRoutes) DeepCopyInto(out *AppSpecSpecStaticSiteRoutes) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSpecSpecStaticSiteRoutes.
func (in *AppSpecSpecStaticSiteRoutes) DeepCopy() *AppSpecSpecStaticSiteRoutes {
	if in == nil {
		return nil
	}
	out := new(AppSpecSpecStaticSiteRoutes)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSpecSpecWorker) DeepCopyInto(out *AppSpecSpecWorker) {
	*out = *in
	if in.BuildCommand != nil {
		in, out := &in.BuildCommand, &out.BuildCommand
		*out = new(string)
		**out = **in
	}
	if in.DockerfilePath != nil {
		in, out := &in.DockerfilePath, &out.DockerfilePath
		*out = new(string)
		**out = **in
	}
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]AppSpecSpecWorkerEnv, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnvironmentSlug != nil {
		in, out := &in.EnvironmentSlug, &out.EnvironmentSlug
		*out = new(string)
		**out = **in
	}
	if in.Git != nil {
		in, out := &in.Git, &out.Git
		*out = new(AppSpecSpecWorkerGit)
		(*in).DeepCopyInto(*out)
	}
	if in.Github != nil {
		in, out := &in.Github, &out.Github
		*out = new(AppSpecSpecWorkerGithub)
		(*in).DeepCopyInto(*out)
	}
	if in.Gitlab != nil {
		in, out := &in.Gitlab, &out.Gitlab
		*out = new(AppSpecSpecWorkerGitlab)
		(*in).DeepCopyInto(*out)
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(AppSpecSpecWorkerImage)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceCount != nil {
		in, out := &in.InstanceCount, &out.InstanceCount
		*out = new(int64)
		**out = **in
	}
	if in.InstanceSizeSlug != nil {
		in, out := &in.InstanceSizeSlug, &out.InstanceSizeSlug
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RunCommand != nil {
		in, out := &in.RunCommand, &out.RunCommand
		*out = new(string)
		**out = **in
	}
	if in.SourceDir != nil {
		in, out := &in.SourceDir, &out.SourceDir
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSpecSpecWorker.
func (in *AppSpecSpecWorker) DeepCopy() *AppSpecSpecWorker {
	if in == nil {
		return nil
	}
	out := new(AppSpecSpecWorker)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSpecSpecWorkerEnv) DeepCopyInto(out *AppSpecSpecWorkerEnv) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSpecSpecWorkerEnv.
func (in *AppSpecSpecWorkerEnv) DeepCopy() *AppSpecSpecWorkerEnv {
	if in == nil {
		return nil
	}
	out := new(AppSpecSpecWorkerEnv)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSpecSpecWorkerGit) DeepCopyInto(out *AppSpecSpecWorkerGit) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.RepoCloneURL != nil {
		in, out := &in.RepoCloneURL, &out.RepoCloneURL
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSpecSpecWorkerGit.
func (in *AppSpecSpecWorkerGit) DeepCopy() *AppSpecSpecWorkerGit {
	if in == nil {
		return nil
	}
	out := new(AppSpecSpecWorkerGit)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSpecSpecWorkerGithub) DeepCopyInto(out *AppSpecSpecWorkerGithub) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.DeployOnPush != nil {
		in, out := &in.DeployOnPush, &out.DeployOnPush
		*out = new(bool)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSpecSpecWorkerGithub.
func (in *AppSpecSpecWorkerGithub) DeepCopy() *AppSpecSpecWorkerGithub {
	if in == nil {
		return nil
	}
	out := new(AppSpecSpecWorkerGithub)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSpecSpecWorkerGitlab) DeepCopyInto(out *AppSpecSpecWorkerGitlab) {
	*out = *in
	if in.Branch != nil {
		in, out := &in.Branch, &out.Branch
		*out = new(string)
		**out = **in
	}
	if in.DeployOnPush != nil {
		in, out := &in.DeployOnPush, &out.DeployOnPush
		*out = new(bool)
		**out = **in
	}
	if in.Repo != nil {
		in, out := &in.Repo, &out.Repo
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSpecSpecWorkerGitlab.
func (in *AppSpecSpecWorkerGitlab) DeepCopy() *AppSpecSpecWorkerGitlab {
	if in == nil {
		return nil
	}
	out := new(AppSpecSpecWorkerGitlab)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSpecSpecWorkerImage) DeepCopyInto(out *AppSpecSpecWorkerImage) {
	*out = *in
	if in.Registry != nil {
		in, out := &in.Registry, &out.Registry
		*out = new(string)
		**out = **in
	}
	if in.RegistryType != nil {
		in, out := &in.RegistryType, &out.RegistryType
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSpecSpecWorkerImage.
func (in *AppSpecSpecWorkerImage) DeepCopy() *AppSpecSpecWorkerImage {
	if in == nil {
		return nil
	}
	out := new(AppSpecSpecWorkerImage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppStatus) DeepCopyInto(out *AppStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppStatus.
func (in *AppStatus) DeepCopy() *AppStatus {
	if in == nil {
		return nil
	}
	out := new(AppStatus)
	in.DeepCopyInto(out)
	return out
}
