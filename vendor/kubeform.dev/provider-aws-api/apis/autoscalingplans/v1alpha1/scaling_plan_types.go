/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type ScalingPlan struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ScalingPlanSpec   `json:"spec,omitempty"`
	Status            ScalingPlanStatus `json:"status,omitempty"`
}

type ScalingPlanSpec struct {
	ScalingPlanSpec2 `json:",inline"`
	// +optional
	KubeformOutput ScalingPlanSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type ScalingPlanSpecApplicationSourceTagFilter struct {
	Key *string `json:"key" tf:"key"`
	// +optional
	// +kubebuilder:validation:MaxItems=50
	Values []string `json:"values,omitempty" tf:"values"`
}

type ScalingPlanSpecApplicationSource struct {
	// +optional
	CloudformationStackArn *string `json:"cloudformationStackArn,omitempty" tf:"cloudformation_stack_arn"`
	// +optional
	// +kubebuilder:validation:MaxItems=50
	TagFilter []ScalingPlanSpecApplicationSourceTagFilter `json:"tagFilter,omitempty" tf:"tag_filter"`
}

type ScalingPlanSpecScalingInstructionCustomizedLoadMetricSpecification struct {
	// +optional
	Dimensions *map[string]string `json:"dimensions,omitempty" tf:"dimensions"`
	MetricName *string            `json:"metricName" tf:"metric_name"`
	Namespace  *string            `json:"namespace" tf:"namespace"`
	Statistic  *string            `json:"statistic" tf:"statistic"`
	// +optional
	Unit *string `json:"unit,omitempty" tf:"unit"`
}

type ScalingPlanSpecScalingInstructionPredefinedLoadMetricSpecification struct {
	PredefinedLoadMetricType *string `json:"predefinedLoadMetricType" tf:"predefined_load_metric_type"`
	// +optional
	ResourceLabel *string `json:"resourceLabel,omitempty" tf:"resource_label"`
}

type ScalingPlanSpecScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecification struct {
	// +optional
	Dimensions *map[string]string `json:"dimensions,omitempty" tf:"dimensions"`
	MetricName *string            `json:"metricName" tf:"metric_name"`
	Namespace  *string            `json:"namespace" tf:"namespace"`
	Statistic  *string            `json:"statistic" tf:"statistic"`
	// +optional
	Unit *string `json:"unit,omitempty" tf:"unit"`
}

type ScalingPlanSpecScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecification struct {
	PredefinedScalingMetricType *string `json:"predefinedScalingMetricType" tf:"predefined_scaling_metric_type"`
	// +optional
	ResourceLabel *string `json:"resourceLabel,omitempty" tf:"resource_label"`
}

type ScalingPlanSpecScalingInstructionTargetTrackingConfiguration struct {
	// +optional
	CustomizedScalingMetricSpecification *ScalingPlanSpecScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecification `json:"customizedScalingMetricSpecification,omitempty" tf:"customized_scaling_metric_specification"`
	// +optional
	DisableScaleIn *bool `json:"disableScaleIn,omitempty" tf:"disable_scale_in"`
	// +optional
	EstimatedInstanceWarmup *int64 `json:"estimatedInstanceWarmup,omitempty" tf:"estimated_instance_warmup"`
	// +optional
	PredefinedScalingMetricSpecification *ScalingPlanSpecScalingInstructionTargetTrackingConfigurationPredefinedScalingMetricSpecification `json:"predefinedScalingMetricSpecification,omitempty" tf:"predefined_scaling_metric_specification"`
	// +optional
	ScaleInCooldown *int64 `json:"scaleInCooldown,omitempty" tf:"scale_in_cooldown"`
	// +optional
	ScaleOutCooldown *int64   `json:"scaleOutCooldown,omitempty" tf:"scale_out_cooldown"`
	TargetValue      *float64 `json:"targetValue" tf:"target_value"`
}

type ScalingPlanSpecScalingInstruction struct {
	// +optional
	CustomizedLoadMetricSpecification *ScalingPlanSpecScalingInstructionCustomizedLoadMetricSpecification `json:"customizedLoadMetricSpecification,omitempty" tf:"customized_load_metric_specification"`
	// +optional
	DisableDynamicScaling *bool  `json:"disableDynamicScaling,omitempty" tf:"disable_dynamic_scaling"`
	MaxCapacity           *int64 `json:"maxCapacity" tf:"max_capacity"`
	MinCapacity           *int64 `json:"minCapacity" tf:"min_capacity"`
	// +optional
	PredefinedLoadMetricSpecification *ScalingPlanSpecScalingInstructionPredefinedLoadMetricSpecification `json:"predefinedLoadMetricSpecification,omitempty" tf:"predefined_load_metric_specification"`
	// +optional
	PredictiveScalingMaxCapacityBehavior *string `json:"predictiveScalingMaxCapacityBehavior,omitempty" tf:"predictive_scaling_max_capacity_behavior"`
	// +optional
	PredictiveScalingMaxCapacityBuffer *int64 `json:"predictiveScalingMaxCapacityBuffer,omitempty" tf:"predictive_scaling_max_capacity_buffer"`
	// +optional
	PredictiveScalingMode *string `json:"predictiveScalingMode,omitempty" tf:"predictive_scaling_mode"`
	ResourceID            *string `json:"resourceID" tf:"resource_id"`
	ScalableDimension     *string `json:"scalableDimension" tf:"scalable_dimension"`
	// +optional
	ScalingPolicyUpdateBehavior *string `json:"scalingPolicyUpdateBehavior,omitempty" tf:"scaling_policy_update_behavior"`
	// +optional
	ScheduledActionBufferTime *int64  `json:"scheduledActionBufferTime,omitempty" tf:"scheduled_action_buffer_time"`
	ServiceNamespace          *string `json:"serviceNamespace" tf:"service_namespace"`
	// +kubebuilder:validation:MaxItems=10
	// +kubebuilder:validation:MinItems=1
	TargetTrackingConfiguration []ScalingPlanSpecScalingInstructionTargetTrackingConfiguration `json:"targetTrackingConfiguration" tf:"target_tracking_configuration"`
}

type ScalingPlanSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	ApplicationSource *ScalingPlanSpecApplicationSource `json:"applicationSource" tf:"application_source"`
	Name              *string                           `json:"name" tf:"name"`
	// +kubebuilder:validation:MinItems=1
	ScalingInstruction []ScalingPlanSpecScalingInstruction `json:"scalingInstruction" tf:"scaling_instruction"`
	// +optional
	ScalingPlanVersion *int64 `json:"scalingPlanVersion,omitempty" tf:"scaling_plan_version"`
}

type ScalingPlanStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ScalingPlanList is a list of ScalingPlans
type ScalingPlanList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of ScalingPlan CRD objects
	Items []ScalingPlan `json:"items,omitempty"`
}
