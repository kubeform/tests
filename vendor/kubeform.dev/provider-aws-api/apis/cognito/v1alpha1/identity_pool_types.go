/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type IdentityPool struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              IdentityPoolSpec   `json:"spec,omitempty"`
	Status            IdentityPoolStatus `json:"status,omitempty"`
}

type IdentityPoolSpec struct {
	IdentityPoolSpec2 `json:",inline"`
	// +optional
	KubeformOutput IdentityPoolSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type IdentityPoolSpecCognitoIdentityProviders struct {
	// +optional
	ClientID *string `json:"clientID,omitempty" tf:"client_id"`
	// +optional
	ProviderName *string `json:"providerName,omitempty" tf:"provider_name"`
	// +optional
	ServerSideTokenCheck *bool `json:"serverSideTokenCheck,omitempty" tf:"server_side_token_check"`
}

type IdentityPoolSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	AllowUnauthenticatedIdentities *bool `json:"allowUnauthenticatedIdentities,omitempty" tf:"allow_unauthenticated_identities"`
	// +optional
	Arn *string `json:"arn,omitempty" tf:"arn"`
	// +optional
	CognitoIdentityProviders []IdentityPoolSpecCognitoIdentityProviders `json:"cognitoIdentityProviders,omitempty" tf:"cognito_identity_providers"`
	// +optional
	DeveloperProviderName *string `json:"developerProviderName,omitempty" tf:"developer_provider_name"`
	IdentityPoolName      *string `json:"identityPoolName" tf:"identity_pool_name"`
	// +optional
	OpenidConnectProviderArns []string `json:"openidConnectProviderArns,omitempty" tf:"openid_connect_provider_arns"`
	// +optional
	SamlProviderArns []string `json:"samlProviderArns,omitempty" tf:"saml_provider_arns"`
	// +optional
	SupportedLoginProviders *map[string]string `json:"supportedLoginProviders,omitempty" tf:"supported_login_providers"`
	// +optional
	Tags *map[string]string `json:"tags,omitempty" tf:"tags"`
}

type IdentityPoolStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// IdentityPoolList is a list of IdentityPools
type IdentityPoolList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of IdentityPool CRD objects
	Items []IdentityPool `json:"items,omitempty"`
}
