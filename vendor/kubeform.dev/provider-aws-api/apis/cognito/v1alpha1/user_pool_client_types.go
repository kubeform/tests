/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type UserPoolClient struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              UserPoolClientSpec   `json:"spec,omitempty"`
	Status            UserPoolClientStatus `json:"status,omitempty"`
}

type UserPoolClientSpec struct {
	UserPoolClientSpec2 `json:",inline"`
	// +optional
	KubeformOutput UserPoolClientSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type UserPoolClientSpecAnalyticsConfiguration struct {
	// +optional
	ApplicationArn *string `json:"applicationArn,omitempty" tf:"application_arn"`
	// +optional
	ApplicationID *string `json:"applicationID,omitempty" tf:"application_id"`
	// +optional
	ExternalID *string `json:"externalID,omitempty" tf:"external_id"`
	// +optional
	RoleArn *string `json:"roleArn,omitempty" tf:"role_arn"`
	// +optional
	UserDataShared *bool `json:"userDataShared,omitempty" tf:"user_data_shared"`
}

type UserPoolClientSpecTokenValidityUnits struct {
	// +optional
	AccessToken *string `json:"accessToken,omitempty" tf:"access_token"`
	// +optional
	IDToken *string `json:"IDToken,omitempty" tf:"id_token"`
	// +optional
	RefreshToken *string `json:"refreshToken,omitempty" tf:"refresh_token"`
}

type UserPoolClientSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`

	// +optional
	AccessTokenValidity *int64 `json:"accessTokenValidity,omitempty" tf:"access_token_validity"`
	// +optional
	// +kubebuilder:validation:MaxItems=3
	AllowedOauthFlows []string `json:"allowedOauthFlows,omitempty" tf:"allowed_oauth_flows"`
	// +optional
	AllowedOauthFlowsUserPoolClient *bool `json:"allowedOauthFlowsUserPoolClient,omitempty" tf:"allowed_oauth_flows_user_pool_client"`
	// +optional
	// +kubebuilder:validation:MaxItems=50
	AllowedOauthScopes []string `json:"allowedOauthScopes,omitempty" tf:"allowed_oauth_scopes"`
	// +optional
	AnalyticsConfiguration *UserPoolClientSpecAnalyticsConfiguration `json:"analyticsConfiguration,omitempty" tf:"analytics_configuration"`
	// +optional
	// +kubebuilder:validation:MaxItems=100
	CallbackUrls []string `json:"callbackUrls,omitempty" tf:"callback_urls"`
	// +optional
	ClientSecret *string `json:"-" sensitive:"true" tf:"client_secret"`
	// +optional
	DefaultRedirectURI *string `json:"defaultRedirectURI,omitempty" tf:"default_redirect_uri"`
	// +optional
	ExplicitAuthFlows []string `json:"explicitAuthFlows,omitempty" tf:"explicit_auth_flows"`
	// +optional
	GenerateSecret *bool `json:"generateSecret,omitempty" tf:"generate_secret"`
	// +optional
	IDTokenValidity *int64 `json:"IDTokenValidity,omitempty" tf:"id_token_validity"`
	// +optional
	// +kubebuilder:validation:MaxItems=100
	LogoutUrls []string `json:"logoutUrls,omitempty" tf:"logout_urls"`
	Name       *string  `json:"name" tf:"name"`
	// +optional
	PreventUserExistenceErrors *string `json:"preventUserExistenceErrors,omitempty" tf:"prevent_user_existence_errors"`
	// +optional
	ReadAttributes []string `json:"readAttributes,omitempty" tf:"read_attributes"`
	// +optional
	RefreshTokenValidity *int64 `json:"refreshTokenValidity,omitempty" tf:"refresh_token_validity"`
	// +optional
	SupportedIdentityProviders []string `json:"supportedIdentityProviders,omitempty" tf:"supported_identity_providers"`
	// +optional
	TokenValidityUnits *UserPoolClientSpecTokenValidityUnits `json:"tokenValidityUnits,omitempty" tf:"token_validity_units"`
	UserPoolID         *string                               `json:"userPoolID" tf:"user_pool_id"`
	// +optional
	WriteAttributes []string `json:"writeAttributes,omitempty" tf:"write_attributes"`
}

type UserPoolClientStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// UserPoolClientList is a list of UserPoolClients
type UserPoolClientList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of UserPoolClient CRD objects
	Items []UserPoolClient `json:"items,omitempty"`
}
