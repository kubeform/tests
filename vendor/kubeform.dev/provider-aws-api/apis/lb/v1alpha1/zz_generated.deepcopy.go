// +build !ignore_autogenerated

/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	apiv1alpha1 "kubeform.dev/apimachinery/api/v1alpha1"

	corev1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	v1 "kmodules.xyz/client-go/api/v1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CookieStickinessPolicy) DeepCopyInto(out *CookieStickinessPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CookieStickinessPolicy.
func (in *CookieStickinessPolicy) DeepCopy() *CookieStickinessPolicy {
	if in == nil {
		return nil
	}
	out := new(CookieStickinessPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CookieStickinessPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CookieStickinessPolicyList) DeepCopyInto(out *CookieStickinessPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CookieStickinessPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CookieStickinessPolicyList.
func (in *CookieStickinessPolicyList) DeepCopy() *CookieStickinessPolicyList {
	if in == nil {
		return nil
	}
	out := new(CookieStickinessPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CookieStickinessPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CookieStickinessPolicySpec) DeepCopyInto(out *CookieStickinessPolicySpec) {
	*out = *in
	in.CookieStickinessPolicySpec2.DeepCopyInto(&out.CookieStickinessPolicySpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CookieStickinessPolicySpec.
func (in *CookieStickinessPolicySpec) DeepCopy() *CookieStickinessPolicySpec {
	if in == nil {
		return nil
	}
	out := new(CookieStickinessPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CookieStickinessPolicySpec2) DeepCopyInto(out *CookieStickinessPolicySpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.CookieExpirationPeriod != nil {
		in, out := &in.CookieExpirationPeriod, &out.CookieExpirationPeriod
		*out = new(int64)
		**out = **in
	}
	if in.LbPort != nil {
		in, out := &in.LbPort, &out.LbPort
		*out = new(int64)
		**out = **in
	}
	if in.LoadBalancer != nil {
		in, out := &in.LoadBalancer, &out.LoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CookieStickinessPolicySpec2.
func (in *CookieStickinessPolicySpec2) DeepCopy() *CookieStickinessPolicySpec2 {
	if in == nil {
		return nil
	}
	out := new(CookieStickinessPolicySpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CookieStickinessPolicyStatus) DeepCopyInto(out *CookieStickinessPolicyStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CookieStickinessPolicyStatus.
func (in *CookieStickinessPolicyStatus) DeepCopy() *CookieStickinessPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(CookieStickinessPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Lb) DeepCopyInto(out *Lb) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Lb.
func (in *Lb) DeepCopy() *Lb {
	if in == nil {
		return nil
	}
	out := new(Lb)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Lb) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LbList) DeepCopyInto(out *LbList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Lb, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LbList.
func (in *LbList) DeepCopy() *LbList {
	if in == nil {
		return nil
	}
	out := new(LbList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LbList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LbSpec) DeepCopyInto(out *LbSpec) {
	*out = *in
	in.LbSpec2.DeepCopyInto(&out.LbSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LbSpec.
func (in *LbSpec) DeepCopy() *LbSpec {
	if in == nil {
		return nil
	}
	out := new(LbSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LbSpec2) DeepCopyInto(out *LbSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.AccessLogs != nil {
		in, out := &in.AccessLogs, &out.AccessLogs
		*out = new(LbSpecAccessLogs)
		(*in).DeepCopyInto(*out)
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ArnSuffix != nil {
		in, out := &in.ArnSuffix, &out.ArnSuffix
		*out = new(string)
		**out = **in
	}
	if in.CustomerOwnedIpv4Pool != nil {
		in, out := &in.CustomerOwnedIpv4Pool, &out.CustomerOwnedIpv4Pool
		*out = new(string)
		**out = **in
	}
	if in.DnsName != nil {
		in, out := &in.DnsName, &out.DnsName
		*out = new(string)
		**out = **in
	}
	if in.DropInvalidHeaderFields != nil {
		in, out := &in.DropInvalidHeaderFields, &out.DropInvalidHeaderFields
		*out = new(bool)
		**out = **in
	}
	if in.EnableCrossZoneLoadBalancing != nil {
		in, out := &in.EnableCrossZoneLoadBalancing, &out.EnableCrossZoneLoadBalancing
		*out = new(bool)
		**out = **in
	}
	if in.EnableDeletionProtection != nil {
		in, out := &in.EnableDeletionProtection, &out.EnableDeletionProtection
		*out = new(bool)
		**out = **in
	}
	if in.EnableHttp2 != nil {
		in, out := &in.EnableHttp2, &out.EnableHttp2
		*out = new(bool)
		**out = **in
	}
	if in.IdleTimeout != nil {
		in, out := &in.IdleTimeout, &out.IdleTimeout
		*out = new(int64)
		**out = **in
	}
	if in.Internal != nil {
		in, out := &in.Internal, &out.Internal
		*out = new(bool)
		**out = **in
	}
	if in.IpAddressType != nil {
		in, out := &in.IpAddressType, &out.IpAddressType
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerType != nil {
		in, out := &in.LoadBalancerType, &out.LoadBalancerType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NamePrefix != nil {
		in, out := &in.NamePrefix, &out.NamePrefix
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SubnetMapping != nil {
		in, out := &in.SubnetMapping, &out.SubnetMapping
		*out = make([]LbSpecSubnetMapping, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.VpcID != nil {
		in, out := &in.VpcID, &out.VpcID
		*out = new(string)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LbSpec2.
func (in *LbSpec2) DeepCopy() *LbSpec2 {
	if in == nil {
		return nil
	}
	out := new(LbSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LbSpecAccessLogs) DeepCopyInto(out *LbSpecAccessLogs) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LbSpecAccessLogs.
func (in *LbSpecAccessLogs) DeepCopy() *LbSpecAccessLogs {
	if in == nil {
		return nil
	}
	out := new(LbSpecAccessLogs)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LbSpecSubnetMapping) DeepCopyInto(out *LbSpecSubnetMapping) {
	*out = *in
	if in.AllocationID != nil {
		in, out := &in.AllocationID, &out.AllocationID
		*out = new(string)
		**out = **in
	}
	if in.Ipv6Address != nil {
		in, out := &in.Ipv6Address, &out.Ipv6Address
		*out = new(string)
		**out = **in
	}
	if in.OutpostID != nil {
		in, out := &in.OutpostID, &out.OutpostID
		*out = new(string)
		**out = **in
	}
	if in.PrivateIpv4Address != nil {
		in, out := &in.PrivateIpv4Address, &out.PrivateIpv4Address
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LbSpecSubnetMapping.
func (in *LbSpecSubnetMapping) DeepCopy() *LbSpecSubnetMapping {
	if in == nil {
		return nil
	}
	out := new(LbSpecSubnetMapping)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LbStatus) DeepCopyInto(out *LbStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LbStatus.
func (in *LbStatus) DeepCopy() *LbStatus {
	if in == nil {
		return nil
	}
	out := new(LbStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Listener) DeepCopyInto(out *Listener) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Listener.
func (in *Listener) DeepCopy() *Listener {
	if in == nil {
		return nil
	}
	out := new(Listener)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Listener) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerCertificate) DeepCopyInto(out *ListenerCertificate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerCertificate.
func (in *ListenerCertificate) DeepCopy() *ListenerCertificate {
	if in == nil {
		return nil
	}
	out := new(ListenerCertificate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ListenerCertificate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerCertificateList) DeepCopyInto(out *ListenerCertificateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ListenerCertificate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerCertificateList.
func (in *ListenerCertificateList) DeepCopy() *ListenerCertificateList {
	if in == nil {
		return nil
	}
	out := new(ListenerCertificateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ListenerCertificateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerCertificateSpec) DeepCopyInto(out *ListenerCertificateSpec) {
	*out = *in
	in.ListenerCertificateSpec2.DeepCopyInto(&out.ListenerCertificateSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerCertificateSpec.
func (in *ListenerCertificateSpec) DeepCopy() *ListenerCertificateSpec {
	if in == nil {
		return nil
	}
	out := new(ListenerCertificateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerCertificateSpec2) DeepCopyInto(out *ListenerCertificateSpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.CertificateArn != nil {
		in, out := &in.CertificateArn, &out.CertificateArn
		*out = new(string)
		**out = **in
	}
	if in.ListenerArn != nil {
		in, out := &in.ListenerArn, &out.ListenerArn
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerCertificateSpec2.
func (in *ListenerCertificateSpec2) DeepCopy() *ListenerCertificateSpec2 {
	if in == nil {
		return nil
	}
	out := new(ListenerCertificateSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerCertificateStatus) DeepCopyInto(out *ListenerCertificateStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerCertificateStatus.
func (in *ListenerCertificateStatus) DeepCopy() *ListenerCertificateStatus {
	if in == nil {
		return nil
	}
	out := new(ListenerCertificateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerList) DeepCopyInto(out *ListenerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Listener, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerList.
func (in *ListenerList) DeepCopy() *ListenerList {
	if in == nil {
		return nil
	}
	out := new(ListenerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ListenerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerRule) DeepCopyInto(out *ListenerRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerRule.
func (in *ListenerRule) DeepCopy() *ListenerRule {
	if in == nil {
		return nil
	}
	out := new(ListenerRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ListenerRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerRuleList) DeepCopyInto(out *ListenerRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ListenerRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerRuleList.
func (in *ListenerRuleList) DeepCopy() *ListenerRuleList {
	if in == nil {
		return nil
	}
	out := new(ListenerRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ListenerRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerRuleSpec) DeepCopyInto(out *ListenerRuleSpec) {
	*out = *in
	in.ListenerRuleSpec2.DeepCopyInto(&out.ListenerRuleSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerRuleSpec.
func (in *ListenerRuleSpec) DeepCopy() *ListenerRuleSpec {
	if in == nil {
		return nil
	}
	out := new(ListenerRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerRuleSpec2) DeepCopyInto(out *ListenerRuleSpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(corev1.LocalObjectReference)
		**out = **in
	}
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]ListenerRuleSpecAction, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = make([]ListenerRuleSpecCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ListenerArn != nil {
		in, out := &in.ListenerArn, &out.ListenerArn
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerRuleSpec2.
func (in *ListenerRuleSpec2) DeepCopy() *ListenerRuleSpec2 {
	if in == nil {
		return nil
	}
	out := new(ListenerRuleSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerRuleSpecAction) DeepCopyInto(out *ListenerRuleSpecAction) {
	*out = *in
	if in.AuthenticateCognito != nil {
		in, out := &in.AuthenticateCognito, &out.AuthenticateCognito
		*out = new(ListenerRuleSpecActionAuthenticateCognito)
		(*in).DeepCopyInto(*out)
	}
	if in.AuthenticateOidc != nil {
		in, out := &in.AuthenticateOidc, &out.AuthenticateOidc
		*out = new(ListenerRuleSpecActionAuthenticateOidc)
		(*in).DeepCopyInto(*out)
	}
	if in.FixedResponse != nil {
		in, out := &in.FixedResponse, &out.FixedResponse
		*out = new(ListenerRuleSpecActionFixedResponse)
		(*in).DeepCopyInto(*out)
	}
	if in.Forward != nil {
		in, out := &in.Forward, &out.Forward
		*out = new(ListenerRuleSpecActionForward)
		(*in).DeepCopyInto(*out)
	}
	if in.Order != nil {
		in, out := &in.Order, &out.Order
		*out = new(int64)
		**out = **in
	}
	if in.Redirect != nil {
		in, out := &in.Redirect, &out.Redirect
		*out = new(ListenerRuleSpecActionRedirect)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetGroupArn != nil {
		in, out := &in.TargetGroupArn, &out.TargetGroupArn
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerRuleSpecAction.
func (in *ListenerRuleSpecAction) DeepCopy() *ListenerRuleSpecAction {
	if in == nil {
		return nil
	}
	out := new(ListenerRuleSpecAction)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerRuleSpecActionAuthenticateCognito) DeepCopyInto(out *ListenerRuleSpecActionAuthenticateCognito) {
	*out = *in
	if in.AuthenticationRequestExtraParams != nil {
		in, out := &in.AuthenticationRequestExtraParams, &out.AuthenticationRequestExtraParams
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.OnUnauthenticatedRequest != nil {
		in, out := &in.OnUnauthenticatedRequest, &out.OnUnauthenticatedRequest
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.SessionCookieName != nil {
		in, out := &in.SessionCookieName, &out.SessionCookieName
		*out = new(string)
		**out = **in
	}
	if in.SessionTimeout != nil {
		in, out := &in.SessionTimeout, &out.SessionTimeout
		*out = new(int64)
		**out = **in
	}
	if in.UserPoolArn != nil {
		in, out := &in.UserPoolArn, &out.UserPoolArn
		*out = new(string)
		**out = **in
	}
	if in.UserPoolClientID != nil {
		in, out := &in.UserPoolClientID, &out.UserPoolClientID
		*out = new(string)
		**out = **in
	}
	if in.UserPoolDomain != nil {
		in, out := &in.UserPoolDomain, &out.UserPoolDomain
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerRuleSpecActionAuthenticateCognito.
func (in *ListenerRuleSpecActionAuthenticateCognito) DeepCopy() *ListenerRuleSpecActionAuthenticateCognito {
	if in == nil {
		return nil
	}
	out := new(ListenerRuleSpecActionAuthenticateCognito)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerRuleSpecActionAuthenticateOidc) DeepCopyInto(out *ListenerRuleSpecActionAuthenticateOidc) {
	*out = *in
	if in.AuthenticationRequestExtraParams != nil {
		in, out := &in.AuthenticationRequestExtraParams, &out.AuthenticationRequestExtraParams
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.AuthorizationEndpoint != nil {
		in, out := &in.AuthorizationEndpoint, &out.AuthorizationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecret != nil {
		in, out := &in.ClientSecret, &out.ClientSecret
		*out = new(string)
		**out = **in
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.OnUnauthenticatedRequest != nil {
		in, out := &in.OnUnauthenticatedRequest, &out.OnUnauthenticatedRequest
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.SessionCookieName != nil {
		in, out := &in.SessionCookieName, &out.SessionCookieName
		*out = new(string)
		**out = **in
	}
	if in.SessionTimeout != nil {
		in, out := &in.SessionTimeout, &out.SessionTimeout
		*out = new(int64)
		**out = **in
	}
	if in.TokenEndpoint != nil {
		in, out := &in.TokenEndpoint, &out.TokenEndpoint
		*out = new(string)
		**out = **in
	}
	if in.UserInfoEndpoint != nil {
		in, out := &in.UserInfoEndpoint, &out.UserInfoEndpoint
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerRuleSpecActionAuthenticateOidc.
func (in *ListenerRuleSpecActionAuthenticateOidc) DeepCopy() *ListenerRuleSpecActionAuthenticateOidc {
	if in == nil {
		return nil
	}
	out := new(ListenerRuleSpecActionAuthenticateOidc)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerRuleSpecActionFixedResponse) DeepCopyInto(out *ListenerRuleSpecActionFixedResponse) {
	*out = *in
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.MessageBody != nil {
		in, out := &in.MessageBody, &out.MessageBody
		*out = new(string)
		**out = **in
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerRuleSpecActionFixedResponse.
func (in *ListenerRuleSpecActionFixedResponse) DeepCopy() *ListenerRuleSpecActionFixedResponse {
	if in == nil {
		return nil
	}
	out := new(ListenerRuleSpecActionFixedResponse)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerRuleSpecActionForward) DeepCopyInto(out *ListenerRuleSpecActionForward) {
	*out = *in
	if in.Stickiness != nil {
		in, out := &in.Stickiness, &out.Stickiness
		*out = new(ListenerRuleSpecActionForwardStickiness)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetGroup != nil {
		in, out := &in.TargetGroup, &out.TargetGroup
		*out = make([]ListenerRuleSpecActionForwardTargetGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerRuleSpecActionForward.
func (in *ListenerRuleSpecActionForward) DeepCopy() *ListenerRuleSpecActionForward {
	if in == nil {
		return nil
	}
	out := new(ListenerRuleSpecActionForward)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerRuleSpecActionForwardStickiness) DeepCopyInto(out *ListenerRuleSpecActionForwardStickiness) {
	*out = *in
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(int64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerRuleSpecActionForwardStickiness.
func (in *ListenerRuleSpecActionForwardStickiness) DeepCopy() *ListenerRuleSpecActionForwardStickiness {
	if in == nil {
		return nil
	}
	out := new(ListenerRuleSpecActionForwardStickiness)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerRuleSpecActionForwardTargetGroup) DeepCopyInto(out *ListenerRuleSpecActionForwardTargetGroup) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerRuleSpecActionForwardTargetGroup.
func (in *ListenerRuleSpecActionForwardTargetGroup) DeepCopy() *ListenerRuleSpecActionForwardTargetGroup {
	if in == nil {
		return nil
	}
	out := new(ListenerRuleSpecActionForwardTargetGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerRuleSpecActionRedirect) DeepCopyInto(out *ListenerRuleSpecActionRedirect) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerRuleSpecActionRedirect.
func (in *ListenerRuleSpecActionRedirect) DeepCopy() *ListenerRuleSpecActionRedirect {
	if in == nil {
		return nil
	}
	out := new(ListenerRuleSpecActionRedirect)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerRuleSpecCondition) DeepCopyInto(out *ListenerRuleSpecCondition) {
	*out = *in
	if in.HostHeader != nil {
		in, out := &in.HostHeader, &out.HostHeader
		*out = new(ListenerRuleSpecConditionHostHeader)
		(*in).DeepCopyInto(*out)
	}
	if in.HttpHeader != nil {
		in, out := &in.HttpHeader, &out.HttpHeader
		*out = new(ListenerRuleSpecConditionHttpHeader)
		(*in).DeepCopyInto(*out)
	}
	if in.HttpRequestMethod != nil {
		in, out := &in.HttpRequestMethod, &out.HttpRequestMethod
		*out = new(ListenerRuleSpecConditionHttpRequestMethod)
		(*in).DeepCopyInto(*out)
	}
	if in.PathPattern != nil {
		in, out := &in.PathPattern, &out.PathPattern
		*out = new(ListenerRuleSpecConditionPathPattern)
		(*in).DeepCopyInto(*out)
	}
	if in.QueryString != nil {
		in, out := &in.QueryString, &out.QueryString
		*out = make([]ListenerRuleSpecConditionQueryString, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceIP != nil {
		in, out := &in.SourceIP, &out.SourceIP
		*out = new(ListenerRuleSpecConditionSourceIP)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerRuleSpecCondition.
func (in *ListenerRuleSpecCondition) DeepCopy() *ListenerRuleSpecCondition {
	if in == nil {
		return nil
	}
	out := new(ListenerRuleSpecCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerRuleSpecConditionHostHeader) DeepCopyInto(out *ListenerRuleSpecConditionHostHeader) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerRuleSpecConditionHostHeader.
func (in *ListenerRuleSpecConditionHostHeader) DeepCopy() *ListenerRuleSpecConditionHostHeader {
	if in == nil {
		return nil
	}
	out := new(ListenerRuleSpecConditionHostHeader)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerRuleSpecConditionHttpHeader) DeepCopyInto(out *ListenerRuleSpecConditionHttpHeader) {
	*out = *in
	if in.HttpHeaderName != nil {
		in, out := &in.HttpHeaderName, &out.HttpHeaderName
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerRuleSpecConditionHttpHeader.
func (in *ListenerRuleSpecConditionHttpHeader) DeepCopy() *ListenerRuleSpecConditionHttpHeader {
	if in == nil {
		return nil
	}
	out := new(ListenerRuleSpecConditionHttpHeader)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerRuleSpecConditionHttpRequestMethod) DeepCopyInto(out *ListenerRuleSpecConditionHttpRequestMethod) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerRuleSpecConditionHttpRequestMethod.
func (in *ListenerRuleSpecConditionHttpRequestMethod) DeepCopy() *ListenerRuleSpecConditionHttpRequestMethod {
	if in == nil {
		return nil
	}
	out := new(ListenerRuleSpecConditionHttpRequestMethod)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerRuleSpecConditionPathPattern) DeepCopyInto(out *ListenerRuleSpecConditionPathPattern) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerRuleSpecConditionPathPattern.
func (in *ListenerRuleSpecConditionPathPattern) DeepCopy() *ListenerRuleSpecConditionPathPattern {
	if in == nil {
		return nil
	}
	out := new(ListenerRuleSpecConditionPathPattern)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerRuleSpecConditionQueryString) DeepCopyInto(out *ListenerRuleSpecConditionQueryString) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerRuleSpecConditionQueryString.
func (in *ListenerRuleSpecConditionQueryString) DeepCopy() *ListenerRuleSpecConditionQueryString {
	if in == nil {
		return nil
	}
	out := new(ListenerRuleSpecConditionQueryString)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerRuleSpecConditionSourceIP) DeepCopyInto(out *ListenerRuleSpecConditionSourceIP) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerRuleSpecConditionSourceIP.
func (in *ListenerRuleSpecConditionSourceIP) DeepCopy() *ListenerRuleSpecConditionSourceIP {
	if in == nil {
		return nil
	}
	out := new(ListenerRuleSpecConditionSourceIP)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerRuleStatus) DeepCopyInto(out *ListenerRuleStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerRuleStatus.
func (in *ListenerRuleStatus) DeepCopy() *ListenerRuleStatus {
	if in == nil {
		return nil
	}
	out := new(ListenerRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerSpec) DeepCopyInto(out *ListenerSpec) {
	*out = *in
	in.ListenerSpec2.DeepCopyInto(&out.ListenerSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerSpec.
func (in *ListenerSpec) DeepCopy() *ListenerSpec {
	if in == nil {
		return nil
	}
	out := new(ListenerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerSpec2) DeepCopyInto(out *ListenerSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(corev1.LocalObjectReference)
		**out = **in
	}
	if in.AlpnPolicy != nil {
		in, out := &in.AlpnPolicy, &out.AlpnPolicy
		*out = new(string)
		**out = **in
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.CertificateArn != nil {
		in, out := &in.CertificateArn, &out.CertificateArn
		*out = new(string)
		**out = **in
	}
	if in.DefaultAction != nil {
		in, out := &in.DefaultAction, &out.DefaultAction
		*out = make([]ListenerSpecDefaultAction, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancerArn != nil {
		in, out := &in.LoadBalancerArn, &out.LoadBalancerArn
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SslPolicy != nil {
		in, out := &in.SslPolicy, &out.SslPolicy
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerSpec2.
func (in *ListenerSpec2) DeepCopy() *ListenerSpec2 {
	if in == nil {
		return nil
	}
	out := new(ListenerSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerSpecDefaultAction) DeepCopyInto(out *ListenerSpecDefaultAction) {
	*out = *in
	if in.AuthenticateCognito != nil {
		in, out := &in.AuthenticateCognito, &out.AuthenticateCognito
		*out = new(ListenerSpecDefaultActionAuthenticateCognito)
		(*in).DeepCopyInto(*out)
	}
	if in.AuthenticateOidc != nil {
		in, out := &in.AuthenticateOidc, &out.AuthenticateOidc
		*out = new(ListenerSpecDefaultActionAuthenticateOidc)
		(*in).DeepCopyInto(*out)
	}
	if in.FixedResponse != nil {
		in, out := &in.FixedResponse, &out.FixedResponse
		*out = new(ListenerSpecDefaultActionFixedResponse)
		(*in).DeepCopyInto(*out)
	}
	if in.Forward != nil {
		in, out := &in.Forward, &out.Forward
		*out = new(ListenerSpecDefaultActionForward)
		(*in).DeepCopyInto(*out)
	}
	if in.Order != nil {
		in, out := &in.Order, &out.Order
		*out = new(int64)
		**out = **in
	}
	if in.Redirect != nil {
		in, out := &in.Redirect, &out.Redirect
		*out = new(ListenerSpecDefaultActionRedirect)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetGroupArn != nil {
		in, out := &in.TargetGroupArn, &out.TargetGroupArn
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerSpecDefaultAction.
func (in *ListenerSpecDefaultAction) DeepCopy() *ListenerSpecDefaultAction {
	if in == nil {
		return nil
	}
	out := new(ListenerSpecDefaultAction)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerSpecDefaultActionAuthenticateCognito) DeepCopyInto(out *ListenerSpecDefaultActionAuthenticateCognito) {
	*out = *in
	if in.AuthenticationRequestExtraParams != nil {
		in, out := &in.AuthenticationRequestExtraParams, &out.AuthenticationRequestExtraParams
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.OnUnauthenticatedRequest != nil {
		in, out := &in.OnUnauthenticatedRequest, &out.OnUnauthenticatedRequest
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.SessionCookieName != nil {
		in, out := &in.SessionCookieName, &out.SessionCookieName
		*out = new(string)
		**out = **in
	}
	if in.SessionTimeout != nil {
		in, out := &in.SessionTimeout, &out.SessionTimeout
		*out = new(int64)
		**out = **in
	}
	if in.UserPoolArn != nil {
		in, out := &in.UserPoolArn, &out.UserPoolArn
		*out = new(string)
		**out = **in
	}
	if in.UserPoolClientID != nil {
		in, out := &in.UserPoolClientID, &out.UserPoolClientID
		*out = new(string)
		**out = **in
	}
	if in.UserPoolDomain != nil {
		in, out := &in.UserPoolDomain, &out.UserPoolDomain
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerSpecDefaultActionAuthenticateCognito.
func (in *ListenerSpecDefaultActionAuthenticateCognito) DeepCopy() *ListenerSpecDefaultActionAuthenticateCognito {
	if in == nil {
		return nil
	}
	out := new(ListenerSpecDefaultActionAuthenticateCognito)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerSpecDefaultActionAuthenticateOidc) DeepCopyInto(out *ListenerSpecDefaultActionAuthenticateOidc) {
	*out = *in
	if in.AuthenticationRequestExtraParams != nil {
		in, out := &in.AuthenticationRequestExtraParams, &out.AuthenticationRequestExtraParams
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.AuthorizationEndpoint != nil {
		in, out := &in.AuthorizationEndpoint, &out.AuthorizationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecret != nil {
		in, out := &in.ClientSecret, &out.ClientSecret
		*out = new(string)
		**out = **in
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.OnUnauthenticatedRequest != nil {
		in, out := &in.OnUnauthenticatedRequest, &out.OnUnauthenticatedRequest
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.SessionCookieName != nil {
		in, out := &in.SessionCookieName, &out.SessionCookieName
		*out = new(string)
		**out = **in
	}
	if in.SessionTimeout != nil {
		in, out := &in.SessionTimeout, &out.SessionTimeout
		*out = new(int64)
		**out = **in
	}
	if in.TokenEndpoint != nil {
		in, out := &in.TokenEndpoint, &out.TokenEndpoint
		*out = new(string)
		**out = **in
	}
	if in.UserInfoEndpoint != nil {
		in, out := &in.UserInfoEndpoint, &out.UserInfoEndpoint
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerSpecDefaultActionAuthenticateOidc.
func (in *ListenerSpecDefaultActionAuthenticateOidc) DeepCopy() *ListenerSpecDefaultActionAuthenticateOidc {
	if in == nil {
		return nil
	}
	out := new(ListenerSpecDefaultActionAuthenticateOidc)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerSpecDefaultActionFixedResponse) DeepCopyInto(out *ListenerSpecDefaultActionFixedResponse) {
	*out = *in
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.MessageBody != nil {
		in, out := &in.MessageBody, &out.MessageBody
		*out = new(string)
		**out = **in
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerSpecDefaultActionFixedResponse.
func (in *ListenerSpecDefaultActionFixedResponse) DeepCopy() *ListenerSpecDefaultActionFixedResponse {
	if in == nil {
		return nil
	}
	out := new(ListenerSpecDefaultActionFixedResponse)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerSpecDefaultActionForward) DeepCopyInto(out *ListenerSpecDefaultActionForward) {
	*out = *in
	if in.Stickiness != nil {
		in, out := &in.Stickiness, &out.Stickiness
		*out = new(ListenerSpecDefaultActionForwardStickiness)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetGroup != nil {
		in, out := &in.TargetGroup, &out.TargetGroup
		*out = make([]ListenerSpecDefaultActionForwardTargetGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerSpecDefaultActionForward.
func (in *ListenerSpecDefaultActionForward) DeepCopy() *ListenerSpecDefaultActionForward {
	if in == nil {
		return nil
	}
	out := new(ListenerSpecDefaultActionForward)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerSpecDefaultActionForwardStickiness) DeepCopyInto(out *ListenerSpecDefaultActionForwardStickiness) {
	*out = *in
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(int64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerSpecDefaultActionForwardStickiness.
func (in *ListenerSpecDefaultActionForwardStickiness) DeepCopy() *ListenerSpecDefaultActionForwardStickiness {
	if in == nil {
		return nil
	}
	out := new(ListenerSpecDefaultActionForwardStickiness)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerSpecDefaultActionForwardTargetGroup) DeepCopyInto(out *ListenerSpecDefaultActionForwardTargetGroup) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerSpecDefaultActionForwardTargetGroup.
func (in *ListenerSpecDefaultActionForwardTargetGroup) DeepCopy() *ListenerSpecDefaultActionForwardTargetGroup {
	if in == nil {
		return nil
	}
	out := new(ListenerSpecDefaultActionForwardTargetGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerSpecDefaultActionRedirect) DeepCopyInto(out *ListenerSpecDefaultActionRedirect) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerSpecDefaultActionRedirect.
func (in *ListenerSpecDefaultActionRedirect) DeepCopy() *ListenerSpecDefaultActionRedirect {
	if in == nil {
		return nil
	}
	out := new(ListenerSpecDefaultActionRedirect)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ListenerStatus) DeepCopyInto(out *ListenerStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ListenerStatus.
func (in *ListenerStatus) DeepCopy() *ListenerStatus {
	if in == nil {
		return nil
	}
	out := new(ListenerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SslNegotiationPolicy) DeepCopyInto(out *SslNegotiationPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SslNegotiationPolicy.
func (in *SslNegotiationPolicy) DeepCopy() *SslNegotiationPolicy {
	if in == nil {
		return nil
	}
	out := new(SslNegotiationPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SslNegotiationPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SslNegotiationPolicyList) DeepCopyInto(out *SslNegotiationPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SslNegotiationPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SslNegotiationPolicyList.
func (in *SslNegotiationPolicyList) DeepCopy() *SslNegotiationPolicyList {
	if in == nil {
		return nil
	}
	out := new(SslNegotiationPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SslNegotiationPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SslNegotiationPolicySpec) DeepCopyInto(out *SslNegotiationPolicySpec) {
	*out = *in
	in.SslNegotiationPolicySpec2.DeepCopyInto(&out.SslNegotiationPolicySpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SslNegotiationPolicySpec.
func (in *SslNegotiationPolicySpec) DeepCopy() *SslNegotiationPolicySpec {
	if in == nil {
		return nil
	}
	out := new(SslNegotiationPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SslNegotiationPolicySpec2) DeepCopyInto(out *SslNegotiationPolicySpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.Attribute != nil {
		in, out := &in.Attribute, &out.Attribute
		*out = make([]SslNegotiationPolicySpecAttribute, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LbPort != nil {
		in, out := &in.LbPort, &out.LbPort
		*out = new(int64)
		**out = **in
	}
	if in.LoadBalancer != nil {
		in, out := &in.LoadBalancer, &out.LoadBalancer
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SslNegotiationPolicySpec2.
func (in *SslNegotiationPolicySpec2) DeepCopy() *SslNegotiationPolicySpec2 {
	if in == nil {
		return nil
	}
	out := new(SslNegotiationPolicySpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SslNegotiationPolicySpecAttribute) DeepCopyInto(out *SslNegotiationPolicySpecAttribute) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SslNegotiationPolicySpecAttribute.
func (in *SslNegotiationPolicySpecAttribute) DeepCopy() *SslNegotiationPolicySpecAttribute {
	if in == nil {
		return nil
	}
	out := new(SslNegotiationPolicySpecAttribute)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SslNegotiationPolicyStatus) DeepCopyInto(out *SslNegotiationPolicyStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SslNegotiationPolicyStatus.
func (in *SslNegotiationPolicyStatus) DeepCopy() *SslNegotiationPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(SslNegotiationPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGroup) DeepCopyInto(out *TargetGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGroup.
func (in *TargetGroup) DeepCopy() *TargetGroup {
	if in == nil {
		return nil
	}
	out := new(TargetGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TargetGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGroupAttachment) DeepCopyInto(out *TargetGroupAttachment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGroupAttachment.
func (in *TargetGroupAttachment) DeepCopy() *TargetGroupAttachment {
	if in == nil {
		return nil
	}
	out := new(TargetGroupAttachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TargetGroupAttachment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGroupAttachmentList) DeepCopyInto(out *TargetGroupAttachmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TargetGroupAttachment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGroupAttachmentList.
func (in *TargetGroupAttachmentList) DeepCopy() *TargetGroupAttachmentList {
	if in == nil {
		return nil
	}
	out := new(TargetGroupAttachmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TargetGroupAttachmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGroupAttachmentSpec) DeepCopyInto(out *TargetGroupAttachmentSpec) {
	*out = *in
	in.TargetGroupAttachmentSpec2.DeepCopyInto(&out.TargetGroupAttachmentSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGroupAttachmentSpec.
func (in *TargetGroupAttachmentSpec) DeepCopy() *TargetGroupAttachmentSpec {
	if in == nil {
		return nil
	}
	out := new(TargetGroupAttachmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGroupAttachmentSpec2) DeepCopyInto(out *TargetGroupAttachmentSpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
	if in.TargetGroupArn != nil {
		in, out := &in.TargetGroupArn, &out.TargetGroupArn
		*out = new(string)
		**out = **in
	}
	if in.TargetID != nil {
		in, out := &in.TargetID, &out.TargetID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGroupAttachmentSpec2.
func (in *TargetGroupAttachmentSpec2) DeepCopy() *TargetGroupAttachmentSpec2 {
	if in == nil {
		return nil
	}
	out := new(TargetGroupAttachmentSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGroupAttachmentStatus) DeepCopyInto(out *TargetGroupAttachmentStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGroupAttachmentStatus.
func (in *TargetGroupAttachmentStatus) DeepCopy() *TargetGroupAttachmentStatus {
	if in == nil {
		return nil
	}
	out := new(TargetGroupAttachmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGroupList) DeepCopyInto(out *TargetGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TargetGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGroupList.
func (in *TargetGroupList) DeepCopy() *TargetGroupList {
	if in == nil {
		return nil
	}
	out := new(TargetGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TargetGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGroupSpec) DeepCopyInto(out *TargetGroupSpec) {
	*out = *in
	in.TargetGroupSpec2.DeepCopyInto(&out.TargetGroupSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGroupSpec.
func (in *TargetGroupSpec) DeepCopy() *TargetGroupSpec {
	if in == nil {
		return nil
	}
	out := new(TargetGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGroupSpec2) DeepCopyInto(out *TargetGroupSpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.ArnSuffix != nil {
		in, out := &in.ArnSuffix, &out.ArnSuffix
		*out = new(string)
		**out = **in
	}
	if in.DeregistrationDelay != nil {
		in, out := &in.DeregistrationDelay, &out.DeregistrationDelay
		*out = new(int64)
		**out = **in
	}
	if in.HealthCheck != nil {
		in, out := &in.HealthCheck, &out.HealthCheck
		*out = new(TargetGroupSpecHealthCheck)
		(*in).DeepCopyInto(*out)
	}
	if in.LambdaMultiValueHeadersEnabled != nil {
		in, out := &in.LambdaMultiValueHeadersEnabled, &out.LambdaMultiValueHeadersEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LoadBalancingAlgorithmType != nil {
		in, out := &in.LoadBalancingAlgorithmType, &out.LoadBalancingAlgorithmType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NamePrefix != nil {
		in, out := &in.NamePrefix, &out.NamePrefix
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
	if in.PreserveClientIP != nil {
		in, out := &in.PreserveClientIP, &out.PreserveClientIP
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.ProtocolVersion != nil {
		in, out := &in.ProtocolVersion, &out.ProtocolVersion
		*out = new(string)
		**out = **in
	}
	if in.ProxyProtocolV2 != nil {
		in, out := &in.ProxyProtocolV2, &out.ProxyProtocolV2
		*out = new(bool)
		**out = **in
	}
	if in.SlowStart != nil {
		in, out := &in.SlowStart, &out.SlowStart
		*out = new(int64)
		**out = **in
	}
	if in.Stickiness != nil {
		in, out := &in.Stickiness, &out.Stickiness
		*out = new(TargetGroupSpecStickiness)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.TargetType != nil {
		in, out := &in.TargetType, &out.TargetType
		*out = new(string)
		**out = **in
	}
	if in.VpcID != nil {
		in, out := &in.VpcID, &out.VpcID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGroupSpec2.
func (in *TargetGroupSpec2) DeepCopy() *TargetGroupSpec2 {
	if in == nil {
		return nil
	}
	out := new(TargetGroupSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGroupSpecHealthCheck) DeepCopyInto(out *TargetGroupSpecHealthCheck) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.HealthyThreshold != nil {
		in, out := &in.HealthyThreshold, &out.HealthyThreshold
		*out = new(int64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(int64)
		**out = **in
	}
	if in.Matcher != nil {
		in, out := &in.Matcher, &out.Matcher
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(int64)
		**out = **in
	}
	if in.UnhealthyThreshold != nil {
		in, out := &in.UnhealthyThreshold, &out.UnhealthyThreshold
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGroupSpecHealthCheck.
func (in *TargetGroupSpecHealthCheck) DeepCopy() *TargetGroupSpecHealthCheck {
	if in == nil {
		return nil
	}
	out := new(TargetGroupSpecHealthCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGroupSpecStickiness) DeepCopyInto(out *TargetGroupSpecStickiness) {
	*out = *in
	if in.CookieDuration != nil {
		in, out := &in.CookieDuration, &out.CookieDuration
		*out = new(int64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGroupSpecStickiness.
func (in *TargetGroupSpecStickiness) DeepCopy() *TargetGroupSpecStickiness {
	if in == nil {
		return nil
	}
	out := new(TargetGroupSpecStickiness)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetGroupStatus) DeepCopyInto(out *TargetGroupStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetGroupStatus.
func (in *TargetGroupStatus) DeepCopy() *TargetGroupStatus {
	if in == nil {
		return nil
	}
	out := new(TargetGroupStatus)
	in.DeepCopyInto(out)
	return out
}
