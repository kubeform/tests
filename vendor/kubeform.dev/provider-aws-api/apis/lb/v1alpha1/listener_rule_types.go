/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type ListenerRule struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ListenerRuleSpec   `json:"spec,omitempty"`
	Status            ListenerRuleStatus `json:"status,omitempty"`
}

type ListenerRuleSpec struct {
	ListenerRuleSpec2 `json:",inline"`
	// +optional
	KubeformOutput ListenerRuleSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type ListenerRuleSpecActionAuthenticateCognito struct {
	// +optional
	AuthenticationRequestExtraParams *map[string]string `json:"authenticationRequestExtraParams,omitempty" tf:"authentication_request_extra_params"`
	// +optional
	OnUnauthenticatedRequest *string `json:"onUnauthenticatedRequest,omitempty" tf:"on_unauthenticated_request"`
	// +optional
	Scope *string `json:"scope,omitempty" tf:"scope"`
	// +optional
	SessionCookieName *string `json:"sessionCookieName,omitempty" tf:"session_cookie_name"`
	// +optional
	SessionTimeout   *int64  `json:"sessionTimeout,omitempty" tf:"session_timeout"`
	UserPoolArn      *string `json:"userPoolArn" tf:"user_pool_arn"`
	UserPoolClientID *string `json:"userPoolClientID" tf:"user_pool_client_id"`
	UserPoolDomain   *string `json:"userPoolDomain" tf:"user_pool_domain"`
}

type ListenerRuleSpecActionAuthenticateOidc struct {
	// +optional
	AuthenticationRequestExtraParams *map[string]string `json:"authenticationRequestExtraParams,omitempty" tf:"authentication_request_extra_params"`
	AuthorizationEndpoint            *string            `json:"authorizationEndpoint" tf:"authorization_endpoint"`
	ClientID                         *string            `json:"clientID" tf:"client_id"`
	ClientSecret                     *string            `json:"-" sensitive:"true" tf:"client_secret"`
	Issuer                           *string            `json:"issuer" tf:"issuer"`
	// +optional
	OnUnauthenticatedRequest *string `json:"onUnauthenticatedRequest,omitempty" tf:"on_unauthenticated_request"`
	// +optional
	Scope *string `json:"scope,omitempty" tf:"scope"`
	// +optional
	SessionCookieName *string `json:"sessionCookieName,omitempty" tf:"session_cookie_name"`
	// +optional
	SessionTimeout   *int64  `json:"sessionTimeout,omitempty" tf:"session_timeout"`
	TokenEndpoint    *string `json:"tokenEndpoint" tf:"token_endpoint"`
	UserInfoEndpoint *string `json:"userInfoEndpoint" tf:"user_info_endpoint"`
}

type ListenerRuleSpecActionFixedResponse struct {
	ContentType *string `json:"contentType" tf:"content_type"`
	// +optional
	MessageBody *string `json:"messageBody,omitempty" tf:"message_body"`
	// +optional
	StatusCode *string `json:"statusCode,omitempty" tf:"status_code"`
}

type ListenerRuleSpecActionForwardStickiness struct {
	Duration *int64 `json:"duration" tf:"duration"`
	// +optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled"`
}

type ListenerRuleSpecActionForwardTargetGroup struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	Weight *int64 `json:"weight,omitempty" tf:"weight"`
}

type ListenerRuleSpecActionForward struct {
	// +optional
	Stickiness *ListenerRuleSpecActionForwardStickiness `json:"stickiness,omitempty" tf:"stickiness"`
	// +kubebuilder:validation:MaxItems=5
	// +kubebuilder:validation:MinItems=2
	TargetGroup []ListenerRuleSpecActionForwardTargetGroup `json:"targetGroup" tf:"target_group"`
}

type ListenerRuleSpecActionRedirect struct {
	// +optional
	Host *string `json:"host,omitempty" tf:"host"`
	// +optional
	Path *string `json:"path,omitempty" tf:"path"`
	// +optional
	Port *string `json:"port,omitempty" tf:"port"`
	// +optional
	Protocol *string `json:"protocol,omitempty" tf:"protocol"`
	// +optional
	Query      *string `json:"query,omitempty" tf:"query"`
	StatusCode *string `json:"statusCode" tf:"status_code"`
}

type ListenerRuleSpecAction struct {
	// +optional
	AuthenticateCognito *ListenerRuleSpecActionAuthenticateCognito `json:"authenticateCognito,omitempty" tf:"authenticate_cognito"`
	// +optional
	AuthenticateOidc *ListenerRuleSpecActionAuthenticateOidc `json:"authenticateOidc,omitempty" tf:"authenticate_oidc"`
	// +optional
	FixedResponse *ListenerRuleSpecActionFixedResponse `json:"fixedResponse,omitempty" tf:"fixed_response"`
	// +optional
	Forward *ListenerRuleSpecActionForward `json:"forward,omitempty" tf:"forward"`
	// +optional
	Order *int64 `json:"order,omitempty" tf:"order"`
	// +optional
	Redirect *ListenerRuleSpecActionRedirect `json:"redirect,omitempty" tf:"redirect"`
	// +optional
	TargetGroupArn *string `json:"targetGroupArn,omitempty" tf:"target_group_arn"`
	Type           *string `json:"type" tf:"type"`
}

type ListenerRuleSpecConditionHostHeader struct {
	// +kubebuilder:validation:MinItems=1
	Values []string `json:"values" tf:"values"`
}

type ListenerRuleSpecConditionHttpHeader struct {
	HttpHeaderName *string  `json:"httpHeaderName" tf:"http_header_name"`
	Values         []string `json:"values" tf:"values"`
}

type ListenerRuleSpecConditionHttpRequestMethod struct {
	Values []string `json:"values" tf:"values"`
}

type ListenerRuleSpecConditionPathPattern struct {
	// +kubebuilder:validation:MinItems=1
	Values []string `json:"values" tf:"values"`
}

type ListenerRuleSpecConditionQueryString struct {
	// +optional
	Key   *string `json:"key,omitempty" tf:"key"`
	Value *string `json:"value" tf:"value"`
}

type ListenerRuleSpecConditionSourceIP struct {
	Values []string `json:"values" tf:"values"`
}

type ListenerRuleSpecCondition struct {
	// +optional
	HostHeader *ListenerRuleSpecConditionHostHeader `json:"hostHeader,omitempty" tf:"host_header"`
	// +optional
	HttpHeader *ListenerRuleSpecConditionHttpHeader `json:"httpHeader,omitempty" tf:"http_header"`
	// +optional
	HttpRequestMethod *ListenerRuleSpecConditionHttpRequestMethod `json:"httpRequestMethod,omitempty" tf:"http_request_method"`
	// +optional
	PathPattern *ListenerRuleSpecConditionPathPattern `json:"pathPattern,omitempty" tf:"path_pattern"`
	// +optional
	QueryString []ListenerRuleSpecConditionQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SourceIP *ListenerRuleSpecConditionSourceIP `json:"sourceIP,omitempty" tf:"source_ip"`
}

type ListenerRuleSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`

	Action []ListenerRuleSpecAction `json:"action" tf:"action"`
	// +optional
	Arn         *string                     `json:"arn,omitempty" tf:"arn"`
	Condition   []ListenerRuleSpecCondition `json:"condition" tf:"condition"`
	ListenerArn *string                     `json:"listenerArn" tf:"listener_arn"`
	// +optional
	Priority *int64 `json:"priority,omitempty" tf:"priority"`
}

type ListenerRuleStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ListenerRuleList is a list of ListenerRules
type ListenerRuleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of ListenerRule CRD objects
	Items []ListenerRule `json:"items,omitempty"`
}
