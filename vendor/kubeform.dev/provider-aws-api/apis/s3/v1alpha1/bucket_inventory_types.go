/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type BucketInventory struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              BucketInventorySpec   `json:"spec,omitempty"`
	Status            BucketInventoryStatus `json:"status,omitempty"`
}

type BucketInventorySpec struct {
	BucketInventorySpec2 `json:",inline"`
	// +optional
	KubeformOutput BucketInventorySpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type BucketInventorySpecDestinationBucketEncryptionSseKms struct {
	KeyID *string `json:"keyID" tf:"key_id"`
}

type BucketInventorySpecDestinationBucketEncryptionSseS3 struct{}

type BucketInventorySpecDestinationBucketEncryption struct {
	// +optional
	SseKms *BucketInventorySpecDestinationBucketEncryptionSseKms `json:"sseKms,omitempty" tf:"sse_kms"`
	// +optional
	SseS3 *BucketInventorySpecDestinationBucketEncryptionSseS3 `json:"sseS3,omitempty" tf:"sse_s3"`
}

type BucketInventorySpecDestinationBucket struct {
	// +optional
	AccountID *string `json:"accountID,omitempty" tf:"account_id"`
	BucketArn *string `json:"bucketArn" tf:"bucket_arn"`
	// +optional
	Encryption *BucketInventorySpecDestinationBucketEncryption `json:"encryption,omitempty" tf:"encryption"`
	Format     *string                                         `json:"format" tf:"format"`
	// +optional
	Prefix *string `json:"prefix,omitempty" tf:"prefix"`
}

type BucketInventorySpecDestination struct {
	Bucket *BucketInventorySpecDestinationBucket `json:"bucket" tf:"bucket"`
}

type BucketInventorySpecFilter struct {
	// +optional
	Prefix *string `json:"prefix,omitempty" tf:"prefix"`
}

type BucketInventorySpecSchedule struct {
	Frequency *string `json:"frequency" tf:"frequency"`
}

type BucketInventorySpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	Bucket      *string                         `json:"bucket" tf:"bucket"`
	Destination *BucketInventorySpecDestination `json:"destination" tf:"destination"`
	// +optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled"`
	// +optional
	Filter                 *BucketInventorySpecFilter `json:"filter,omitempty" tf:"filter"`
	IncludedObjectVersions *string                    `json:"includedObjectVersions" tf:"included_object_versions"`
	Name                   *string                    `json:"name" tf:"name"`
	// +optional
	OptionalFields []string                     `json:"optionalFields,omitempty" tf:"optional_fields"`
	Schedule       *BucketInventorySpecSchedule `json:"schedule" tf:"schedule"`
}

type BucketInventoryStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// BucketInventoryList is a list of BucketInventorys
type BucketInventoryList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of BucketInventory CRD objects
	Items []BucketInventory `json:"items,omitempty"`
}
