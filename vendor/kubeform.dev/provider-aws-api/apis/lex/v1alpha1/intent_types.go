/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Intent struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              IntentSpec   `json:"spec,omitempty"`
	Status            IntentStatus `json:"status,omitempty"`
}

type IntentSpec struct {
	IntentSpec2 `json:",inline"`
	// +optional
	KubeformOutput IntentSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type IntentSpecConclusionStatementMessage struct {
	Content     *string `json:"content" tf:"content"`
	ContentType *string `json:"contentType" tf:"content_type"`
	// +optional
	GroupNumber *int64 `json:"groupNumber,omitempty" tf:"group_number"`
}

type IntentSpecConclusionStatement struct {
	// +kubebuilder:validation:MaxItems=15
	// +kubebuilder:validation:MinItems=1
	Message []IntentSpecConclusionStatementMessage `json:"message" tf:"message"`
	// +optional
	ResponseCard *string `json:"responseCard,omitempty" tf:"response_card"`
}

type IntentSpecConfirmationPromptMessage struct {
	Content     *string `json:"content" tf:"content"`
	ContentType *string `json:"contentType" tf:"content_type"`
	// +optional
	GroupNumber *int64 `json:"groupNumber,omitempty" tf:"group_number"`
}

type IntentSpecConfirmationPrompt struct {
	MaxAttempts *int64 `json:"maxAttempts" tf:"max_attempts"`
	// +kubebuilder:validation:MaxItems=15
	// +kubebuilder:validation:MinItems=1
	Message []IntentSpecConfirmationPromptMessage `json:"message" tf:"message"`
	// +optional
	ResponseCard *string `json:"responseCard,omitempty" tf:"response_card"`
}

type IntentSpecDialogCodeHook struct {
	MessageVersion *string `json:"messageVersion" tf:"message_version"`
	Uri            *string `json:"uri" tf:"uri"`
}

type IntentSpecFollowUpPromptPromptMessage struct {
	Content     *string `json:"content" tf:"content"`
	ContentType *string `json:"contentType" tf:"content_type"`
	// +optional
	GroupNumber *int64 `json:"groupNumber,omitempty" tf:"group_number"`
}

type IntentSpecFollowUpPromptPrompt struct {
	MaxAttempts *int64 `json:"maxAttempts" tf:"max_attempts"`
	// +kubebuilder:validation:MaxItems=15
	// +kubebuilder:validation:MinItems=1
	Message []IntentSpecFollowUpPromptPromptMessage `json:"message" tf:"message"`
	// +optional
	ResponseCard *string `json:"responseCard,omitempty" tf:"response_card"`
}

type IntentSpecFollowUpPromptRejectionStatementMessage struct {
	Content     *string `json:"content" tf:"content"`
	ContentType *string `json:"contentType" tf:"content_type"`
	// +optional
	GroupNumber *int64 `json:"groupNumber,omitempty" tf:"group_number"`
}

type IntentSpecFollowUpPromptRejectionStatement struct {
	// +kubebuilder:validation:MaxItems=15
	// +kubebuilder:validation:MinItems=1
	Message []IntentSpecFollowUpPromptRejectionStatementMessage `json:"message" tf:"message"`
	// +optional
	ResponseCard *string `json:"responseCard,omitempty" tf:"response_card"`
}

type IntentSpecFollowUpPrompt struct {
	Prompt             *IntentSpecFollowUpPromptPrompt             `json:"prompt" tf:"prompt"`
	RejectionStatement *IntentSpecFollowUpPromptRejectionStatement `json:"rejectionStatement" tf:"rejection_statement"`
}

type IntentSpecFulfillmentActivityCodeHook struct {
	MessageVersion *string `json:"messageVersion" tf:"message_version"`
	Uri            *string `json:"uri" tf:"uri"`
}

type IntentSpecFulfillmentActivity struct {
	// +optional
	CodeHook *IntentSpecFulfillmentActivityCodeHook `json:"codeHook,omitempty" tf:"code_hook"`
	Type     *string                                `json:"type" tf:"type"`
}

type IntentSpecRejectionStatementMessage struct {
	Content     *string `json:"content" tf:"content"`
	ContentType *string `json:"contentType" tf:"content_type"`
	// +optional
	GroupNumber *int64 `json:"groupNumber,omitempty" tf:"group_number"`
}

type IntentSpecRejectionStatement struct {
	// +kubebuilder:validation:MaxItems=15
	// +kubebuilder:validation:MinItems=1
	Message []IntentSpecRejectionStatementMessage `json:"message" tf:"message"`
	// +optional
	ResponseCard *string `json:"responseCard,omitempty" tf:"response_card"`
}

type IntentSpecSlotValueElicitationPromptMessage struct {
	Content     *string `json:"content" tf:"content"`
	ContentType *string `json:"contentType" tf:"content_type"`
	// +optional
	GroupNumber *int64 `json:"groupNumber,omitempty" tf:"group_number"`
}

type IntentSpecSlotValueElicitationPrompt struct {
	MaxAttempts *int64 `json:"maxAttempts" tf:"max_attempts"`
	// +kubebuilder:validation:MaxItems=15
	// +kubebuilder:validation:MinItems=1
	Message []IntentSpecSlotValueElicitationPromptMessage `json:"message" tf:"message"`
	// +optional
	ResponseCard *string `json:"responseCard,omitempty" tf:"response_card"`
}

type IntentSpecSlot struct {
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	Name        *string `json:"name" tf:"name"`
	// +optional
	Priority *int64 `json:"priority,omitempty" tf:"priority"`
	// +optional
	ResponseCard *string `json:"responseCard,omitempty" tf:"response_card"`
	// +optional
	// +kubebuilder:validation:MaxItems=10
	// +kubebuilder:validation:MinItems=1
	SampleUtterances []string `json:"sampleUtterances,omitempty" tf:"sample_utterances"`
	SlotConstraint   *string  `json:"slotConstraint" tf:"slot_constraint"`
	SlotType         *string  `json:"slotType" tf:"slot_type"`
	// +optional
	SlotTypeVersion *string `json:"slotTypeVersion,omitempty" tf:"slot_type_version"`
	// +optional
	ValueElicitationPrompt *IntentSpecSlotValueElicitationPrompt `json:"valueElicitationPrompt,omitempty" tf:"value_elicitation_prompt"`
}

type IntentSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	Arn *string `json:"arn,omitempty" tf:"arn"`
	// +optional
	Checksum *string `json:"checksum,omitempty" tf:"checksum"`
	// +optional
	ConclusionStatement *IntentSpecConclusionStatement `json:"conclusionStatement,omitempty" tf:"conclusion_statement"`
	// +optional
	ConfirmationPrompt *IntentSpecConfirmationPrompt `json:"confirmationPrompt,omitempty" tf:"confirmation_prompt"`
	// +optional
	CreateVersion *bool `json:"createVersion,omitempty" tf:"create_version"`
	// +optional
	CreatedDate *string `json:"createdDate,omitempty" tf:"created_date"`
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// +optional
	DialogCodeHook *IntentSpecDialogCodeHook `json:"dialogCodeHook,omitempty" tf:"dialog_code_hook"`
	// +optional
	FollowUpPrompt      *IntentSpecFollowUpPrompt      `json:"followUpPrompt,omitempty" tf:"follow_up_prompt"`
	FulfillmentActivity *IntentSpecFulfillmentActivity `json:"fulfillmentActivity" tf:"fulfillment_activity"`
	// +optional
	LastUpdatedDate *string `json:"lastUpdatedDate,omitempty" tf:"last_updated_date"`
	Name            *string `json:"name" tf:"name"`
	// +optional
	ParentIntentSignature *string `json:"parentIntentSignature,omitempty" tf:"parent_intent_signature"`
	// +optional
	RejectionStatement *IntentSpecRejectionStatement `json:"rejectionStatement,omitempty" tf:"rejection_statement"`
	// +optional
	// +kubebuilder:validation:MaxItems=1500
	SampleUtterances []string `json:"sampleUtterances,omitempty" tf:"sample_utterances"`
	// +optional
	// +kubebuilder:validation:MaxItems=100
	Slot []IntentSpecSlot `json:"slot,omitempty" tf:"slot"`
	// +optional
	Version *string `json:"version,omitempty" tf:"version"`
}

type IntentStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// IntentList is a list of Intents
type IntentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Intent CRD objects
	Items []Intent `json:"items,omitempty"`
}
