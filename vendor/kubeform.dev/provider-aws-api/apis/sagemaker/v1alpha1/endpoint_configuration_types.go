/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type EndpointConfiguration struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              EndpointConfigurationSpec   `json:"spec,omitempty"`
	Status            EndpointConfigurationStatus `json:"status,omitempty"`
}

type EndpointConfigurationSpec struct {
	EndpointConfigurationSpec2 `json:",inline"`
	// +optional
	KubeformOutput EndpointConfigurationSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type EndpointConfigurationSpecDataCaptureConfigCaptureContentTypeHeader struct {
	// +optional
	// +kubebuilder:validation:MaxItems=10
	// +kubebuilder:validation:MinItems=1
	CsvContentTypes []string `json:"csvContentTypes,omitempty" tf:"csv_content_types"`
	// +optional
	// +kubebuilder:validation:MaxItems=10
	// +kubebuilder:validation:MinItems=1
	JsonContentTypes []string `json:"jsonContentTypes,omitempty" tf:"json_content_types"`
}

type EndpointConfigurationSpecDataCaptureConfigCaptureOptions struct {
	CaptureMode *string `json:"captureMode" tf:"capture_mode"`
}

type EndpointConfigurationSpecDataCaptureConfig struct {
	// +optional
	CaptureContentTypeHeader *EndpointConfigurationSpecDataCaptureConfigCaptureContentTypeHeader `json:"captureContentTypeHeader,omitempty" tf:"capture_content_type_header"`
	// +kubebuilder:validation:MaxItems=2
	// +kubebuilder:validation:MinItems=1
	CaptureOptions   []EndpointConfigurationSpecDataCaptureConfigCaptureOptions `json:"captureOptions" tf:"capture_options"`
	DestinationS3URI *string                                                    `json:"destinationS3URI" tf:"destination_s3_uri"`
	// +optional
	EnableCapture             *bool  `json:"enableCapture,omitempty" tf:"enable_capture"`
	InitialSamplingPercentage *int64 `json:"initialSamplingPercentage" tf:"initial_sampling_percentage"`
	// +optional
	KmsKeyID *string `json:"kmsKeyID,omitempty" tf:"kms_key_id"`
}

type EndpointConfigurationSpecProductionVariants struct {
	// +optional
	AcceleratorType      *string `json:"acceleratorType,omitempty" tf:"accelerator_type"`
	InitialInstanceCount *int64  `json:"initialInstanceCount" tf:"initial_instance_count"`
	// +optional
	InitialVariantWeight *float64 `json:"initialVariantWeight,omitempty" tf:"initial_variant_weight"`
	InstanceType         *string  `json:"instanceType" tf:"instance_type"`
	ModelName            *string  `json:"modelName" tf:"model_name"`
	// +optional
	VariantName *string `json:"variantName,omitempty" tf:"variant_name"`
}

type EndpointConfigurationSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	Arn *string `json:"arn,omitempty" tf:"arn"`
	// +optional
	DataCaptureConfig *EndpointConfigurationSpecDataCaptureConfig `json:"dataCaptureConfig,omitempty" tf:"data_capture_config"`
	// +optional
	KmsKeyArn *string `json:"kmsKeyArn,omitempty" tf:"kms_key_arn"`
	// +optional
	Name               *string                                       `json:"name,omitempty" tf:"name"`
	ProductionVariants []EndpointConfigurationSpecProductionVariants `json:"productionVariants" tf:"production_variants"`
	// +optional
	Tags *map[string]string `json:"tags,omitempty" tf:"tags"`
}

type EndpointConfigurationStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// EndpointConfigurationList is a list of EndpointConfigurations
type EndpointConfigurationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of EndpointConfiguration CRD objects
	Items []EndpointConfiguration `json:"items,omitempty"`
}
