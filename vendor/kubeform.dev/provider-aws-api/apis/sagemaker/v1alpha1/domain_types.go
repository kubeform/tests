/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Domain struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              DomainSpec   `json:"spec,omitempty"`
	Status            DomainStatus `json:"status,omitempty"`
}

type DomainSpec struct {
	DomainSpec2 `json:",inline"`
	// +optional
	KubeformOutput DomainSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type DomainSpecDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpec struct {
	// +optional
	InstanceType *string `json:"instanceType,omitempty" tf:"instance_type"`
	// +optional
	SagemakerImageArn *string `json:"sagemakerImageArn,omitempty" tf:"sagemaker_image_arn"`
}

type DomainSpecDefaultUserSettingsJupyterServerAppSettings struct {
	// +optional
	DefaultResourceSpec *DomainSpecDefaultUserSettingsJupyterServerAppSettingsDefaultResourceSpec `json:"defaultResourceSpec,omitempty" tf:"default_resource_spec"`
}

type DomainSpecDefaultUserSettingsKernelGatewayAppSettingsCustomImage struct {
	AppImageConfigName *string `json:"appImageConfigName" tf:"app_image_config_name"`
	ImageName          *string `json:"imageName" tf:"image_name"`
	// +optional
	ImageVersionNumber *int64 `json:"imageVersionNumber,omitempty" tf:"image_version_number"`
}

type DomainSpecDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpec struct {
	// +optional
	InstanceType *string `json:"instanceType,omitempty" tf:"instance_type"`
	// +optional
	SagemakerImageArn *string `json:"sagemakerImageArn,omitempty" tf:"sagemaker_image_arn"`
}

type DomainSpecDefaultUserSettingsKernelGatewayAppSettings struct {
	// +optional
	// +kubebuilder:validation:MaxItems=30
	CustomImage []DomainSpecDefaultUserSettingsKernelGatewayAppSettingsCustomImage `json:"customImage,omitempty" tf:"custom_image"`
	// +optional
	DefaultResourceSpec *DomainSpecDefaultUserSettingsKernelGatewayAppSettingsDefaultResourceSpec `json:"defaultResourceSpec,omitempty" tf:"default_resource_spec"`
}

type DomainSpecDefaultUserSettingsSharingSettings struct {
	// +optional
	NotebookOutputOption *string `json:"notebookOutputOption,omitempty" tf:"notebook_output_option"`
	// +optional
	S3KmsKeyID *string `json:"s3KmsKeyID,omitempty" tf:"s3_kms_key_id"`
	// +optional
	S3OutputPath *string `json:"s3OutputPath,omitempty" tf:"s3_output_path"`
}

type DomainSpecDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpec struct {
	// +optional
	InstanceType *string `json:"instanceType,omitempty" tf:"instance_type"`
	// +optional
	SagemakerImageArn *string `json:"sagemakerImageArn,omitempty" tf:"sagemaker_image_arn"`
}

type DomainSpecDefaultUserSettingsTensorBoardAppSettings struct {
	// +optional
	DefaultResourceSpec *DomainSpecDefaultUserSettingsTensorBoardAppSettingsDefaultResourceSpec `json:"defaultResourceSpec,omitempty" tf:"default_resource_spec"`
}

type DomainSpecDefaultUserSettings struct {
	ExecutionRole *string `json:"executionRole" tf:"execution_role"`
	// +optional
	JupyterServerAppSettings *DomainSpecDefaultUserSettingsJupyterServerAppSettings `json:"jupyterServerAppSettings,omitempty" tf:"jupyter_server_app_settings"`
	// +optional
	KernelGatewayAppSettings *DomainSpecDefaultUserSettingsKernelGatewayAppSettings `json:"kernelGatewayAppSettings,omitempty" tf:"kernel_gateway_app_settings"`
	// +optional
	// +kubebuilder:validation:MaxItems=5
	SecurityGroups []string `json:"securityGroups,omitempty" tf:"security_groups"`
	// +optional
	SharingSettings *DomainSpecDefaultUserSettingsSharingSettings `json:"sharingSettings,omitempty" tf:"sharing_settings"`
	// +optional
	TensorBoardAppSettings *DomainSpecDefaultUserSettingsTensorBoardAppSettings `json:"tensorBoardAppSettings,omitempty" tf:"tensor_board_app_settings"`
}

type DomainSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	AppNetworkAccessType *string `json:"appNetworkAccessType,omitempty" tf:"app_network_access_type"`
	// +optional
	Arn                 *string                        `json:"arn,omitempty" tf:"arn"`
	AuthMode            *string                        `json:"authMode" tf:"auth_mode"`
	DefaultUserSettings *DomainSpecDefaultUserSettings `json:"defaultUserSettings" tf:"default_user_settings"`
	DomainName          *string                        `json:"domainName" tf:"domain_name"`
	// +optional
	HomeEfsFileSystemID *string `json:"homeEfsFileSystemID,omitempty" tf:"home_efs_file_system_id"`
	// +optional
	KmsKeyID *string `json:"kmsKeyID,omitempty" tf:"kms_key_id"`
	// +optional
	SingleSignOnManagedApplicationInstanceID *string `json:"singleSignOnManagedApplicationInstanceID,omitempty" tf:"single_sign_on_managed_application_instance_id"`
	// +kubebuilder:validation:MaxItems=16
	SubnetIDS []string `json:"subnetIDS" tf:"subnet_ids"`
	// +optional
	Tags *map[string]string `json:"tags,omitempty" tf:"tags"`
	// +optional
	Url   *string `json:"url,omitempty" tf:"url"`
	VpcID *string `json:"vpcID" tf:"vpc_id"`
}

type DomainStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// DomainList is a list of Domains
type DomainList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Domain CRD objects
	Items []Domain `json:"items,omitempty"`
}
