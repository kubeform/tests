/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type AppImageConfig struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AppImageConfigSpec   `json:"spec,omitempty"`
	Status            AppImageConfigStatus `json:"status,omitempty"`
}

type AppImageConfigSpec struct {
	AppImageConfigSpec2 `json:",inline"`
	// +optional
	KubeformOutput AppImageConfigSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type AppImageConfigSpecKernelGatewayImageConfigFileSystemConfig struct {
	// +optional
	DefaultGid *int64 `json:"defaultGid,omitempty" tf:"default_gid"`
	// +optional
	DefaultUid *int64 `json:"defaultUid,omitempty" tf:"default_uid"`
	// +optional
	MountPath *string `json:"mountPath,omitempty" tf:"mount_path"`
}

type AppImageConfigSpecKernelGatewayImageConfigKernelSpec struct {
	// +optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name"`
	Name        *string `json:"name" tf:"name"`
}

type AppImageConfigSpecKernelGatewayImageConfig struct {
	// +optional
	FileSystemConfig *AppImageConfigSpecKernelGatewayImageConfigFileSystemConfig `json:"fileSystemConfig,omitempty" tf:"file_system_config"`
	KernelSpec       *AppImageConfigSpecKernelGatewayImageConfigKernelSpec       `json:"kernelSpec" tf:"kernel_spec"`
}

type AppImageConfigSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	AppImageConfigName *string `json:"appImageConfigName" tf:"app_image_config_name"`
	// +optional
	Arn *string `json:"arn,omitempty" tf:"arn"`
	// +optional
	KernelGatewayImageConfig *AppImageConfigSpecKernelGatewayImageConfig `json:"kernelGatewayImageConfig,omitempty" tf:"kernel_gateway_image_config"`
}

type AppImageConfigStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// AppImageConfigList is a list of AppImageConfigs
type AppImageConfigList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of AppImageConfig CRD objects
	Items []AppImageConfig `json:"items,omitempty"`
}
