/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type AclRule struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AclRuleSpec   `json:"spec,omitempty"`
	Status            AclRuleStatus `json:"status,omitempty"`
}

type AclRuleSpec struct {
	AclRuleSpec2 `json:",inline"`
	// +optional
	KubeformOutput AclRuleSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type AclRuleSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	CidrBlock *string `json:"cidrBlock,omitempty" tf:"cidr_block"`
	// +optional
	Egress *bool `json:"egress,omitempty" tf:"egress"`
	// +optional
	FromPort *int64 `json:"fromPort,omitempty" tf:"from_port"`
	// +optional
	IcmpCode *string `json:"icmpCode,omitempty" tf:"icmp_code"`
	// +optional
	IcmpType *string `json:"icmpType,omitempty" tf:"icmp_type"`
	// +optional
	Ipv6CIDRBlock *string `json:"ipv6CIDRBlock,omitempty" tf:"ipv6_cidr_block"`
	NetworkACLID  *string `json:"networkACLID" tf:"network_acl_id"`
	Protocol      *string `json:"protocol" tf:"protocol"`
	RuleAction    *string `json:"ruleAction" tf:"rule_action"`
	RuleNumber    *int64  `json:"ruleNumber" tf:"rule_number"`
	// +optional
	ToPort *int64 `json:"toPort,omitempty" tf:"to_port"`
}

type AclRuleStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// AclRuleList is a list of AclRules
type AclRuleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of AclRule CRD objects
	Items []AclRule `json:"items,omitempty"`
}
