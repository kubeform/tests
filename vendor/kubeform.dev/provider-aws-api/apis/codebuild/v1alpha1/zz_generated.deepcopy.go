// +build !ignore_autogenerated

/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	apiv1 "kmodules.xyz/client-go/api/v1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Project) DeepCopyInto(out *Project) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Project.
func (in *Project) DeepCopy() *Project {
	if in == nil {
		return nil
	}
	out := new(Project)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Project) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectList) DeepCopyInto(out *ProjectList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Project, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectList.
func (in *ProjectList) DeepCopy() *ProjectList {
	if in == nil {
		return nil
	}
	out := new(ProjectList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpec) DeepCopyInto(out *ProjectSpec) {
	*out = *in
	in.ProjectSpec2.DeepCopyInto(&out.ProjectSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpec.
func (in *ProjectSpec) DeepCopy() *ProjectSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpec2) DeepCopyInto(out *ProjectSpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Artifacts != nil {
		in, out := &in.Artifacts, &out.Artifacts
		*out = new(ProjectSpecArtifacts)
		(*in).DeepCopyInto(*out)
	}
	if in.BadgeEnabled != nil {
		in, out := &in.BadgeEnabled, &out.BadgeEnabled
		*out = new(bool)
		**out = **in
	}
	if in.BadgeURL != nil {
		in, out := &in.BadgeURL, &out.BadgeURL
		*out = new(string)
		**out = **in
	}
	if in.BuildTimeout != nil {
		in, out := &in.BuildTimeout, &out.BuildTimeout
		*out = new(int64)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(ProjectSpecCache)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EncryptionKey != nil {
		in, out := &in.EncryptionKey, &out.EncryptionKey
		*out = new(string)
		**out = **in
	}
	if in.Environment != nil {
		in, out := &in.Environment, &out.Environment
		*out = new(ProjectSpecEnvironment)
		(*in).DeepCopyInto(*out)
	}
	if in.LogsConfig != nil {
		in, out := &in.LogsConfig, &out.LogsConfig
		*out = new(ProjectSpecLogsConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.QueuedTimeout != nil {
		in, out := &in.QueuedTimeout, &out.QueuedTimeout
		*out = new(int64)
		**out = **in
	}
	if in.SecondaryArtifacts != nil {
		in, out := &in.SecondaryArtifacts, &out.SecondaryArtifacts
		*out = make([]ProjectSpecSecondaryArtifacts, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecondarySources != nil {
		in, out := &in.SecondarySources, &out.SecondarySources
		*out = make([]ProjectSpecSecondarySources, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceRole != nil {
		in, out := &in.ServiceRole, &out.ServiceRole
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(ProjectSpecSource)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceVersion != nil {
		in, out := &in.SourceVersion, &out.SourceVersion
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.VpcConfig != nil {
		in, out := &in.VpcConfig, &out.VpcConfig
		*out = new(ProjectSpecVpcConfig)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpec2.
func (in *ProjectSpec2) DeepCopy() *ProjectSpec2 {
	if in == nil {
		return nil
	}
	out := new(ProjectSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpecArtifacts) DeepCopyInto(out *ProjectSpecArtifacts) {
	*out = *in
	if in.ArtifactIdentifier != nil {
		in, out := &in.ArtifactIdentifier, &out.ArtifactIdentifier
		*out = new(string)
		**out = **in
	}
	if in.EncryptionDisabled != nil {
		in, out := &in.EncryptionDisabled, &out.EncryptionDisabled
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NamespaceType != nil {
		in, out := &in.NamespaceType, &out.NamespaceType
		*out = new(string)
		**out = **in
	}
	if in.OverrideArtifactName != nil {
		in, out := &in.OverrideArtifactName, &out.OverrideArtifactName
		*out = new(bool)
		**out = **in
	}
	if in.Packaging != nil {
		in, out := &in.Packaging, &out.Packaging
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpecArtifacts.
func (in *ProjectSpecArtifacts) DeepCopy() *ProjectSpecArtifacts {
	if in == nil {
		return nil
	}
	out := new(ProjectSpecArtifacts)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpecCache) DeepCopyInto(out *ProjectSpecCache) {
	*out = *in
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Modes != nil {
		in, out := &in.Modes, &out.Modes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpecCache.
func (in *ProjectSpecCache) DeepCopy() *ProjectSpecCache {
	if in == nil {
		return nil
	}
	out := new(ProjectSpecCache)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpecEnvironment) DeepCopyInto(out *ProjectSpecEnvironment) {
	*out = *in
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = new(string)
		**out = **in
	}
	if in.ComputeType != nil {
		in, out := &in.ComputeType, &out.ComputeType
		*out = new(string)
		**out = **in
	}
	if in.EnvironmentVariable != nil {
		in, out := &in.EnvironmentVariable, &out.EnvironmentVariable
		*out = make([]ProjectSpecEnvironmentEnvironmentVariable, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.ImagePullCredentialsType != nil {
		in, out := &in.ImagePullCredentialsType, &out.ImagePullCredentialsType
		*out = new(string)
		**out = **in
	}
	if in.PrivilegedMode != nil {
		in, out := &in.PrivilegedMode, &out.PrivilegedMode
		*out = new(bool)
		**out = **in
	}
	if in.RegistryCredential != nil {
		in, out := &in.RegistryCredential, &out.RegistryCredential
		*out = new(ProjectSpecEnvironmentRegistryCredential)
		(*in).DeepCopyInto(*out)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpecEnvironment.
func (in *ProjectSpecEnvironment) DeepCopy() *ProjectSpecEnvironment {
	if in == nil {
		return nil
	}
	out := new(ProjectSpecEnvironment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpecEnvironmentEnvironmentVariable) DeepCopyInto(out *ProjectSpecEnvironmentEnvironmentVariable) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpecEnvironmentEnvironmentVariable.
func (in *ProjectSpecEnvironmentEnvironmentVariable) DeepCopy() *ProjectSpecEnvironmentEnvironmentVariable {
	if in == nil {
		return nil
	}
	out := new(ProjectSpecEnvironmentEnvironmentVariable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpecEnvironmentRegistryCredential) DeepCopyInto(out *ProjectSpecEnvironmentRegistryCredential) {
	*out = *in
	if in.Credential != nil {
		in, out := &in.Credential, &out.Credential
		*out = new(string)
		**out = **in
	}
	if in.CredentialProvider != nil {
		in, out := &in.CredentialProvider, &out.CredentialProvider
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpecEnvironmentRegistryCredential.
func (in *ProjectSpecEnvironmentRegistryCredential) DeepCopy() *ProjectSpecEnvironmentRegistryCredential {
	if in == nil {
		return nil
	}
	out := new(ProjectSpecEnvironmentRegistryCredential)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpecLogsConfig) DeepCopyInto(out *ProjectSpecLogsConfig) {
	*out = *in
	if in.CloudwatchLogs != nil {
		in, out := &in.CloudwatchLogs, &out.CloudwatchLogs
		*out = new(ProjectSpecLogsConfigCloudwatchLogs)
		(*in).DeepCopyInto(*out)
	}
	if in.S3Logs != nil {
		in, out := &in.S3Logs, &out.S3Logs
		*out = new(ProjectSpecLogsConfigS3Logs)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpecLogsConfig.
func (in *ProjectSpecLogsConfig) DeepCopy() *ProjectSpecLogsConfig {
	if in == nil {
		return nil
	}
	out := new(ProjectSpecLogsConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpecLogsConfigCloudwatchLogs) DeepCopyInto(out *ProjectSpecLogsConfigCloudwatchLogs) {
	*out = *in
	if in.GroupName != nil {
		in, out := &in.GroupName, &out.GroupName
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.StreamName != nil {
		in, out := &in.StreamName, &out.StreamName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpecLogsConfigCloudwatchLogs.
func (in *ProjectSpecLogsConfigCloudwatchLogs) DeepCopy() *ProjectSpecLogsConfigCloudwatchLogs {
	if in == nil {
		return nil
	}
	out := new(ProjectSpecLogsConfigCloudwatchLogs)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpecLogsConfigS3Logs) DeepCopyInto(out *ProjectSpecLogsConfigS3Logs) {
	*out = *in
	if in.EncryptionDisabled != nil {
		in, out := &in.EncryptionDisabled, &out.EncryptionDisabled
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpecLogsConfigS3Logs.
func (in *ProjectSpecLogsConfigS3Logs) DeepCopy() *ProjectSpecLogsConfigS3Logs {
	if in == nil {
		return nil
	}
	out := new(ProjectSpecLogsConfigS3Logs)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpecSecondaryArtifacts) DeepCopyInto(out *ProjectSpecSecondaryArtifacts) {
	*out = *in
	if in.ArtifactIdentifier != nil {
		in, out := &in.ArtifactIdentifier, &out.ArtifactIdentifier
		*out = new(string)
		**out = **in
	}
	if in.EncryptionDisabled != nil {
		in, out := &in.EncryptionDisabled, &out.EncryptionDisabled
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NamespaceType != nil {
		in, out := &in.NamespaceType, &out.NamespaceType
		*out = new(string)
		**out = **in
	}
	if in.OverrideArtifactName != nil {
		in, out := &in.OverrideArtifactName, &out.OverrideArtifactName
		*out = new(bool)
		**out = **in
	}
	if in.Packaging != nil {
		in, out := &in.Packaging, &out.Packaging
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpecSecondaryArtifacts.
func (in *ProjectSpecSecondaryArtifacts) DeepCopy() *ProjectSpecSecondaryArtifacts {
	if in == nil {
		return nil
	}
	out := new(ProjectSpecSecondaryArtifacts)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpecSecondarySources) DeepCopyInto(out *ProjectSpecSecondarySources) {
	*out = *in
	if in.Auth != nil {
		in, out := &in.Auth, &out.Auth
		*out = new(ProjectSpecSecondarySourcesAuth)
		(*in).DeepCopyInto(*out)
	}
	if in.Buildspec != nil {
		in, out := &in.Buildspec, &out.Buildspec
		*out = new(string)
		**out = **in
	}
	if in.GitCloneDepth != nil {
		in, out := &in.GitCloneDepth, &out.GitCloneDepth
		*out = new(int64)
		**out = **in
	}
	if in.GitSubmodulesConfig != nil {
		in, out := &in.GitSubmodulesConfig, &out.GitSubmodulesConfig
		*out = new(ProjectSpecSecondarySourcesGitSubmodulesConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.InsecureSSL != nil {
		in, out := &in.InsecureSSL, &out.InsecureSSL
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ReportBuildStatus != nil {
		in, out := &in.ReportBuildStatus, &out.ReportBuildStatus
		*out = new(bool)
		**out = **in
	}
	if in.SourceIdentifier != nil {
		in, out := &in.SourceIdentifier, &out.SourceIdentifier
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpecSecondarySources.
func (in *ProjectSpecSecondarySources) DeepCopy() *ProjectSpecSecondarySources {
	if in == nil {
		return nil
	}
	out := new(ProjectSpecSecondarySources)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpecSecondarySourcesAuth) DeepCopyInto(out *ProjectSpecSecondarySourcesAuth) {
	*out = *in
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpecSecondarySourcesAuth.
func (in *ProjectSpecSecondarySourcesAuth) DeepCopy() *ProjectSpecSecondarySourcesAuth {
	if in == nil {
		return nil
	}
	out := new(ProjectSpecSecondarySourcesAuth)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpecSecondarySourcesGitSubmodulesConfig) DeepCopyInto(out *ProjectSpecSecondarySourcesGitSubmodulesConfig) {
	*out = *in
	if in.FetchSubmodules != nil {
		in, out := &in.FetchSubmodules, &out.FetchSubmodules
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpecSecondarySourcesGitSubmodulesConfig.
func (in *ProjectSpecSecondarySourcesGitSubmodulesConfig) DeepCopy() *ProjectSpecSecondarySourcesGitSubmodulesConfig {
	if in == nil {
		return nil
	}
	out := new(ProjectSpecSecondarySourcesGitSubmodulesConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpecSource) DeepCopyInto(out *ProjectSpecSource) {
	*out = *in
	if in.Auth != nil {
		in, out := &in.Auth, &out.Auth
		*out = new(ProjectSpecSourceAuth)
		(*in).DeepCopyInto(*out)
	}
	if in.Buildspec != nil {
		in, out := &in.Buildspec, &out.Buildspec
		*out = new(string)
		**out = **in
	}
	if in.GitCloneDepth != nil {
		in, out := &in.GitCloneDepth, &out.GitCloneDepth
		*out = new(int64)
		**out = **in
	}
	if in.GitSubmodulesConfig != nil {
		in, out := &in.GitSubmodulesConfig, &out.GitSubmodulesConfig
		*out = new(ProjectSpecSourceGitSubmodulesConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.InsecureSSL != nil {
		in, out := &in.InsecureSSL, &out.InsecureSSL
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ReportBuildStatus != nil {
		in, out := &in.ReportBuildStatus, &out.ReportBuildStatus
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpecSource.
func (in *ProjectSpecSource) DeepCopy() *ProjectSpecSource {
	if in == nil {
		return nil
	}
	out := new(ProjectSpecSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpecSourceAuth) DeepCopyInto(out *ProjectSpecSourceAuth) {
	*out = *in
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpecSourceAuth.
func (in *ProjectSpecSourceAuth) DeepCopy() *ProjectSpecSourceAuth {
	if in == nil {
		return nil
	}
	out := new(ProjectSpecSourceAuth)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpecSourceGitSubmodulesConfig) DeepCopyInto(out *ProjectSpecSourceGitSubmodulesConfig) {
	*out = *in
	if in.FetchSubmodules != nil {
		in, out := &in.FetchSubmodules, &out.FetchSubmodules
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpecSourceGitSubmodulesConfig.
func (in *ProjectSpecSourceGitSubmodulesConfig) DeepCopy() *ProjectSpecSourceGitSubmodulesConfig {
	if in == nil {
		return nil
	}
	out := new(ProjectSpecSourceGitSubmodulesConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpecVpcConfig) DeepCopyInto(out *ProjectSpecVpcConfig) {
	*out = *in
	if in.SecurityGroupIDS != nil {
		in, out := &in.SecurityGroupIDS, &out.SecurityGroupIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.VpcID != nil {
		in, out := &in.VpcID, &out.VpcID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpecVpcConfig.
func (in *ProjectSpecVpcConfig) DeepCopy() *ProjectSpecVpcConfig {
	if in == nil {
		return nil
	}
	out := new(ProjectSpecVpcConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectStatus) DeepCopyInto(out *ProjectStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectStatus.
func (in *ProjectStatus) DeepCopy() *ProjectStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReportGroup) DeepCopyInto(out *ReportGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReportGroup.
func (in *ReportGroup) DeepCopy() *ReportGroup {
	if in == nil {
		return nil
	}
	out := new(ReportGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ReportGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReportGroupList) DeepCopyInto(out *ReportGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ReportGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReportGroupList.
func (in *ReportGroupList) DeepCopy() *ReportGroupList {
	if in == nil {
		return nil
	}
	out := new(ReportGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ReportGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReportGroupSpec) DeepCopyInto(out *ReportGroupSpec) {
	*out = *in
	in.ReportGroupSpec2.DeepCopyInto(&out.ReportGroupSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReportGroupSpec.
func (in *ReportGroupSpec) DeepCopy() *ReportGroupSpec {
	if in == nil {
		return nil
	}
	out := new(ReportGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReportGroupSpec2) DeepCopyInto(out *ReportGroupSpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Created != nil {
		in, out := &in.Created, &out.Created
		*out = new(string)
		**out = **in
	}
	if in.DeleteReports != nil {
		in, out := &in.DeleteReports, &out.DeleteReports
		*out = new(bool)
		**out = **in
	}
	if in.ExportConfig != nil {
		in, out := &in.ExportConfig, &out.ExportConfig
		*out = new(ReportGroupSpecExportConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReportGroupSpec2.
func (in *ReportGroupSpec2) DeepCopy() *ReportGroupSpec2 {
	if in == nil {
		return nil
	}
	out := new(ReportGroupSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReportGroupSpecExportConfig) DeepCopyInto(out *ReportGroupSpecExportConfig) {
	*out = *in
	if in.S3Destination != nil {
		in, out := &in.S3Destination, &out.S3Destination
		*out = new(ReportGroupSpecExportConfigS3Destination)
		(*in).DeepCopyInto(*out)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReportGroupSpecExportConfig.
func (in *ReportGroupSpecExportConfig) DeepCopy() *ReportGroupSpecExportConfig {
	if in == nil {
		return nil
	}
	out := new(ReportGroupSpecExportConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReportGroupSpecExportConfigS3Destination) DeepCopyInto(out *ReportGroupSpecExportConfigS3Destination) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.EncryptionDisabled != nil {
		in, out := &in.EncryptionDisabled, &out.EncryptionDisabled
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionKey != nil {
		in, out := &in.EncryptionKey, &out.EncryptionKey
		*out = new(string)
		**out = **in
	}
	if in.Packaging != nil {
		in, out := &in.Packaging, &out.Packaging
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReportGroupSpecExportConfigS3Destination.
func (in *ReportGroupSpecExportConfigS3Destination) DeepCopy() *ReportGroupSpecExportConfigS3Destination {
	if in == nil {
		return nil
	}
	out := new(ReportGroupSpecExportConfigS3Destination)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReportGroupStatus) DeepCopyInto(out *ReportGroupStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReportGroupStatus.
func (in *ReportGroupStatus) DeepCopy() *ReportGroupStatus {
	if in == nil {
		return nil
	}
	out := new(ReportGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceCredential) DeepCopyInto(out *SourceCredential) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceCredential.
func (in *SourceCredential) DeepCopy() *SourceCredential {
	if in == nil {
		return nil
	}
	out := new(SourceCredential)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SourceCredential) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceCredentialList) DeepCopyInto(out *SourceCredentialList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SourceCredential, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceCredentialList.
func (in *SourceCredentialList) DeepCopy() *SourceCredentialList {
	if in == nil {
		return nil
	}
	out := new(SourceCredentialList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SourceCredentialList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceCredentialSpec) DeepCopyInto(out *SourceCredentialSpec) {
	*out = *in
	in.SourceCredentialSpec2.DeepCopyInto(&out.SourceCredentialSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceCredentialSpec.
func (in *SourceCredentialSpec) DeepCopy() *SourceCredentialSpec {
	if in == nil {
		return nil
	}
	out := new(SourceCredentialSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceCredentialSpec2) DeepCopyInto(out *SourceCredentialSpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AuthType != nil {
		in, out := &in.AuthType, &out.AuthType
		*out = new(string)
		**out = **in
	}
	if in.ServerType != nil {
		in, out := &in.ServerType, &out.ServerType
		*out = new(string)
		**out = **in
	}
	if in.Token != nil {
		in, out := &in.Token, &out.Token
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceCredentialSpec2.
func (in *SourceCredentialSpec2) DeepCopy() *SourceCredentialSpec2 {
	if in == nil {
		return nil
	}
	out := new(SourceCredentialSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceCredentialStatus) DeepCopyInto(out *SourceCredentialStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceCredentialStatus.
func (in *SourceCredentialStatus) DeepCopy() *SourceCredentialStatus {
	if in == nil {
		return nil
	}
	out := new(SourceCredentialStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Webhook) DeepCopyInto(out *Webhook) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Webhook.
func (in *Webhook) DeepCopy() *Webhook {
	if in == nil {
		return nil
	}
	out := new(Webhook)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Webhook) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookList) DeepCopyInto(out *WebhookList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Webhook, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookList.
func (in *WebhookList) DeepCopy() *WebhookList {
	if in == nil {
		return nil
	}
	out := new(WebhookList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WebhookList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookSpec) DeepCopyInto(out *WebhookSpec) {
	*out = *in
	in.WebhookSpec2.DeepCopyInto(&out.WebhookSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookSpec.
func (in *WebhookSpec) DeepCopy() *WebhookSpec {
	if in == nil {
		return nil
	}
	out := new(WebhookSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookSpec2) DeepCopyInto(out *WebhookSpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	if in.BranchFilter != nil {
		in, out := &in.BranchFilter, &out.BranchFilter
		*out = new(string)
		**out = **in
	}
	if in.FilterGroup != nil {
		in, out := &in.FilterGroup, &out.FilterGroup
		*out = make([]WebhookSpecFilterGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PayloadURL != nil {
		in, out := &in.PayloadURL, &out.PayloadURL
		*out = new(string)
		**out = **in
	}
	if in.ProjectName != nil {
		in, out := &in.ProjectName, &out.ProjectName
		*out = new(string)
		**out = **in
	}
	if in.Secret != nil {
		in, out := &in.Secret, &out.Secret
		*out = new(string)
		**out = **in
	}
	if in.Url != nil {
		in, out := &in.Url, &out.Url
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookSpec2.
func (in *WebhookSpec2) DeepCopy() *WebhookSpec2 {
	if in == nil {
		return nil
	}
	out := new(WebhookSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookSpecFilterGroup) DeepCopyInto(out *WebhookSpecFilterGroup) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]WebhookSpecFilterGroupFilter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookSpecFilterGroup.
func (in *WebhookSpecFilterGroup) DeepCopy() *WebhookSpecFilterGroup {
	if in == nil {
		return nil
	}
	out := new(WebhookSpecFilterGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookSpecFilterGroupFilter) DeepCopyInto(out *WebhookSpecFilterGroupFilter) {
	*out = *in
	if in.ExcludeMatchedPattern != nil {
		in, out := &in.ExcludeMatchedPattern, &out.ExcludeMatchedPattern
		*out = new(bool)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookSpecFilterGroupFilter.
func (in *WebhookSpecFilterGroupFilter) DeepCopy() *WebhookSpecFilterGroupFilter {
	if in == nil {
		return nil
	}
	out := new(WebhookSpecFilterGroupFilter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookStatus) DeepCopyInto(out *WebhookStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookStatus.
func (in *WebhookStatus) DeepCopy() *WebhookStatus {
	if in == nil {
		return nil
	}
	out := new(WebhookStatus)
	in.DeepCopyInto(out)
	return out
}
