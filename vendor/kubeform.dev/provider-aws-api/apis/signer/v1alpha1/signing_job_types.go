/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type SigningJob struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SigningJobSpec   `json:"spec,omitempty"`
	Status            SigningJobStatus `json:"status,omitempty"`
}

type SigningJobSpec struct {
	SigningJobSpec2 `json:",inline"`
	// +optional
	KubeformOutput SigningJobSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type SigningJobSpecDestinationS3 struct {
	Bucket *string `json:"bucket" tf:"bucket"`
	// +optional
	Prefix *string `json:"prefix,omitempty" tf:"prefix"`
}

type SigningJobSpecDestination struct {
	S3 *SigningJobSpecDestinationS3 `json:"s3" tf:"s3"`
}

type SigningJobSpecRevocationRecord struct {
	// +optional
	Reason *string `json:"reason,omitempty" tf:"reason"`
	// +optional
	RevokedAt *string `json:"revokedAt,omitempty" tf:"revoked_at"`
	// +optional
	RevokedBy *string `json:"revokedBy,omitempty" tf:"revoked_by"`
}

type SigningJobSpecSignedObjectS3 struct {
	// +optional
	Bucket *string `json:"bucket,omitempty" tf:"bucket"`
	// +optional
	Key *string `json:"key,omitempty" tf:"key"`
}

type SigningJobSpecSignedObject struct {
	// +optional
	S3 []SigningJobSpecSignedObjectS3 `json:"s3,omitempty" tf:"s3"`
}

type SigningJobSpecSourceS3 struct {
	Bucket  *string `json:"bucket" tf:"bucket"`
	Key     *string `json:"key" tf:"key"`
	Version *string `json:"version" tf:"version"`
}

type SigningJobSpecSource struct {
	S3 *SigningJobSpecSourceS3 `json:"s3" tf:"s3"`
}

type SigningJobSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	CompletedAt *string `json:"completedAt,omitempty" tf:"completed_at"`
	// +optional
	CreatedAt   *string                    `json:"createdAt,omitempty" tf:"created_at"`
	Destination *SigningJobSpecDestination `json:"destination" tf:"destination"`
	// +optional
	IgnoreSigningJobFailure *bool `json:"ignoreSigningJobFailure,omitempty" tf:"ignore_signing_job_failure"`
	// +optional
	JobID *string `json:"jobID,omitempty" tf:"job_id"`
	// +optional
	JobInvoker *string `json:"jobInvoker,omitempty" tf:"job_invoker"`
	// +optional
	JobOwner *string `json:"jobOwner,omitempty" tf:"job_owner"`
	// +optional
	PlatformDisplayName *string `json:"platformDisplayName,omitempty" tf:"platform_display_name"`
	// +optional
	PlatformID  *string `json:"platformID,omitempty" tf:"platform_id"`
	ProfileName *string `json:"profileName" tf:"profile_name"`
	// +optional
	ProfileVersion *string `json:"profileVersion,omitempty" tf:"profile_version"`
	// +optional
	RequestedBy *string `json:"requestedBy,omitempty" tf:"requested_by"`
	// +optional
	RevocationRecord []SigningJobSpecRevocationRecord `json:"revocationRecord,omitempty" tf:"revocation_record"`
	// +optional
	SignatureExpiresAt *string `json:"signatureExpiresAt,omitempty" tf:"signature_expires_at"`
	// +optional
	SignedObject []SigningJobSpecSignedObject `json:"signedObject,omitempty" tf:"signed_object"`
	Source       *SigningJobSpecSource        `json:"source" tf:"source"`
	// +optional
	Status *string `json:"status,omitempty" tf:"status"`
	// +optional
	StatusReason *string `json:"statusReason,omitempty" tf:"status_reason"`
}

type SigningJobStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// SigningJobList is a list of SigningJobs
type SigningJobList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of SigningJob CRD objects
	Items []SigningJob `json:"items,omitempty"`
}
