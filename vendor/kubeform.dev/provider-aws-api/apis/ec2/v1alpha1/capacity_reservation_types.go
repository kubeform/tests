/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type CapacityReservation struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              CapacityReservationSpec   `json:"spec,omitempty"`
	Status            CapacityReservationStatus `json:"status,omitempty"`
}

type CapacityReservationSpec struct {
	CapacityReservationSpec2 `json:",inline"`
	// +optional
	KubeformOutput CapacityReservationSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type CapacityReservationSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	Arn              *string `json:"arn,omitempty" tf:"arn"`
	AvailabilityZone *string `json:"availabilityZone" tf:"availability_zone"`
	// +optional
	EbsOptimized *bool `json:"ebsOptimized,omitempty" tf:"ebs_optimized"`
	// +optional
	EndDate *string `json:"endDate,omitempty" tf:"end_date"`
	// +optional
	EndDateType *string `json:"endDateType,omitempty" tf:"end_date_type"`
	// +optional
	EphemeralStorage *bool  `json:"ephemeralStorage,omitempty" tf:"ephemeral_storage"`
	InstanceCount    *int64 `json:"instanceCount" tf:"instance_count"`
	// +optional
	InstanceMatchCriteria *string `json:"instanceMatchCriteria,omitempty" tf:"instance_match_criteria"`
	InstancePlatform      *string `json:"instancePlatform" tf:"instance_platform"`
	InstanceType          *string `json:"instanceType" tf:"instance_type"`
	// +optional
	OwnerID *string `json:"ownerID,omitempty" tf:"owner_id"`
	// +optional
	Tags *map[string]string `json:"tags,omitempty" tf:"tags"`
	// +optional
	Tenancy *string `json:"tenancy,omitempty" tf:"tenancy"`
}

type CapacityReservationStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// CapacityReservationList is a list of CapacityReservations
type CapacityReservationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of CapacityReservation CRD objects
	Items []CapacityReservation `json:"items,omitempty"`
}
