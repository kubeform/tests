/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type WindowsFileSystem struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              WindowsFileSystemSpec   `json:"spec,omitempty"`
	Status            WindowsFileSystemStatus `json:"status,omitempty"`
}

type WindowsFileSystemSpec struct {
	WindowsFileSystemSpec2 `json:",inline"`
	// +optional
	KubeformOutput WindowsFileSystemSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type WindowsFileSystemSpecSelfManagedActiveDirectory struct {
	// +kubebuilder:validation:MaxItems=2
	// +kubebuilder:validation:MinItems=1
	DnsIPS     []string `json:"dnsIPS" tf:"dns_ips"`
	DomainName *string  `json:"domainName" tf:"domain_name"`
	// +optional
	FileSystemAdministratorsGroup *string `json:"fileSystemAdministratorsGroup,omitempty" tf:"file_system_administrators_group"`
	// +optional
	OrganizationalUnitDistinguishedName *string `json:"organizationalUnitDistinguishedName,omitempty" tf:"organizational_unit_distinguished_name"`
	Password                            *string `json:"-" sensitive:"true" tf:"password"`
	Username                            *string `json:"username" tf:"username"`
}

type WindowsFileSystemSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`

	// +optional
	ActiveDirectoryID *string `json:"activeDirectoryID,omitempty" tf:"active_directory_id"`
	// +optional
	Arn *string `json:"arn,omitempty" tf:"arn"`
	// +optional
	AutomaticBackupRetentionDays *int64 `json:"automaticBackupRetentionDays,omitempty" tf:"automatic_backup_retention_days"`
	// +optional
	CopyTagsToBackups *bool `json:"copyTagsToBackups,omitempty" tf:"copy_tags_to_backups"`
	// +optional
	DailyAutomaticBackupStartTime *string `json:"dailyAutomaticBackupStartTime,omitempty" tf:"daily_automatic_backup_start_time"`
	// +optional
	DeploymentType *string `json:"deploymentType,omitempty" tf:"deployment_type"`
	// +optional
	DnsName *string `json:"dnsName,omitempty" tf:"dns_name"`
	// +optional
	KmsKeyID *string `json:"kmsKeyID,omitempty" tf:"kms_key_id"`
	// +optional
	NetworkInterfaceIDS []string `json:"networkInterfaceIDS,omitempty" tf:"network_interface_ids"`
	// +optional
	OwnerID *string `json:"ownerID,omitempty" tf:"owner_id"`
	// +optional
	PreferredFileServerIP *string `json:"preferredFileServerIP,omitempty" tf:"preferred_file_server_ip"`
	// +optional
	PreferredSubnetID *string `json:"preferredSubnetID,omitempty" tf:"preferred_subnet_id"`
	// +optional
	RemoteAdministrationEndpoint *string `json:"remoteAdministrationEndpoint,omitempty" tf:"remote_administration_endpoint"`
	// +optional
	// +kubebuilder:validation:MaxItems=50
	SecurityGroupIDS []string `json:"securityGroupIDS,omitempty" tf:"security_group_ids"`
	// +optional
	SelfManagedActiveDirectory *WindowsFileSystemSpecSelfManagedActiveDirectory `json:"selfManagedActiveDirectory,omitempty" tf:"self_managed_active_directory"`
	// +optional
	SkipFinalBackup *bool  `json:"skipFinalBackup,omitempty" tf:"skip_final_backup"`
	StorageCapacity *int64 `json:"storageCapacity" tf:"storage_capacity"`
	// +optional
	StorageType *string `json:"storageType,omitempty" tf:"storage_type"`
	// +kubebuilder:validation:MinItems=1
	SubnetIDS []string `json:"subnetIDS" tf:"subnet_ids"`
	// +optional
	Tags               *map[string]string `json:"tags,omitempty" tf:"tags"`
	ThroughputCapacity *int64             `json:"throughputCapacity" tf:"throughput_capacity"`
	// +optional
	VpcID *string `json:"vpcID,omitempty" tf:"vpc_id"`
	// +optional
	WeeklyMaintenanceStartTime *string `json:"weeklyMaintenanceStartTime,omitempty" tf:"weekly_maintenance_start_time"`
}

type WindowsFileSystemStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// WindowsFileSystemList is a list of WindowsFileSystems
type WindowsFileSystemList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of WindowsFileSystem CRD objects
	Items []WindowsFileSystem `json:"items,omitempty"`
}
