/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type MaintenanceWindowTask struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              MaintenanceWindowTaskSpec   `json:"spec,omitempty"`
	Status            MaintenanceWindowTaskStatus `json:"status,omitempty"`
}

type MaintenanceWindowTaskSpec struct {
	MaintenanceWindowTaskSpec2 `json:",inline"`
	// +optional
	KubeformOutput MaintenanceWindowTaskSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type MaintenanceWindowTaskSpecTargets struct {
	Key *string `json:"key" tf:"key"`
	// +kubebuilder:validation:MaxItems=50
	Values []string `json:"values" tf:"values"`
}

type MaintenanceWindowTaskSpecTaskInvocationParametersAutomationParametersParameter struct {
	Name   *string  `json:"name" tf:"name"`
	Values []string `json:"values" tf:"values"`
}

type MaintenanceWindowTaskSpecTaskInvocationParametersAutomationParameters struct {
	// +optional
	DocumentVersion *string `json:"documentVersion,omitempty" tf:"document_version"`
	// +optional
	Parameter []MaintenanceWindowTaskSpecTaskInvocationParametersAutomationParametersParameter `json:"parameter,omitempty" tf:"parameter"`
}

type MaintenanceWindowTaskSpecTaskInvocationParametersLambdaParameters struct {
	// +optional
	ClientContext *string `json:"clientContext,omitempty" tf:"client_context"`
	// +optional
	Payload *string `json:"-" sensitive:"true" tf:"payload"`
	// +optional
	Qualifier *string `json:"qualifier,omitempty" tf:"qualifier"`
}

type MaintenanceWindowTaskSpecTaskInvocationParametersRunCommandParametersCloudwatchConfig struct {
	// +optional
	CloudwatchLogGroupName *string `json:"cloudwatchLogGroupName,omitempty" tf:"cloudwatch_log_group_name"`
	// +optional
	CloudwatchOutputEnabled *bool `json:"cloudwatchOutputEnabled,omitempty" tf:"cloudwatch_output_enabled"`
}

type MaintenanceWindowTaskSpecTaskInvocationParametersRunCommandParametersNotificationConfig struct {
	// +optional
	NotificationArn *string `json:"notificationArn,omitempty" tf:"notification_arn"`
	// +optional
	NotificationEvents []string `json:"notificationEvents,omitempty" tf:"notification_events"`
	// +optional
	NotificationType *string `json:"notificationType,omitempty" tf:"notification_type"`
}

type MaintenanceWindowTaskSpecTaskInvocationParametersRunCommandParametersParameter struct {
	Name   *string  `json:"name" tf:"name"`
	Values []string `json:"values" tf:"values"`
}

type MaintenanceWindowTaskSpecTaskInvocationParametersRunCommandParameters struct {
	// +optional
	CloudwatchConfig *MaintenanceWindowTaskSpecTaskInvocationParametersRunCommandParametersCloudwatchConfig `json:"cloudwatchConfig,omitempty" tf:"cloudwatch_config"`
	// +optional
	Comment *string `json:"comment,omitempty" tf:"comment"`
	// +optional
	DocumentHash *string `json:"documentHash,omitempty" tf:"document_hash"`
	// +optional
	DocumentHashType *string `json:"documentHashType,omitempty" tf:"document_hash_type"`
	// +optional
	DocumentVersion *string `json:"documentVersion,omitempty" tf:"document_version"`
	// +optional
	NotificationConfig *MaintenanceWindowTaskSpecTaskInvocationParametersRunCommandParametersNotificationConfig `json:"notificationConfig,omitempty" tf:"notification_config"`
	// +optional
	OutputS3Bucket *string `json:"outputS3Bucket,omitempty" tf:"output_s3_bucket"`
	// +optional
	OutputS3KeyPrefix *string `json:"outputS3KeyPrefix,omitempty" tf:"output_s3_key_prefix"`
	// +optional
	Parameter []MaintenanceWindowTaskSpecTaskInvocationParametersRunCommandParametersParameter `json:"parameter,omitempty" tf:"parameter"`
	// +optional
	ServiceRoleArn *string `json:"serviceRoleArn,omitempty" tf:"service_role_arn"`
	// +optional
	TimeoutSeconds *int64 `json:"timeoutSeconds,omitempty" tf:"timeout_seconds"`
}

type MaintenanceWindowTaskSpecTaskInvocationParametersStepFunctionsParameters struct {
	// +optional
	Input *string `json:"-" sensitive:"true" tf:"input"`
	// +optional
	Name *string `json:"name,omitempty" tf:"name"`
}

type MaintenanceWindowTaskSpecTaskInvocationParameters struct {
	// +optional
	AutomationParameters *MaintenanceWindowTaskSpecTaskInvocationParametersAutomationParameters `json:"automationParameters,omitempty" tf:"automation_parameters"`
	// +optional
	LambdaParameters *MaintenanceWindowTaskSpecTaskInvocationParametersLambdaParameters `json:"lambdaParameters,omitempty" tf:"lambda_parameters"`
	// +optional
	RunCommandParameters *MaintenanceWindowTaskSpecTaskInvocationParametersRunCommandParameters `json:"runCommandParameters,omitempty" tf:"run_command_parameters"`
	// +optional
	StepFunctionsParameters *MaintenanceWindowTaskSpecTaskInvocationParametersStepFunctionsParameters `json:"stepFunctionsParameters,omitempty" tf:"step_functions_parameters"`
}

type MaintenanceWindowTaskSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`

	// +optional
	Description    *string `json:"description,omitempty" tf:"description"`
	MaxConcurrency *string `json:"maxConcurrency" tf:"max_concurrency"`
	MaxErrors      *string `json:"maxErrors" tf:"max_errors"`
	// +optional
	Name *string `json:"name,omitempty" tf:"name"`
	// +optional
	Priority *int64 `json:"priority,omitempty" tf:"priority"`
	// +optional
	ServiceRoleArn *string `json:"serviceRoleArn,omitempty" tf:"service_role_arn"`
	// +optional
	// +kubebuilder:validation:MaxItems=5
	Targets []MaintenanceWindowTaskSpecTargets `json:"targets,omitempty" tf:"targets"`
	TaskArn *string                            `json:"taskArn" tf:"task_arn"`
	// +optional
	TaskInvocationParameters *MaintenanceWindowTaskSpecTaskInvocationParameters `json:"taskInvocationParameters,omitempty" tf:"task_invocation_parameters"`
	TaskType                 *string                                            `json:"taskType" tf:"task_type"`
	WindowID                 *string                                            `json:"windowID" tf:"window_id"`
}

type MaintenanceWindowTaskStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// MaintenanceWindowTaskList is a list of MaintenanceWindowTasks
type MaintenanceWindowTaskList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of MaintenanceWindowTask CRD objects
	Items []MaintenanceWindowTask `json:"items,omitempty"`
}
