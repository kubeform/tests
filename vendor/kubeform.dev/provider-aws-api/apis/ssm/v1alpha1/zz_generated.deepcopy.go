// +build !ignore_autogenerated

/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	corev1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	v1 "kmodules.xyz/client-go/api/v1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Activation) DeepCopyInto(out *Activation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Activation.
func (in *Activation) DeepCopy() *Activation {
	if in == nil {
		return nil
	}
	out := new(Activation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Activation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActivationList) DeepCopyInto(out *ActivationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Activation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActivationList.
func (in *ActivationList) DeepCopy() *ActivationList {
	if in == nil {
		return nil
	}
	out := new(ActivationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ActivationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActivationSpec) DeepCopyInto(out *ActivationSpec) {
	*out = *in
	in.ActivationSpec2.DeepCopyInto(&out.ActivationSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActivationSpec.
func (in *ActivationSpec) DeepCopy() *ActivationSpec {
	if in == nil {
		return nil
	}
	out := new(ActivationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActivationSpec2) DeepCopyInto(out *ActivationSpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.ActivationCode != nil {
		in, out := &in.ActivationCode, &out.ActivationCode
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ExpirationDate != nil {
		in, out := &in.ExpirationDate, &out.ExpirationDate
		*out = new(string)
		**out = **in
	}
	if in.Expired != nil {
		in, out := &in.Expired, &out.Expired
		*out = new(bool)
		**out = **in
	}
	if in.IamRole != nil {
		in, out := &in.IamRole, &out.IamRole
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RegistrationCount != nil {
		in, out := &in.RegistrationCount, &out.RegistrationCount
		*out = new(int64)
		**out = **in
	}
	if in.RegistrationLimit != nil {
		in, out := &in.RegistrationLimit, &out.RegistrationLimit
		*out = new(int64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActivationSpec2.
func (in *ActivationSpec2) DeepCopy() *ActivationSpec2 {
	if in == nil {
		return nil
	}
	out := new(ActivationSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActivationStatus) DeepCopyInto(out *ActivationStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActivationStatus.
func (in *ActivationStatus) DeepCopy() *ActivationStatus {
	if in == nil {
		return nil
	}
	out := new(ActivationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Association) DeepCopyInto(out *Association) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Association.
func (in *Association) DeepCopy() *Association {
	if in == nil {
		return nil
	}
	out := new(Association)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Association) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssociationList) DeepCopyInto(out *AssociationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Association, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssociationList.
func (in *AssociationList) DeepCopy() *AssociationList {
	if in == nil {
		return nil
	}
	out := new(AssociationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AssociationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssociationSpec) DeepCopyInto(out *AssociationSpec) {
	*out = *in
	in.AssociationSpec2.DeepCopyInto(&out.AssociationSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssociationSpec.
func (in *AssociationSpec) DeepCopy() *AssociationSpec {
	if in == nil {
		return nil
	}
	out := new(AssociationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssociationSpec2) DeepCopyInto(out *AssociationSpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.ApplyOnlyAtCronInterval != nil {
		in, out := &in.ApplyOnlyAtCronInterval, &out.ApplyOnlyAtCronInterval
		*out = new(bool)
		**out = **in
	}
	if in.AssociationID != nil {
		in, out := &in.AssociationID, &out.AssociationID
		*out = new(string)
		**out = **in
	}
	if in.AssociationName != nil {
		in, out := &in.AssociationName, &out.AssociationName
		*out = new(string)
		**out = **in
	}
	if in.AutomationTargetParameterName != nil {
		in, out := &in.AutomationTargetParameterName, &out.AutomationTargetParameterName
		*out = new(string)
		**out = **in
	}
	if in.ComplianceSeverity != nil {
		in, out := &in.ComplianceSeverity, &out.ComplianceSeverity
		*out = new(string)
		**out = **in
	}
	if in.DocumentVersion != nil {
		in, out := &in.DocumentVersion, &out.DocumentVersion
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.MaxConcurrency != nil {
		in, out := &in.MaxConcurrency, &out.MaxConcurrency
		*out = new(string)
		**out = **in
	}
	if in.MaxErrors != nil {
		in, out := &in.MaxErrors, &out.MaxErrors
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OutputLocation != nil {
		in, out := &in.OutputLocation, &out.OutputLocation
		*out = new(AssociationSpecOutputLocation)
		(*in).DeepCopyInto(*out)
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.ScheduleExpression != nil {
		in, out := &in.ScheduleExpression, &out.ScheduleExpression
		*out = new(string)
		**out = **in
	}
	if in.Targets != nil {
		in, out := &in.Targets, &out.Targets
		*out = make([]AssociationSpecTargets, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssociationSpec2.
func (in *AssociationSpec2) DeepCopy() *AssociationSpec2 {
	if in == nil {
		return nil
	}
	out := new(AssociationSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssociationSpecOutputLocation) DeepCopyInto(out *AssociationSpecOutputLocation) {
	*out = *in
	if in.S3BucketName != nil {
		in, out := &in.S3BucketName, &out.S3BucketName
		*out = new(string)
		**out = **in
	}
	if in.S3KeyPrefix != nil {
		in, out := &in.S3KeyPrefix, &out.S3KeyPrefix
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssociationSpecOutputLocation.
func (in *AssociationSpecOutputLocation) DeepCopy() *AssociationSpecOutputLocation {
	if in == nil {
		return nil
	}
	out := new(AssociationSpecOutputLocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssociationSpecTargets) DeepCopyInto(out *AssociationSpecTargets) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssociationSpecTargets.
func (in *AssociationSpecTargets) DeepCopy() *AssociationSpecTargets {
	if in == nil {
		return nil
	}
	out := new(AssociationSpecTargets)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssociationStatus) DeepCopyInto(out *AssociationStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssociationStatus.
func (in *AssociationStatus) DeepCopy() *AssociationStatus {
	if in == nil {
		return nil
	}
	out := new(AssociationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Document) DeepCopyInto(out *Document) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Document.
func (in *Document) DeepCopy() *Document {
	if in == nil {
		return nil
	}
	out := new(Document)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Document) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DocumentList) DeepCopyInto(out *DocumentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Document, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DocumentList.
func (in *DocumentList) DeepCopy() *DocumentList {
	if in == nil {
		return nil
	}
	out := new(DocumentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DocumentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DocumentSpec) DeepCopyInto(out *DocumentSpec) {
	*out = *in
	in.DocumentSpec2.DeepCopyInto(&out.DocumentSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DocumentSpec.
func (in *DocumentSpec) DeepCopy() *DocumentSpec {
	if in == nil {
		return nil
	}
	out := new(DocumentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DocumentSpec2) DeepCopyInto(out *DocumentSpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AttachmentsSource != nil {
		in, out := &in.AttachmentsSource, &out.AttachmentsSource
		*out = make([]DocumentSpecAttachmentsSource, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Content != nil {
		in, out := &in.Content, &out.Content
		*out = new(string)
		**out = **in
	}
	if in.CreatedDate != nil {
		in, out := &in.CreatedDate, &out.CreatedDate
		*out = new(string)
		**out = **in
	}
	if in.DefaultVersion != nil {
		in, out := &in.DefaultVersion, &out.DefaultVersion
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DocumentFormat != nil {
		in, out := &in.DocumentFormat, &out.DocumentFormat
		*out = new(string)
		**out = **in
	}
	if in.DocumentType != nil {
		in, out := &in.DocumentType, &out.DocumentType
		*out = new(string)
		**out = **in
	}
	if in.DocumentVersion != nil {
		in, out := &in.DocumentVersion, &out.DocumentVersion
		*out = new(string)
		**out = **in
	}
	if in.Hash != nil {
		in, out := &in.Hash, &out.Hash
		*out = new(string)
		**out = **in
	}
	if in.HashType != nil {
		in, out := &in.HashType, &out.HashType
		*out = new(string)
		**out = **in
	}
	if in.LatestVersion != nil {
		in, out := &in.LatestVersion, &out.LatestVersion
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Parameter != nil {
		in, out := &in.Parameter, &out.Parameter
		*out = make([]DocumentSpecParameter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Permissions != nil {
		in, out := &in.Permissions, &out.Permissions
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.PlatformTypes != nil {
		in, out := &in.PlatformTypes, &out.PlatformTypes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SchemaVersion != nil {
		in, out := &in.SchemaVersion, &out.SchemaVersion
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.TargetType != nil {
		in, out := &in.TargetType, &out.TargetType
		*out = new(string)
		**out = **in
	}
	if in.VersionName != nil {
		in, out := &in.VersionName, &out.VersionName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DocumentSpec2.
func (in *DocumentSpec2) DeepCopy() *DocumentSpec2 {
	if in == nil {
		return nil
	}
	out := new(DocumentSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DocumentSpecAttachmentsSource) DeepCopyInto(out *DocumentSpecAttachmentsSource) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DocumentSpecAttachmentsSource.
func (in *DocumentSpecAttachmentsSource) DeepCopy() *DocumentSpecAttachmentsSource {
	if in == nil {
		return nil
	}
	out := new(DocumentSpecAttachmentsSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DocumentSpecParameter) DeepCopyInto(out *DocumentSpecParameter) {
	*out = *in
	if in.DefaultValue != nil {
		in, out := &in.DefaultValue, &out.DefaultValue
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DocumentSpecParameter.
func (in *DocumentSpecParameter) DeepCopy() *DocumentSpecParameter {
	if in == nil {
		return nil
	}
	out := new(DocumentSpecParameter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DocumentStatus) DeepCopyInto(out *DocumentStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DocumentStatus.
func (in *DocumentStatus) DeepCopy() *DocumentStatus {
	if in == nil {
		return nil
	}
	out := new(DocumentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindow) DeepCopyInto(out *MaintenanceWindow) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindow.
func (in *MaintenanceWindow) DeepCopy() *MaintenanceWindow {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindow)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MaintenanceWindow) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowList) DeepCopyInto(out *MaintenanceWindowList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MaintenanceWindow, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowList.
func (in *MaintenanceWindowList) DeepCopy() *MaintenanceWindowList {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MaintenanceWindowList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowSpec) DeepCopyInto(out *MaintenanceWindowSpec) {
	*out = *in
	in.MaintenanceWindowSpec2.DeepCopyInto(&out.MaintenanceWindowSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowSpec.
func (in *MaintenanceWindowSpec) DeepCopy() *MaintenanceWindowSpec {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowSpec2) DeepCopyInto(out *MaintenanceWindowSpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.AllowUnassociatedTargets != nil {
		in, out := &in.AllowUnassociatedTargets, &out.AllowUnassociatedTargets
		*out = new(bool)
		**out = **in
	}
	if in.Cutoff != nil {
		in, out := &in.Cutoff, &out.Cutoff
		*out = new(int64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(int64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.EndDate != nil {
		in, out := &in.EndDate, &out.EndDate
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
	if in.ScheduleOffset != nil {
		in, out := &in.ScheduleOffset, &out.ScheduleOffset
		*out = new(int64)
		**out = **in
	}
	if in.ScheduleTimezone != nil {
		in, out := &in.ScheduleTimezone, &out.ScheduleTimezone
		*out = new(string)
		**out = **in
	}
	if in.StartDate != nil {
		in, out := &in.StartDate, &out.StartDate
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowSpec2.
func (in *MaintenanceWindowSpec2) DeepCopy() *MaintenanceWindowSpec2 {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowStatus) DeepCopyInto(out *MaintenanceWindowStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowStatus.
func (in *MaintenanceWindowStatus) DeepCopy() *MaintenanceWindowStatus {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowTarget) DeepCopyInto(out *MaintenanceWindowTarget) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowTarget.
func (in *MaintenanceWindowTarget) DeepCopy() *MaintenanceWindowTarget {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowTarget)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MaintenanceWindowTarget) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowTargetList) DeepCopyInto(out *MaintenanceWindowTargetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MaintenanceWindowTarget, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowTargetList.
func (in *MaintenanceWindowTargetList) DeepCopy() *MaintenanceWindowTargetList {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowTargetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MaintenanceWindowTargetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowTargetSpec) DeepCopyInto(out *MaintenanceWindowTargetSpec) {
	*out = *in
	in.MaintenanceWindowTargetSpec2.DeepCopyInto(&out.MaintenanceWindowTargetSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowTargetSpec.
func (in *MaintenanceWindowTargetSpec) DeepCopy() *MaintenanceWindowTargetSpec {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowTargetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowTargetSpec2) DeepCopyInto(out *MaintenanceWindowTargetSpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OwnerInformation != nil {
		in, out := &in.OwnerInformation, &out.OwnerInformation
		*out = new(string)
		**out = **in
	}
	if in.ResourceType != nil {
		in, out := &in.ResourceType, &out.ResourceType
		*out = new(string)
		**out = **in
	}
	if in.Targets != nil {
		in, out := &in.Targets, &out.Targets
		*out = make([]MaintenanceWindowTargetSpecTargets, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WindowID != nil {
		in, out := &in.WindowID, &out.WindowID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowTargetSpec2.
func (in *MaintenanceWindowTargetSpec2) DeepCopy() *MaintenanceWindowTargetSpec2 {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowTargetSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowTargetSpecTargets) DeepCopyInto(out *MaintenanceWindowTargetSpecTargets) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowTargetSpecTargets.
func (in *MaintenanceWindowTargetSpecTargets) DeepCopy() *MaintenanceWindowTargetSpecTargets {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowTargetSpecTargets)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowTargetStatus) DeepCopyInto(out *MaintenanceWindowTargetStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowTargetStatus.
func (in *MaintenanceWindowTargetStatus) DeepCopy() *MaintenanceWindowTargetStatus {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowTargetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowTask) DeepCopyInto(out *MaintenanceWindowTask) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowTask.
func (in *MaintenanceWindowTask) DeepCopy() *MaintenanceWindowTask {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowTask)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MaintenanceWindowTask) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowTaskList) DeepCopyInto(out *MaintenanceWindowTaskList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MaintenanceWindowTask, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowTaskList.
func (in *MaintenanceWindowTaskList) DeepCopy() *MaintenanceWindowTaskList {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowTaskList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MaintenanceWindowTaskList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowTaskSpec) DeepCopyInto(out *MaintenanceWindowTaskSpec) {
	*out = *in
	in.MaintenanceWindowTaskSpec2.DeepCopyInto(&out.MaintenanceWindowTaskSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowTaskSpec.
func (in *MaintenanceWindowTaskSpec) DeepCopy() *MaintenanceWindowTaskSpec {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowTaskSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowTaskSpec2) DeepCopyInto(out *MaintenanceWindowTaskSpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(corev1.LocalObjectReference)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.MaxConcurrency != nil {
		in, out := &in.MaxConcurrency, &out.MaxConcurrency
		*out = new(string)
		**out = **in
	}
	if in.MaxErrors != nil {
		in, out := &in.MaxErrors, &out.MaxErrors
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int64)
		**out = **in
	}
	if in.ServiceRoleArn != nil {
		in, out := &in.ServiceRoleArn, &out.ServiceRoleArn
		*out = new(string)
		**out = **in
	}
	if in.Targets != nil {
		in, out := &in.Targets, &out.Targets
		*out = make([]MaintenanceWindowTaskSpecTargets, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskArn != nil {
		in, out := &in.TaskArn, &out.TaskArn
		*out = new(string)
		**out = **in
	}
	if in.TaskInvocationParameters != nil {
		in, out := &in.TaskInvocationParameters, &out.TaskInvocationParameters
		*out = new(MaintenanceWindowTaskSpecTaskInvocationParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.TaskType != nil {
		in, out := &in.TaskType, &out.TaskType
		*out = new(string)
		**out = **in
	}
	if in.WindowID != nil {
		in, out := &in.WindowID, &out.WindowID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowTaskSpec2.
func (in *MaintenanceWindowTaskSpec2) DeepCopy() *MaintenanceWindowTaskSpec2 {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowTaskSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowTaskSpecTargets) DeepCopyInto(out *MaintenanceWindowTaskSpecTargets) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowTaskSpecTargets.
func (in *MaintenanceWindowTaskSpecTargets) DeepCopy() *MaintenanceWindowTaskSpecTargets {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowTaskSpecTargets)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowTaskSpecTaskInvocationParameters) DeepCopyInto(out *MaintenanceWindowTaskSpecTaskInvocationParameters) {
	*out = *in
	if in.AutomationParameters != nil {
		in, out := &in.AutomationParameters, &out.AutomationParameters
		*out = new(MaintenanceWindowTaskSpecTaskInvocationParametersAutomationParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.LambdaParameters != nil {
		in, out := &in.LambdaParameters, &out.LambdaParameters
		*out = new(MaintenanceWindowTaskSpecTaskInvocationParametersLambdaParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.RunCommandParameters != nil {
		in, out := &in.RunCommandParameters, &out.RunCommandParameters
		*out = new(MaintenanceWindowTaskSpecTaskInvocationParametersRunCommandParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.StepFunctionsParameters != nil {
		in, out := &in.StepFunctionsParameters, &out.StepFunctionsParameters
		*out = new(MaintenanceWindowTaskSpecTaskInvocationParametersStepFunctionsParameters)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowTaskSpecTaskInvocationParameters.
func (in *MaintenanceWindowTaskSpecTaskInvocationParameters) DeepCopy() *MaintenanceWindowTaskSpecTaskInvocationParameters {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowTaskSpecTaskInvocationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowTaskSpecTaskInvocationParametersAutomationParameters) DeepCopyInto(out *MaintenanceWindowTaskSpecTaskInvocationParametersAutomationParameters) {
	*out = *in
	if in.DocumentVersion != nil {
		in, out := &in.DocumentVersion, &out.DocumentVersion
		*out = new(string)
		**out = **in
	}
	if in.Parameter != nil {
		in, out := &in.Parameter, &out.Parameter
		*out = make([]MaintenanceWindowTaskSpecTaskInvocationParametersAutomationParametersParameter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowTaskSpecTaskInvocationParametersAutomationParameters.
func (in *MaintenanceWindowTaskSpecTaskInvocationParametersAutomationParameters) DeepCopy() *MaintenanceWindowTaskSpecTaskInvocationParametersAutomationParameters {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowTaskSpecTaskInvocationParametersAutomationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowTaskSpecTaskInvocationParametersAutomationParametersParameter) DeepCopyInto(out *MaintenanceWindowTaskSpecTaskInvocationParametersAutomationParametersParameter) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowTaskSpecTaskInvocationParametersAutomationParametersParameter.
func (in *MaintenanceWindowTaskSpecTaskInvocationParametersAutomationParametersParameter) DeepCopy() *MaintenanceWindowTaskSpecTaskInvocationParametersAutomationParametersParameter {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowTaskSpecTaskInvocationParametersAutomationParametersParameter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowTaskSpecTaskInvocationParametersLambdaParameters) DeepCopyInto(out *MaintenanceWindowTaskSpecTaskInvocationParametersLambdaParameters) {
	*out = *in
	if in.ClientContext != nil {
		in, out := &in.ClientContext, &out.ClientContext
		*out = new(string)
		**out = **in
	}
	if in.Payload != nil {
		in, out := &in.Payload, &out.Payload
		*out = new(string)
		**out = **in
	}
	if in.Qualifier != nil {
		in, out := &in.Qualifier, &out.Qualifier
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowTaskSpecTaskInvocationParametersLambdaParameters.
func (in *MaintenanceWindowTaskSpecTaskInvocationParametersLambdaParameters) DeepCopy() *MaintenanceWindowTaskSpecTaskInvocationParametersLambdaParameters {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowTaskSpecTaskInvocationParametersLambdaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowTaskSpecTaskInvocationParametersRunCommandParameters) DeepCopyInto(out *MaintenanceWindowTaskSpecTaskInvocationParametersRunCommandParameters) {
	*out = *in
	if in.CloudwatchConfig != nil {
		in, out := &in.CloudwatchConfig, &out.CloudwatchConfig
		*out = new(MaintenanceWindowTaskSpecTaskInvocationParametersRunCommandParametersCloudwatchConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.DocumentHash != nil {
		in, out := &in.DocumentHash, &out.DocumentHash
		*out = new(string)
		**out = **in
	}
	if in.DocumentHashType != nil {
		in, out := &in.DocumentHashType, &out.DocumentHashType
		*out = new(string)
		**out = **in
	}
	if in.DocumentVersion != nil {
		in, out := &in.DocumentVersion, &out.DocumentVersion
		*out = new(string)
		**out = **in
	}
	if in.NotificationConfig != nil {
		in, out := &in.NotificationConfig, &out.NotificationConfig
		*out = new(MaintenanceWindowTaskSpecTaskInvocationParametersRunCommandParametersNotificationConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.OutputS3Bucket != nil {
		in, out := &in.OutputS3Bucket, &out.OutputS3Bucket
		*out = new(string)
		**out = **in
	}
	if in.OutputS3KeyPrefix != nil {
		in, out := &in.OutputS3KeyPrefix, &out.OutputS3KeyPrefix
		*out = new(string)
		**out = **in
	}
	if in.Parameter != nil {
		in, out := &in.Parameter, &out.Parameter
		*out = make([]MaintenanceWindowTaskSpecTaskInvocationParametersRunCommandParametersParameter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceRoleArn != nil {
		in, out := &in.ServiceRoleArn, &out.ServiceRoleArn
		*out = new(string)
		**out = **in
	}
	if in.TimeoutSeconds != nil {
		in, out := &in.TimeoutSeconds, &out.TimeoutSeconds
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowTaskSpecTaskInvocationParametersRunCommandParameters.
func (in *MaintenanceWindowTaskSpecTaskInvocationParametersRunCommandParameters) DeepCopy() *MaintenanceWindowTaskSpecTaskInvocationParametersRunCommandParameters {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowTaskSpecTaskInvocationParametersRunCommandParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowTaskSpecTaskInvocationParametersRunCommandParametersCloudwatchConfig) DeepCopyInto(out *MaintenanceWindowTaskSpecTaskInvocationParametersRunCommandParametersCloudwatchConfig) {
	*out = *in
	if in.CloudwatchLogGroupName != nil {
		in, out := &in.CloudwatchLogGroupName, &out.CloudwatchLogGroupName
		*out = new(string)
		**out = **in
	}
	if in.CloudwatchOutputEnabled != nil {
		in, out := &in.CloudwatchOutputEnabled, &out.CloudwatchOutputEnabled
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowTaskSpecTaskInvocationParametersRunCommandParametersCloudwatchConfig.
func (in *MaintenanceWindowTaskSpecTaskInvocationParametersRunCommandParametersCloudwatchConfig) DeepCopy() *MaintenanceWindowTaskSpecTaskInvocationParametersRunCommandParametersCloudwatchConfig {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowTaskSpecTaskInvocationParametersRunCommandParametersCloudwatchConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowTaskSpecTaskInvocationParametersRunCommandParametersNotificationConfig) DeepCopyInto(out *MaintenanceWindowTaskSpecTaskInvocationParametersRunCommandParametersNotificationConfig) {
	*out = *in
	if in.NotificationArn != nil {
		in, out := &in.NotificationArn, &out.NotificationArn
		*out = new(string)
		**out = **in
	}
	if in.NotificationEvents != nil {
		in, out := &in.NotificationEvents, &out.NotificationEvents
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NotificationType != nil {
		in, out := &in.NotificationType, &out.NotificationType
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowTaskSpecTaskInvocationParametersRunCommandParametersNotificationConfig.
func (in *MaintenanceWindowTaskSpecTaskInvocationParametersRunCommandParametersNotificationConfig) DeepCopy() *MaintenanceWindowTaskSpecTaskInvocationParametersRunCommandParametersNotificationConfig {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowTaskSpecTaskInvocationParametersRunCommandParametersNotificationConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowTaskSpecTaskInvocationParametersRunCommandParametersParameter) DeepCopyInto(out *MaintenanceWindowTaskSpecTaskInvocationParametersRunCommandParametersParameter) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowTaskSpecTaskInvocationParametersRunCommandParametersParameter.
func (in *MaintenanceWindowTaskSpecTaskInvocationParametersRunCommandParametersParameter) DeepCopy() *MaintenanceWindowTaskSpecTaskInvocationParametersRunCommandParametersParameter {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowTaskSpecTaskInvocationParametersRunCommandParametersParameter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowTaskSpecTaskInvocationParametersStepFunctionsParameters) DeepCopyInto(out *MaintenanceWindowTaskSpecTaskInvocationParametersStepFunctionsParameters) {
	*out = *in
	if in.Input != nil {
		in, out := &in.Input, &out.Input
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowTaskSpecTaskInvocationParametersStepFunctionsParameters.
func (in *MaintenanceWindowTaskSpecTaskInvocationParametersStepFunctionsParameters) DeepCopy() *MaintenanceWindowTaskSpecTaskInvocationParametersStepFunctionsParameters {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowTaskSpecTaskInvocationParametersStepFunctionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaintenanceWindowTaskStatus) DeepCopyInto(out *MaintenanceWindowTaskStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaintenanceWindowTaskStatus.
func (in *MaintenanceWindowTaskStatus) DeepCopy() *MaintenanceWindowTaskStatus {
	if in == nil {
		return nil
	}
	out := new(MaintenanceWindowTaskStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Parameter) DeepCopyInto(out *Parameter) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Parameter.
func (in *Parameter) DeepCopy() *Parameter {
	if in == nil {
		return nil
	}
	out := new(Parameter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Parameter) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParameterList) DeepCopyInto(out *ParameterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Parameter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParameterList.
func (in *ParameterList) DeepCopy() *ParameterList {
	if in == nil {
		return nil
	}
	out := new(ParameterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ParameterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParameterSpec) DeepCopyInto(out *ParameterSpec) {
	*out = *in
	in.ParameterSpec2.DeepCopyInto(&out.ParameterSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParameterSpec.
func (in *ParameterSpec) DeepCopy() *ParameterSpec {
	if in == nil {
		return nil
	}
	out := new(ParameterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParameterSpec2) DeepCopyInto(out *ParameterSpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(corev1.LocalObjectReference)
		**out = **in
	}
	if in.AllowedPattern != nil {
		in, out := &in.AllowedPattern, &out.AllowedPattern
		*out = new(string)
		**out = **in
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.KeyID != nil {
		in, out := &in.KeyID, &out.KeyID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Overwrite != nil {
		in, out := &in.Overwrite, &out.Overwrite
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParameterSpec2.
func (in *ParameterSpec2) DeepCopy() *ParameterSpec2 {
	if in == nil {
		return nil
	}
	out := new(ParameterSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParameterStatus) DeepCopyInto(out *ParameterStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParameterStatus.
func (in *ParameterStatus) DeepCopy() *ParameterStatus {
	if in == nil {
		return nil
	}
	out := new(ParameterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchBaseline) DeepCopyInto(out *PatchBaseline) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchBaseline.
func (in *PatchBaseline) DeepCopy() *PatchBaseline {
	if in == nil {
		return nil
	}
	out := new(PatchBaseline)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PatchBaseline) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchBaselineList) DeepCopyInto(out *PatchBaselineList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PatchBaseline, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchBaselineList.
func (in *PatchBaselineList) DeepCopy() *PatchBaselineList {
	if in == nil {
		return nil
	}
	out := new(PatchBaselineList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PatchBaselineList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchBaselineSpec) DeepCopyInto(out *PatchBaselineSpec) {
	*out = *in
	in.PatchBaselineSpec2.DeepCopyInto(&out.PatchBaselineSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchBaselineSpec.
func (in *PatchBaselineSpec) DeepCopy() *PatchBaselineSpec {
	if in == nil {
		return nil
	}
	out := new(PatchBaselineSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchBaselineSpec2) DeepCopyInto(out *PatchBaselineSpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.ApprovalRule != nil {
		in, out := &in.ApprovalRule, &out.ApprovalRule
		*out = make([]PatchBaselineSpecApprovalRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ApprovedPatches != nil {
		in, out := &in.ApprovedPatches, &out.ApprovedPatches
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ApprovedPatchesComplianceLevel != nil {
		in, out := &in.ApprovedPatchesComplianceLevel, &out.ApprovedPatchesComplianceLevel
		*out = new(string)
		**out = **in
	}
	if in.ApprovedPatchesEnableNonSecurity != nil {
		in, out := &in.ApprovedPatchesEnableNonSecurity, &out.ApprovedPatchesEnableNonSecurity
		*out = new(bool)
		**out = **in
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.GlobalFilter != nil {
		in, out := &in.GlobalFilter, &out.GlobalFilter
		*out = make([]PatchBaselineSpecGlobalFilter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = new(string)
		**out = **in
	}
	if in.RejectedPatches != nil {
		in, out := &in.RejectedPatches, &out.RejectedPatches
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.RejectedPatchesAction != nil {
		in, out := &in.RejectedPatchesAction, &out.RejectedPatchesAction
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = make([]PatchBaselineSpecSource, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchBaselineSpec2.
func (in *PatchBaselineSpec2) DeepCopy() *PatchBaselineSpec2 {
	if in == nil {
		return nil
	}
	out := new(PatchBaselineSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchBaselineSpecApprovalRule) DeepCopyInto(out *PatchBaselineSpecApprovalRule) {
	*out = *in
	if in.ApproveAfterDays != nil {
		in, out := &in.ApproveAfterDays, &out.ApproveAfterDays
		*out = new(int64)
		**out = **in
	}
	if in.ApproveUntilDate != nil {
		in, out := &in.ApproveUntilDate, &out.ApproveUntilDate
		*out = new(string)
		**out = **in
	}
	if in.ComplianceLevel != nil {
		in, out := &in.ComplianceLevel, &out.ComplianceLevel
		*out = new(string)
		**out = **in
	}
	if in.EnableNonSecurity != nil {
		in, out := &in.EnableNonSecurity, &out.EnableNonSecurity
		*out = new(bool)
		**out = **in
	}
	if in.PatchFilter != nil {
		in, out := &in.PatchFilter, &out.PatchFilter
		*out = make([]PatchBaselineSpecApprovalRulePatchFilter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchBaselineSpecApprovalRule.
func (in *PatchBaselineSpecApprovalRule) DeepCopy() *PatchBaselineSpecApprovalRule {
	if in == nil {
		return nil
	}
	out := new(PatchBaselineSpecApprovalRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchBaselineSpecApprovalRulePatchFilter) DeepCopyInto(out *PatchBaselineSpecApprovalRulePatchFilter) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchBaselineSpecApprovalRulePatchFilter.
func (in *PatchBaselineSpecApprovalRulePatchFilter) DeepCopy() *PatchBaselineSpecApprovalRulePatchFilter {
	if in == nil {
		return nil
	}
	out := new(PatchBaselineSpecApprovalRulePatchFilter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchBaselineSpecGlobalFilter) DeepCopyInto(out *PatchBaselineSpecGlobalFilter) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchBaselineSpecGlobalFilter.
func (in *PatchBaselineSpecGlobalFilter) DeepCopy() *PatchBaselineSpecGlobalFilter {
	if in == nil {
		return nil
	}
	out := new(PatchBaselineSpecGlobalFilter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchBaselineSpecSource) DeepCopyInto(out *PatchBaselineSpecSource) {
	*out = *in
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Products != nil {
		in, out := &in.Products, &out.Products
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchBaselineSpecSource.
func (in *PatchBaselineSpecSource) DeepCopy() *PatchBaselineSpecSource {
	if in == nil {
		return nil
	}
	out := new(PatchBaselineSpecSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchBaselineStatus) DeepCopyInto(out *PatchBaselineStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchBaselineStatus.
func (in *PatchBaselineStatus) DeepCopy() *PatchBaselineStatus {
	if in == nil {
		return nil
	}
	out := new(PatchBaselineStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchGroup) DeepCopyInto(out *PatchGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchGroup.
func (in *PatchGroup) DeepCopy() *PatchGroup {
	if in == nil {
		return nil
	}
	out := new(PatchGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PatchGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchGroupList) DeepCopyInto(out *PatchGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PatchGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchGroupList.
func (in *PatchGroupList) DeepCopy() *PatchGroupList {
	if in == nil {
		return nil
	}
	out := new(PatchGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PatchGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchGroupSpec) DeepCopyInto(out *PatchGroupSpec) {
	*out = *in
	in.PatchGroupSpec2.DeepCopyInto(&out.PatchGroupSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchGroupSpec.
func (in *PatchGroupSpec) DeepCopy() *PatchGroupSpec {
	if in == nil {
		return nil
	}
	out := new(PatchGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchGroupSpec2) DeepCopyInto(out *PatchGroupSpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.BaselineID != nil {
		in, out := &in.BaselineID, &out.BaselineID
		*out = new(string)
		**out = **in
	}
	if in.PatchGroup != nil {
		in, out := &in.PatchGroup, &out.PatchGroup
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchGroupSpec2.
func (in *PatchGroupSpec2) DeepCopy() *PatchGroupSpec2 {
	if in == nil {
		return nil
	}
	out := new(PatchGroupSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchGroupStatus) DeepCopyInto(out *PatchGroupStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchGroupStatus.
func (in *PatchGroupStatus) DeepCopy() *PatchGroupStatus {
	if in == nil {
		return nil
	}
	out := new(PatchGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceDataSync) DeepCopyInto(out *ResourceDataSync) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceDataSync.
func (in *ResourceDataSync) DeepCopy() *ResourceDataSync {
	if in == nil {
		return nil
	}
	out := new(ResourceDataSync)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ResourceDataSync) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceDataSyncList) DeepCopyInto(out *ResourceDataSyncList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ResourceDataSync, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceDataSyncList.
func (in *ResourceDataSyncList) DeepCopy() *ResourceDataSyncList {
	if in == nil {
		return nil
	}
	out := new(ResourceDataSyncList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ResourceDataSyncList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceDataSyncSpec) DeepCopyInto(out *ResourceDataSyncSpec) {
	*out = *in
	in.ResourceDataSyncSpec2.DeepCopyInto(&out.ResourceDataSyncSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceDataSyncSpec.
func (in *ResourceDataSyncSpec) DeepCopy() *ResourceDataSyncSpec {
	if in == nil {
		return nil
	}
	out := new(ResourceDataSyncSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceDataSyncSpec2) DeepCopyInto(out *ResourceDataSyncSpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.S3Destination != nil {
		in, out := &in.S3Destination, &out.S3Destination
		*out = new(ResourceDataSyncSpecS3Destination)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceDataSyncSpec2.
func (in *ResourceDataSyncSpec2) DeepCopy() *ResourceDataSyncSpec2 {
	if in == nil {
		return nil
	}
	out := new(ResourceDataSyncSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceDataSyncSpecS3Destination) DeepCopyInto(out *ResourceDataSyncSpecS3Destination) {
	*out = *in
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.KmsKeyArn != nil {
		in, out := &in.KmsKeyArn, &out.KmsKeyArn
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SyncFormat != nil {
		in, out := &in.SyncFormat, &out.SyncFormat
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceDataSyncSpecS3Destination.
func (in *ResourceDataSyncSpecS3Destination) DeepCopy() *ResourceDataSyncSpecS3Destination {
	if in == nil {
		return nil
	}
	out := new(ResourceDataSyncSpecS3Destination)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceDataSyncStatus) DeepCopyInto(out *ResourceDataSyncStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceDataSyncStatus.
func (in *ResourceDataSyncStatus) DeepCopy() *ResourceDataSyncStatus {
	if in == nil {
		return nil
	}
	out := new(ResourceDataSyncStatus)
	in.DeepCopyInto(out)
	return out
}
