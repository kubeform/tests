/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Document struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              DocumentSpec   `json:"spec,omitempty"`
	Status            DocumentStatus `json:"status,omitempty"`
}

type DocumentSpec struct {
	DocumentSpec2 `json:",inline"`
	// +optional
	KubeformOutput DocumentSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type DocumentSpecAttachmentsSource struct {
	Key *string `json:"key" tf:"key"`
	// +optional
	Name *string `json:"name,omitempty" tf:"name"`
	// +kubebuilder:validation:MinItems=1
	Values []string `json:"values" tf:"values"`
}

type DocumentSpecParameter struct {
	// +optional
	DefaultValue *string `json:"defaultValue,omitempty" tf:"default_value"`
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// +optional
	Name *string `json:"name,omitempty" tf:"name"`
	// +optional
	Type *string `json:"type,omitempty" tf:"type"`
}

type DocumentSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	Arn *string `json:"arn,omitempty" tf:"arn"`
	// +optional
	// +kubebuilder:validation:MaxItems=20
	AttachmentsSource []DocumentSpecAttachmentsSource `json:"attachmentsSource,omitempty" tf:"attachments_source"`
	Content           *string                         `json:"content" tf:"content"`
	// +optional
	CreatedDate *string `json:"createdDate,omitempty" tf:"created_date"`
	// +optional
	DefaultVersion *string `json:"defaultVersion,omitempty" tf:"default_version"`
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// +optional
	DocumentFormat *string `json:"documentFormat,omitempty" tf:"document_format"`
	DocumentType   *string `json:"documentType" tf:"document_type"`
	// +optional
	DocumentVersion *string `json:"documentVersion,omitempty" tf:"document_version"`
	// +optional
	Hash *string `json:"hash,omitempty" tf:"hash"`
	// +optional
	HashType *string `json:"hashType,omitempty" tf:"hash_type"`
	// +optional
	LatestVersion *string `json:"latestVersion,omitempty" tf:"latest_version"`
	Name          *string `json:"name" tf:"name"`
	// +optional
	Owner *string `json:"owner,omitempty" tf:"owner"`
	// +optional
	Parameter []DocumentSpecParameter `json:"parameter,omitempty" tf:"parameter"`
	// +optional
	Permissions *map[string]string `json:"permissions,omitempty" tf:"permissions"`
	// +optional
	PlatformTypes []string `json:"platformTypes,omitempty" tf:"platform_types"`
	// +optional
	SchemaVersion *string `json:"schemaVersion,omitempty" tf:"schema_version"`
	// +optional
	Status *string `json:"status,omitempty" tf:"status"`
	// +optional
	Tags *map[string]string `json:"tags,omitempty" tf:"tags"`
	// +optional
	TargetType *string `json:"targetType,omitempty" tf:"target_type"`
	// +optional
	VersionName *string `json:"versionName,omitempty" tf:"version_name"`
}

type DocumentStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// DocumentList is a list of Documents
type DocumentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Document CRD objects
	Items []Document `json:"items,omitempty"`
}
