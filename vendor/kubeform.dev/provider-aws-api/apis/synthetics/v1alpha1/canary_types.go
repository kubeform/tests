/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Canary struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              CanarySpec   `json:"spec,omitempty"`
	Status            CanaryStatus `json:"status,omitempty"`
}

type CanarySpec struct {
	CanarySpec2 `json:",inline"`
	// +optional
	KubeformOutput CanarySpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type CanarySpecRunConfig struct {
	// +optional
	ActiveTracing *bool `json:"activeTracing,omitempty" tf:"active_tracing"`
	// +optional
	MemoryInMb *int64 `json:"memoryInMb,omitempty" tf:"memory_in_mb"`
	// +optional
	TimeoutInSeconds *int64 `json:"timeoutInSeconds,omitempty" tf:"timeout_in_seconds"`
}

type CanarySpecSchedule struct {
	// +optional
	DurationInSeconds *int64  `json:"durationInSeconds,omitempty" tf:"duration_in_seconds"`
	Expression        *string `json:"expression" tf:"expression"`
}

type CanarySpecTimeline struct {
	// +optional
	Created *string `json:"created,omitempty" tf:"created"`
	// +optional
	LastModified *string `json:"lastModified,omitempty" tf:"last_modified"`
	// +optional
	LastStarted *string `json:"lastStarted,omitempty" tf:"last_started"`
	// +optional
	LastStopped *string `json:"lastStopped,omitempty" tf:"last_stopped"`
}

type CanarySpecVpcConfig struct {
	// +optional
	SecurityGroupIDS []string `json:"securityGroupIDS,omitempty" tf:"security_group_ids"`
	// +optional
	SubnetIDS []string `json:"subnetIDS,omitempty" tf:"subnet_ids"`
	// +optional
	VpcID *string `json:"vpcID,omitempty" tf:"vpc_id"`
}

type CanarySpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	Arn                *string `json:"arn,omitempty" tf:"arn"`
	ArtifactS3Location *string `json:"artifactS3Location" tf:"artifact_s3_location"`
	// +optional
	EngineArn        *string `json:"engineArn,omitempty" tf:"engine_arn"`
	ExecutionRoleArn *string `json:"executionRoleArn" tf:"execution_role_arn"`
	// +optional
	FailureRetentionPeriod *int64  `json:"failureRetentionPeriod,omitempty" tf:"failure_retention_period"`
	Handler                *string `json:"handler" tf:"handler"`
	Name                   *string `json:"name" tf:"name"`
	// +optional
	RunConfig      *CanarySpecRunConfig `json:"runConfig,omitempty" tf:"run_config"`
	RuntimeVersion *string              `json:"runtimeVersion" tf:"runtime_version"`
	// +optional
	S3Bucket *string `json:"s3Bucket,omitempty" tf:"s3_bucket"`
	// +optional
	S3Key *string `json:"s3Key,omitempty" tf:"s3_key"`
	// +optional
	S3Version *string             `json:"s3Version,omitempty" tf:"s3_version"`
	Schedule  *CanarySpecSchedule `json:"schedule" tf:"schedule"`
	// +optional
	SourceLocationArn *string `json:"sourceLocationArn,omitempty" tf:"source_location_arn"`
	// +optional
	StartCanary *bool `json:"startCanary,omitempty" tf:"start_canary"`
	// +optional
	Status *string `json:"status,omitempty" tf:"status"`
	// +optional
	SuccessRetentionPeriod *int64 `json:"successRetentionPeriod,omitempty" tf:"success_retention_period"`
	// +optional
	Tags *map[string]string `json:"tags,omitempty" tf:"tags"`
	// +optional
	Timeline []CanarySpecTimeline `json:"timeline,omitempty" tf:"timeline"`
	// +optional
	VpcConfig *CanarySpecVpcConfig `json:"vpcConfig,omitempty" tf:"vpc_config"`
	// +optional
	ZipFile *string `json:"zipFile,omitempty" tf:"zip_file"`
}

type CanaryStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// CanaryList is a list of Canarys
type CanaryList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Canary CRD objects
	Items []Canary `json:"items,omitempty"`
}
