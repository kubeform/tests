/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type InstanceFleet struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              InstanceFleetSpec   `json:"spec,omitempty"`
	Status            InstanceFleetStatus `json:"status,omitempty"`
}

type InstanceFleetSpec struct {
	InstanceFleetSpec2 `json:",inline"`
	// +optional
	KubeformOutput InstanceFleetSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type InstanceFleetSpecInstanceTypeConfigsConfigurations struct {
	// +optional
	Classification *string `json:"classification,omitempty" tf:"classification"`
	// +optional
	Properties map[string]string `json:"properties,omitempty" tf:"properties"`
}

type InstanceFleetSpecInstanceTypeConfigsEbsConfig struct {
	// +optional
	Iops *int64  `json:"iops,omitempty" tf:"iops"`
	Size *int64  `json:"size" tf:"size"`
	Type *string `json:"type" tf:"type"`
	// +optional
	VolumesPerInstance *int64 `json:"volumesPerInstance,omitempty" tf:"volumes_per_instance"`
}

type InstanceFleetSpecInstanceTypeConfigs struct {
	// +optional
	BidPrice *string `json:"bidPrice,omitempty" tf:"bid_price"`
	// +optional
	BidPriceAsPercentageOfOnDemandPrice *float64 `json:"bidPriceAsPercentageOfOnDemandPrice,omitempty" tf:"bid_price_as_percentage_of_on_demand_price"`
	// +optional
	Configurations []InstanceFleetSpecInstanceTypeConfigsConfigurations `json:"configurations,omitempty" tf:"configurations"`
	// +optional
	EbsConfig    []InstanceFleetSpecInstanceTypeConfigsEbsConfig `json:"ebsConfig,omitempty" tf:"ebs_config"`
	InstanceType *string                                         `json:"instanceType" tf:"instance_type"`
	// +optional
	WeightedCapacity *int64 `json:"weightedCapacity,omitempty" tf:"weighted_capacity"`
}

type InstanceFleetSpecLaunchSpecificationsOnDemandSpecification struct {
	AllocationStrategy *string `json:"allocationStrategy" tf:"allocation_strategy"`
}

type InstanceFleetSpecLaunchSpecificationsSpotSpecification struct {
	AllocationStrategy *string `json:"allocationStrategy" tf:"allocation_strategy"`
	// +optional
	BlockDurationMinutes   *int64  `json:"blockDurationMinutes,omitempty" tf:"block_duration_minutes"`
	TimeoutAction          *string `json:"timeoutAction" tf:"timeout_action"`
	TimeoutDurationMinutes *int64  `json:"timeoutDurationMinutes" tf:"timeout_duration_minutes"`
}

type InstanceFleetSpecLaunchSpecifications struct {
	// +optional
	// +kubebuilder:validation:MinItems=1
	OnDemandSpecification []InstanceFleetSpecLaunchSpecificationsOnDemandSpecification `json:"onDemandSpecification,omitempty" tf:"on_demand_specification"`
	// +optional
	// +kubebuilder:validation:MinItems=1
	SpotSpecification []InstanceFleetSpecLaunchSpecificationsSpotSpecification `json:"spotSpecification,omitempty" tf:"spot_specification"`
}

type InstanceFleetSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	ClusterID *string `json:"clusterID" tf:"cluster_id"`
	// +optional
	InstanceTypeConfigs []InstanceFleetSpecInstanceTypeConfigs `json:"instanceTypeConfigs,omitempty" tf:"instance_type_configs"`
	// +optional
	LaunchSpecifications *InstanceFleetSpecLaunchSpecifications `json:"launchSpecifications,omitempty" tf:"launch_specifications"`
	// +optional
	Name *string `json:"name,omitempty" tf:"name"`
	// +optional
	ProvisionedOnDemandCapacity *int64 `json:"provisionedOnDemandCapacity,omitempty" tf:"provisioned_on_demand_capacity"`
	// +optional
	ProvisionedSpotCapacity *int64 `json:"provisionedSpotCapacity,omitempty" tf:"provisioned_spot_capacity"`
	// +optional
	TargetOnDemandCapacity *int64 `json:"targetOnDemandCapacity,omitempty" tf:"target_on_demand_capacity"`
	// +optional
	TargetSpotCapacity *int64 `json:"targetSpotCapacity,omitempty" tf:"target_spot_capacity"`
}

type InstanceFleetStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// InstanceFleetList is a list of InstanceFleets
type InstanceFleetList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of InstanceFleet CRD objects
	Items []InstanceFleet `json:"items,omitempty"`
}
