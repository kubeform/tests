/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type WebACL struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              WebACLSpec   `json:"spec,omitempty"`
	Status            WebACLStatus `json:"status,omitempty"`
}

type WebACLSpec struct {
	WebACLSpec2 `json:",inline"`
	// +optional
	KubeformOutput WebACLSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type WebACLSpecDefaultActionAllow struct{}

type WebACLSpecDefaultActionBlock struct{}

type WebACLSpecDefaultAction struct {
	// +optional
	Allow *WebACLSpecDefaultActionAllow `json:"allow,omitempty" tf:"allow"`
	// +optional
	Block *WebACLSpecDefaultActionBlock `json:"block,omitempty" tf:"block"`
}

type WebACLSpecRuleActionAllow struct{}

type WebACLSpecRuleActionBlock struct{}

type WebACLSpecRuleActionCount struct{}

type WebACLSpecRuleAction struct {
	// +optional
	Allow *WebACLSpecRuleActionAllow `json:"allow,omitempty" tf:"allow"`
	// +optional
	Block *WebACLSpecRuleActionBlock `json:"block,omitempty" tf:"block"`
	// +optional
	Count *WebACLSpecRuleActionCount `json:"count,omitempty" tf:"count"`
}

type WebACLSpecRuleOverrideActionCount struct{}

type WebACLSpecRuleOverrideActionNone struct{}

type WebACLSpecRuleOverrideAction struct {
	// +optional
	Count *WebACLSpecRuleOverrideActionCount `json:"count,omitempty" tf:"count"`
	// +optional
	None *WebACLSpecRuleOverrideActionNone `json:"none,omitempty" tf:"none"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                                      `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                                      `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                                            `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatement struct {
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatement struct {
	Statement []WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                 `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                 `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                                      `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                                      `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                                            `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatement struct {
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatement struct {
	Statement []WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                                     `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                                     `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                                           `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatement struct {
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatement struct {
	Statement []WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                       `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatementStatement struct {
	// +optional
	AndStatement *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementAndStatement `json:"andStatement,omitempty" tf:"and_statement"`
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	NotStatement *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementNotStatement `json:"notStatement,omitempty" tf:"not_statement"`
	// +optional
	OrStatement *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementOrStatement `json:"orStatement,omitempty" tf:"or_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementAndStatementStatementAndStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementAndStatementStatementAndStatement struct {
	Statement []WebACLSpecRuleStatementAndStatementStatementAndStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementAndStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                            `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                            `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementAndStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementAndStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementAndStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementAndStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementAndStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementAndStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                                      `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                                      `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                                            `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatement struct {
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatement struct {
	Statement []WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                 `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                 `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                                      `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                                      `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                                            `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatement struct {
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatement struct {
	Statement []WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                                     `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                                     `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                                           `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatement struct {
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatement struct {
	Statement []WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                       `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatementStatement struct {
	// +optional
	AndStatement *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementAndStatement `json:"andStatement,omitempty" tf:"and_statement"`
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	NotStatement *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementNotStatement `json:"notStatement,omitempty" tf:"not_statement"`
	// +optional
	OrStatement *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementOrStatement `json:"orStatement,omitempty" tf:"or_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementAndStatementStatementNotStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementAndStatementStatementNotStatement struct {
	Statement []WebACLSpecRuleStatementAndStatementStatementNotStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                                     `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                                     `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                                           `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatement struct {
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatement struct {
	Statement []WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                                     `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                                     `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                                           `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatement struct {
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatement struct {
	Statement []WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                                    `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                                    `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                                          `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatement struct {
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatement struct {
	Statement []WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                      `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatementStatement struct {
	// +optional
	AndStatement *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementAndStatement `json:"andStatement,omitempty" tf:"and_statement"`
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	NotStatement *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementNotStatement `json:"notStatement,omitempty" tf:"not_statement"`
	// +optional
	OrStatement *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementOrStatement `json:"orStatement,omitempty" tf:"or_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementAndStatementStatementOrStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementAndStatementStatementOrStatement struct {
	Statement []WebACLSpecRuleStatementAndStatementStatementOrStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                  `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementAndStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementAndStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementAndStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementAndStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementAndStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementAndStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementAndStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementAndStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementAndStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementAndStatementStatement struct {
	// +optional
	AndStatement *WebACLSpecRuleStatementAndStatementStatementAndStatement `json:"andStatement,omitempty" tf:"and_statement"`
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementAndStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementAndStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementAndStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	NotStatement *WebACLSpecRuleStatementAndStatementStatementNotStatement `json:"notStatement,omitempty" tf:"not_statement"`
	// +optional
	OrStatement *WebACLSpecRuleStatementAndStatementStatementOrStatement `json:"orStatement,omitempty" tf:"or_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementAndStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementAndStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementAndStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementAndStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementAndStatement struct {
	Statement []WebACLSpecRuleStatementAndStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                       `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                       `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementManagedRuleGroupStatementExcludedRule struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementManagedRuleGroupStatement struct {
	// +optional
	ExcludedRule []WebACLSpecRuleStatementManagedRuleGroupStatementExcludedRule `json:"excludedRule,omitempty" tf:"excluded_rule"`
	Name         *string                                                        `json:"name" tf:"name"`
	VendorName   *string                                                        `json:"vendorName" tf:"vendor_name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                                      `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                                      `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                                            `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatement struct {
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatement struct {
	Statement []WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                 `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                 `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                                      `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                                      `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                                            `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatement struct {
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatement struct {
	Statement []WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                                     `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                                     `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                                           `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatement struct {
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatement struct {
	Statement []WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                       `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatementStatement struct {
	// +optional
	AndStatement *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementAndStatement `json:"andStatement,omitempty" tf:"and_statement"`
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	NotStatement *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementNotStatement `json:"notStatement,omitempty" tf:"not_statement"`
	// +optional
	OrStatement *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementOrStatement `json:"orStatement,omitempty" tf:"or_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementNotStatementStatementAndStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementNotStatementStatementAndStatement struct {
	Statement []WebACLSpecRuleStatementNotStatementStatementAndStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementNotStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                            `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                            `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementNotStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementNotStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementNotStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementNotStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementNotStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementNotStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                                      `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                                      `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                                            `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatement struct {
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatement struct {
	Statement []WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                 `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                 `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                                      `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                                      `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                                            `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatement struct {
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatement struct {
	Statement []WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                                     `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                                     `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                                           `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatement struct {
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatement struct {
	Statement []WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                       `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatementStatement struct {
	// +optional
	AndStatement *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementAndStatement `json:"andStatement,omitempty" tf:"and_statement"`
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	NotStatement *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementNotStatement `json:"notStatement,omitempty" tf:"not_statement"`
	// +optional
	OrStatement *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementOrStatement `json:"orStatement,omitempty" tf:"or_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementNotStatementStatementNotStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementNotStatementStatementNotStatement struct {
	Statement []WebACLSpecRuleStatementNotStatementStatementNotStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                                     `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                                     `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                                           `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatement struct {
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatement struct {
	Statement []WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                                     `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                                     `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                                           `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatement struct {
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatement struct {
	Statement []WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                                    `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                                    `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                                          `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatement struct {
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatement struct {
	Statement []WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                      `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatementStatement struct {
	// +optional
	AndStatement *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementAndStatement `json:"andStatement,omitempty" tf:"and_statement"`
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	NotStatement *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementNotStatement `json:"notStatement,omitempty" tf:"not_statement"`
	// +optional
	OrStatement *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementOrStatement `json:"orStatement,omitempty" tf:"or_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementNotStatementStatementOrStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementNotStatementStatementOrStatement struct {
	Statement []WebACLSpecRuleStatementNotStatementStatementOrStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                  `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementNotStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementNotStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementNotStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementNotStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementNotStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementNotStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementNotStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementNotStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementNotStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementNotStatementStatement struct {
	// +optional
	AndStatement *WebACLSpecRuleStatementNotStatementStatementAndStatement `json:"andStatement,omitempty" tf:"and_statement"`
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementNotStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementNotStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementNotStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	NotStatement *WebACLSpecRuleStatementNotStatementStatementNotStatement `json:"notStatement,omitempty" tf:"not_statement"`
	// +optional
	OrStatement *WebACLSpecRuleStatementNotStatementStatementOrStatement `json:"orStatement,omitempty" tf:"or_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementNotStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementNotStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementNotStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementNotStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementNotStatement struct {
	Statement []WebACLSpecRuleStatementNotStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                                     `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                                     `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                                           `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatement struct {
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatement struct {
	Statement []WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                                     `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                                     `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                                           `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatement struct {
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatement struct {
	Statement []WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                                    `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                                    `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                                          `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatement struct {
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatement struct {
	Statement []WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                      `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatementStatement struct {
	// +optional
	AndStatement *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementAndStatement `json:"andStatement,omitempty" tf:"and_statement"`
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	NotStatement *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementNotStatement `json:"notStatement,omitempty" tf:"not_statement"`
	// +optional
	OrStatement *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementOrStatement `json:"orStatement,omitempty" tf:"or_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementOrStatementStatementAndStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementOrStatementStatementAndStatement struct {
	Statement []WebACLSpecRuleStatementOrStatementStatementAndStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementOrStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                           `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                           `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementOrStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementOrStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementOrStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementOrStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementOrStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementOrStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                                     `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                                     `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                                           `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatement struct {
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatement struct {
	Statement []WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                                     `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                                     `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                                           `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatement struct {
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatement struct {
	Statement []WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                                    `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                                    `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                                          `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatement struct {
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatement struct {
	Statement []WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                      `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatementStatement struct {
	// +optional
	AndStatement *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementAndStatement `json:"andStatement,omitempty" tf:"and_statement"`
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	NotStatement *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementNotStatement `json:"notStatement,omitempty" tf:"not_statement"`
	// +optional
	OrStatement *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementOrStatement `json:"orStatement,omitempty" tf:"or_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementOrStatementStatementNotStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementOrStatementStatementNotStatement struct {
	Statement []WebACLSpecRuleStatementOrStatementStatementNotStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                                    `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                                    `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                                          `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatement struct {
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatement struct {
	Statement []WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                               `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                               `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                                    `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                                    `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                                          `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatement struct {
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatement struct {
	Statement []WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                                   `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                                   `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                                         `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatement struct {
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatement struct {
	Statement []WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                     `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatementStatement struct {
	// +optional
	AndStatement *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementAndStatement `json:"andStatement,omitempty" tf:"and_statement"`
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	NotStatement *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementNotStatement `json:"notStatement,omitempty" tf:"not_statement"`
	// +optional
	OrStatement *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementOrStatement `json:"orStatement,omitempty" tf:"or_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementOrStatementStatementOrStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementOrStatementStatementOrStatement struct {
	Statement []WebACLSpecRuleStatementOrStatementStatementOrStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                 `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementOrStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementOrStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementOrStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementOrStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementOrStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementOrStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementOrStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementOrStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementOrStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementOrStatementStatement struct {
	// +optional
	AndStatement *WebACLSpecRuleStatementOrStatementStatementAndStatement `json:"andStatement,omitempty" tf:"and_statement"`
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementOrStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementOrStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementOrStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	NotStatement *WebACLSpecRuleStatementOrStatementStatementNotStatement `json:"notStatement,omitempty" tf:"not_statement"`
	// +optional
	OrStatement *WebACLSpecRuleStatementOrStatementStatementOrStatement `json:"orStatement,omitempty" tf:"or_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementOrStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementOrStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementOrStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementOrStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementOrStatement struct {
	Statement []WebACLSpecRuleStatementOrStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementRateBasedStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                                                     `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                                                     `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                                                           `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatement struct {
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatement struct {
	Statement []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                                `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                                `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                                                     `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                                                     `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                                                           `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatement struct {
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatement struct {
	Statement []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                                                    `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                                                    `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                                                          `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatement struct {
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatement struct {
	Statement []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                                      `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatement struct {
	// +optional
	AndStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatement `json:"andStatement,omitempty" tf:"and_statement"`
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	NotStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatement `json:"notStatement,omitempty" tf:"not_statement"`
	// +optional
	OrStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatement `json:"orStatement,omitempty" tf:"or_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatement struct {
	Statement []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                           `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                           `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                                                     `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                                                     `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                                                           `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatement struct {
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatement struct {
	Statement []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                                `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                                `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                                                     `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                                                     `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                                                           `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatement struct {
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatement struct {
	Statement []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                                                    `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                                                    `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                                                          `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatement struct {
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatement struct {
	Statement []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                                      `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatement struct {
	// +optional
	AndStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatement `json:"andStatement,omitempty" tf:"and_statement"`
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	NotStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatement `json:"notStatement,omitempty" tf:"not_statement"`
	// +optional
	OrStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatement `json:"orStatement,omitempty" tf:"or_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatement struct {
	Statement []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                                                    `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                                                    `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                                                          `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatement struct {
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatement struct {
	Statement []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                               `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                               `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                                                    `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                                                    `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                                                          `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatement struct {
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatement struct {
	Statement []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatement struct {
	// +optional
	FieldToMatch         *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	PositionalConstraint *string                                                                                                                                   `json:"positionalConstraint" tf:"positional_constraint"`
	SearchString         *string                                                                                                                                   `json:"searchString" tf:"search_string"`
	TextTransformation   []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementGeoMatchStatement struct {
	// +kubebuilder:validation:MinItems=1
	CountryCodes []string `json:"countryCodes" tf:"country_codes"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementGeoMatchStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig struct {
	FallbackBehavior *string `json:"fallbackBehavior" tf:"fallback_behavior"`
	HeaderName       *string `json:"headerName" tf:"header_name"`
	Position         *string `json:"position" tf:"position"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementIpSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	IpSetForwardedIPConfig *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementIpSetReferenceStatementIpSetForwardedIPConfig `json:"ipSetForwardedIPConfig,omitempty" tf:"ip_set_forwarded_ip_config"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                                                         `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatement struct {
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatement struct {
	Statement []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                                     `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatement struct {
	// +optional
	AndStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatement `json:"andStatement,omitempty" tf:"and_statement"`
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	NotStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatement `json:"notStatement,omitempty" tf:"not_statement"`
	// +optional
	OrStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatement `json:"orStatement,omitempty" tf:"or_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatement struct {
	Statement []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatementStatement `json:"statement" tf:"statement"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                                                                 `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRateBasedStatementScopeDownStatement struct {
	// +optional
	AndStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementAndStatement `json:"andStatement,omitempty" tf:"and_statement"`
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	NotStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementNotStatement `json:"notStatement,omitempty" tf:"not_statement"`
	// +optional
	OrStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementOrStatement `json:"orStatement,omitempty" tf:"or_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleStatementRateBasedStatement struct {
	// +optional
	AggregateKeyType *string `json:"aggregateKeyType,omitempty" tf:"aggregate_key_type"`
	// +optional
	ForwardedIPConfig *WebACLSpecRuleStatementRateBasedStatementForwardedIPConfig `json:"forwardedIPConfig,omitempty" tf:"forwarded_ip_config"`
	Limit             *int64                                                      `json:"limit" tf:"limit"`
	// +optional
	ScopeDownStatement *WebACLSpecRuleStatementRateBasedStatementScopeDownStatement `json:"scopeDownStatement,omitempty" tf:"scope_down_statement"`
}

type WebACLSpecRuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementRegexPatternSetReferenceStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementRegexPatternSetReferenceStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRegexPatternSetReferenceStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementRegexPatternSetReferenceStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementRegexPatternSetReferenceStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementRegexPatternSetReferenceStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementRegexPatternSetReferenceStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementRegexPatternSetReferenceStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementRegexPatternSetReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementRegexPatternSetReferenceStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementRegexPatternSetReferenceStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementRuleGroupReferenceStatementExcludedRule struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementRuleGroupReferenceStatement struct {
	Arn *string `json:"arn" tf:"arn"`
	// +optional
	ExcludedRule []WebACLSpecRuleStatementRuleGroupReferenceStatementExcludedRule `json:"excludedRule,omitempty" tf:"excluded_rule"`
}

type WebACLSpecRuleStatementSizeConstraintStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementSizeConstraintStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementSizeConstraintStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementSizeConstraintStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementSizeConstraintStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementSizeConstraintStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementSizeConstraintStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementSizeConstraintStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementSizeConstraintStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementSizeConstraintStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementSizeConstraintStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementSizeConstraintStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementSizeConstraintStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementSizeConstraintStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementSizeConstraintStatement struct {
	ComparisonOperator *string `json:"comparisonOperator" tf:"comparison_operator"`
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementSizeConstraintStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	Size               *int64                                                             `json:"size" tf:"size"`
	TextTransformation []WebACLSpecRuleStatementSizeConstraintStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementSqliMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementSqliMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementSqliMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementSqliMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementSqliMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementSqliMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementSqliMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementSqliMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementSqliMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementSqliMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementSqliMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementSqliMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementSqliMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementSqliMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementSqliMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementSqliMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementSqliMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatementXssMatchStatementFieldToMatchAllQueryArguments struct{}

type WebACLSpecRuleStatementXssMatchStatementFieldToMatchBody struct{}

type WebACLSpecRuleStatementXssMatchStatementFieldToMatchMethod struct{}

type WebACLSpecRuleStatementXssMatchStatementFieldToMatchQueryString struct{}

type WebACLSpecRuleStatementXssMatchStatementFieldToMatchSingleHeader struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementXssMatchStatementFieldToMatchSingleQueryArgument struct {
	Name *string `json:"name" tf:"name"`
}

type WebACLSpecRuleStatementXssMatchStatementFieldToMatchUriPath struct{}

type WebACLSpecRuleStatementXssMatchStatementFieldToMatch struct {
	// +optional
	AllQueryArguments *WebACLSpecRuleStatementXssMatchStatementFieldToMatchAllQueryArguments `json:"allQueryArguments,omitempty" tf:"all_query_arguments"`
	// +optional
	Body *WebACLSpecRuleStatementXssMatchStatementFieldToMatchBody `json:"body,omitempty" tf:"body"`
	// +optional
	Method *WebACLSpecRuleStatementXssMatchStatementFieldToMatchMethod `json:"method,omitempty" tf:"method"`
	// +optional
	QueryString *WebACLSpecRuleStatementXssMatchStatementFieldToMatchQueryString `json:"queryString,omitempty" tf:"query_string"`
	// +optional
	SingleHeader *WebACLSpecRuleStatementXssMatchStatementFieldToMatchSingleHeader `json:"singleHeader,omitempty" tf:"single_header"`
	// +optional
	SingleQueryArgument *WebACLSpecRuleStatementXssMatchStatementFieldToMatchSingleQueryArgument `json:"singleQueryArgument,omitempty" tf:"single_query_argument"`
	// +optional
	UriPath *WebACLSpecRuleStatementXssMatchStatementFieldToMatchUriPath `json:"uriPath,omitempty" tf:"uri_path"`
}

type WebACLSpecRuleStatementXssMatchStatementTextTransformation struct {
	Priority *int64  `json:"priority" tf:"priority"`
	Type     *string `json:"type" tf:"type"`
}

type WebACLSpecRuleStatementXssMatchStatement struct {
	// +optional
	FieldToMatch       *WebACLSpecRuleStatementXssMatchStatementFieldToMatch        `json:"fieldToMatch,omitempty" tf:"field_to_match"`
	TextTransformation []WebACLSpecRuleStatementXssMatchStatementTextTransformation `json:"textTransformation" tf:"text_transformation"`
}

type WebACLSpecRuleStatement struct {
	// +optional
	AndStatement *WebACLSpecRuleStatementAndStatement `json:"andStatement,omitempty" tf:"and_statement"`
	// +optional
	ByteMatchStatement *WebACLSpecRuleStatementByteMatchStatement `json:"byteMatchStatement,omitempty" tf:"byte_match_statement"`
	// +optional
	GeoMatchStatement *WebACLSpecRuleStatementGeoMatchStatement `json:"geoMatchStatement,omitempty" tf:"geo_match_statement"`
	// +optional
	IpSetReferenceStatement *WebACLSpecRuleStatementIpSetReferenceStatement `json:"ipSetReferenceStatement,omitempty" tf:"ip_set_reference_statement"`
	// +optional
	ManagedRuleGroupStatement *WebACLSpecRuleStatementManagedRuleGroupStatement `json:"managedRuleGroupStatement,omitempty" tf:"managed_rule_group_statement"`
	// +optional
	NotStatement *WebACLSpecRuleStatementNotStatement `json:"notStatement,omitempty" tf:"not_statement"`
	// +optional
	OrStatement *WebACLSpecRuleStatementOrStatement `json:"orStatement,omitempty" tf:"or_statement"`
	// +optional
	RateBasedStatement *WebACLSpecRuleStatementRateBasedStatement `json:"rateBasedStatement,omitempty" tf:"rate_based_statement"`
	// +optional
	RegexPatternSetReferenceStatement *WebACLSpecRuleStatementRegexPatternSetReferenceStatement `json:"regexPatternSetReferenceStatement,omitempty" tf:"regex_pattern_set_reference_statement"`
	// +optional
	RuleGroupReferenceStatement *WebACLSpecRuleStatementRuleGroupReferenceStatement `json:"ruleGroupReferenceStatement,omitempty" tf:"rule_group_reference_statement"`
	// +optional
	SizeConstraintStatement *WebACLSpecRuleStatementSizeConstraintStatement `json:"sizeConstraintStatement,omitempty" tf:"size_constraint_statement"`
	// +optional
	SqliMatchStatement *WebACLSpecRuleStatementSqliMatchStatement `json:"sqliMatchStatement,omitempty" tf:"sqli_match_statement"`
	// +optional
	XssMatchStatement *WebACLSpecRuleStatementXssMatchStatement `json:"xssMatchStatement,omitempty" tf:"xss_match_statement"`
}

type WebACLSpecRuleVisibilityConfig struct {
	CloudwatchMetricsEnabled *bool   `json:"cloudwatchMetricsEnabled" tf:"cloudwatch_metrics_enabled"`
	MetricName               *string `json:"metricName" tf:"metric_name"`
	SampledRequestsEnabled   *bool   `json:"sampledRequestsEnabled" tf:"sampled_requests_enabled"`
}

type WebACLSpecRule struct {
	// +optional
	Action *WebACLSpecRuleAction `json:"action,omitempty" tf:"action"`
	Name   *string               `json:"name" tf:"name"`
	// +optional
	OverrideAction   *WebACLSpecRuleOverrideAction   `json:"overrideAction,omitempty" tf:"override_action"`
	Priority         *int64                          `json:"priority" tf:"priority"`
	Statement        *WebACLSpecRuleStatement        `json:"statement" tf:"statement"`
	VisibilityConfig *WebACLSpecRuleVisibilityConfig `json:"visibilityConfig" tf:"visibility_config"`
}

type WebACLSpecVisibilityConfig struct {
	CloudwatchMetricsEnabled *bool   `json:"cloudwatchMetricsEnabled" tf:"cloudwatch_metrics_enabled"`
	MetricName               *string `json:"metricName" tf:"metric_name"`
	SampledRequestsEnabled   *bool   `json:"sampledRequestsEnabled" tf:"sampled_requests_enabled"`
}

type WebACLSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	Arn *string `json:"arn,omitempty" tf:"arn"`
	// +optional
	Capacity      *int64                   `json:"capacity,omitempty" tf:"capacity"`
	DefaultAction *WebACLSpecDefaultAction `json:"defaultAction" tf:"default_action"`
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// +optional
	LockToken *string `json:"lockToken,omitempty" tf:"lock_token"`
	Name      *string `json:"name" tf:"name"`
	// +optional
	Rule  []WebACLSpecRule `json:"rule,omitempty" tf:"rule"`
	Scope *string          `json:"scope" tf:"scope"`
	// +optional
	Tags             *map[string]string          `json:"tags,omitempty" tf:"tags"`
	VisibilityConfig *WebACLSpecVisibilityConfig `json:"visibilityConfig" tf:"visibility_config"`
}

type WebACLStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// WebACLList is a list of WebACLs
type WebACLList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of WebACL CRD objects
	Items []WebACL `json:"items,omitempty"`
}
