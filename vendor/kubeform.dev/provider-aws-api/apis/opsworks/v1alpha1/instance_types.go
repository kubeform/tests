/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Instance struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              InstanceSpec   `json:"spec,omitempty"`
	Status            InstanceStatus `json:"status,omitempty"`
}

type InstanceSpec struct {
	InstanceSpec2 `json:",inline"`
	// +optional
	KubeformOutput InstanceSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type InstanceSpecEbsBlockDevice struct {
	// +optional
	DeleteOnTermination *bool   `json:"deleteOnTermination,omitempty" tf:"delete_on_termination"`
	DeviceName          *string `json:"deviceName" tf:"device_name"`
	// +optional
	Iops *int64 `json:"iops,omitempty" tf:"iops"`
	// +optional
	SnapshotID *string `json:"snapshotID,omitempty" tf:"snapshot_id"`
	// +optional
	VolumeSize *int64 `json:"volumeSize,omitempty" tf:"volume_size"`
	// +optional
	VolumeType *string `json:"volumeType,omitempty" tf:"volume_type"`
}

type InstanceSpecEphemeralBlockDevice struct {
	DeviceName  *string `json:"deviceName" tf:"device_name"`
	VirtualName *string `json:"virtualName" tf:"virtual_name"`
}

type InstanceSpecRootBlockDevice struct {
	// +optional
	DeleteOnTermination *bool `json:"deleteOnTermination,omitempty" tf:"delete_on_termination"`
	// +optional
	Iops *int64 `json:"iops,omitempty" tf:"iops"`
	// +optional
	VolumeSize *int64 `json:"volumeSize,omitempty" tf:"volume_size"`
	// +optional
	VolumeType *string `json:"volumeType,omitempty" tf:"volume_type"`
}

type InstanceSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	AgentVersion *string `json:"agentVersion,omitempty" tf:"agent_version"`
	// +optional
	AmiID *string `json:"amiID,omitempty" tf:"ami_id"`
	// +optional
	Architecture *string `json:"architecture,omitempty" tf:"architecture"`
	// +optional
	AutoScalingType *string `json:"autoScalingType,omitempty" tf:"auto_scaling_type"`
	// +optional
	AvailabilityZone *string `json:"availabilityZone,omitempty" tf:"availability_zone"`
	// +optional
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at"`
	// +optional
	DeleteEbs *bool `json:"deleteEbs,omitempty" tf:"delete_ebs"`
	// +optional
	DeleteEip *bool `json:"deleteEip,omitempty" tf:"delete_eip"`
	// +optional
	EbsBlockDevice []InstanceSpecEbsBlockDevice `json:"ebsBlockDevice,omitempty" tf:"ebs_block_device"`
	// +optional
	EbsOptimized *bool `json:"ebsOptimized,omitempty" tf:"ebs_optimized"`
	// +optional
	Ec2InstanceID *string `json:"ec2InstanceID,omitempty" tf:"ec2_instance_id"`
	// +optional
	EcsClusterArn *string `json:"ecsClusterArn,omitempty" tf:"ecs_cluster_arn"`
	// +optional
	ElasticIP *string `json:"elasticIP,omitempty" tf:"elastic_ip"`
	// +optional
	EphemeralBlockDevice []InstanceSpecEphemeralBlockDevice `json:"ephemeralBlockDevice,omitempty" tf:"ephemeral_block_device"`
	// +optional
	Hostname *string `json:"hostname,omitempty" tf:"hostname"`
	// +optional
	InfrastructureClass *string `json:"infrastructureClass,omitempty" tf:"infrastructure_class"`
	// +optional
	InstallUpdatesOnBoot *bool `json:"installUpdatesOnBoot,omitempty" tf:"install_updates_on_boot"`
	// +optional
	InstanceProfileArn *string `json:"instanceProfileArn,omitempty" tf:"instance_profile_arn"`
	// +optional
	InstanceType *string `json:"instanceType,omitempty" tf:"instance_type"`
	// +optional
	LastServiceErrorID *string  `json:"lastServiceErrorID,omitempty" tf:"last_service_error_id"`
	LayerIDS           []string `json:"layerIDS" tf:"layer_ids"`
	// +optional
	Os *string `json:"os,omitempty" tf:"os"`
	// +optional
	Platform *string `json:"platform,omitempty" tf:"platform"`
	// +optional
	PrivateDNS *string `json:"privateDNS,omitempty" tf:"private_dns"`
	// +optional
	PrivateIP *string `json:"privateIP,omitempty" tf:"private_ip"`
	// +optional
	PublicDNS *string `json:"publicDNS,omitempty" tf:"public_dns"`
	// +optional
	PublicIP *string `json:"publicIP,omitempty" tf:"public_ip"`
	// +optional
	RegisteredBy *string `json:"registeredBy,omitempty" tf:"registered_by"`
	// +optional
	ReportedAgentVersion *string `json:"reportedAgentVersion,omitempty" tf:"reported_agent_version"`
	// +optional
	ReportedOsFamily *string `json:"reportedOsFamily,omitempty" tf:"reported_os_family"`
	// +optional
	ReportedOsName *string `json:"reportedOsName,omitempty" tf:"reported_os_name"`
	// +optional
	ReportedOsVersion *string `json:"reportedOsVersion,omitempty" tf:"reported_os_version"`
	// +optional
	RootBlockDevice []InstanceSpecRootBlockDevice `json:"rootBlockDevice,omitempty" tf:"root_block_device"`
	// +optional
	RootDeviceType *string `json:"rootDeviceType,omitempty" tf:"root_device_type"`
	// +optional
	RootDeviceVolumeID *string `json:"rootDeviceVolumeID,omitempty" tf:"root_device_volume_id"`
	// +optional
	SecurityGroupIDS []string `json:"securityGroupIDS,omitempty" tf:"security_group_ids"`
	// +optional
	SshHostDsaKeyFingerprint *string `json:"sshHostDsaKeyFingerprint,omitempty" tf:"ssh_host_dsa_key_fingerprint"`
	// +optional
	SshHostRsaKeyFingerprint *string `json:"sshHostRsaKeyFingerprint,omitempty" tf:"ssh_host_rsa_key_fingerprint"`
	// +optional
	SshKeyName *string `json:"sshKeyName,omitempty" tf:"ssh_key_name"`
	StackID    *string `json:"stackID" tf:"stack_id"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// +optional
	Status *string `json:"status,omitempty" tf:"status"`
	// +optional
	SubnetID *string `json:"subnetID,omitempty" tf:"subnet_id"`
	// +optional
	Tenancy *string `json:"tenancy,omitempty" tf:"tenancy"`
	// +optional
	VirtualizationType *string `json:"virtualizationType,omitempty" tf:"virtualization_type"`
}

type InstanceStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// InstanceList is a list of Instances
type InstanceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Instance CRD objects
	Items []Instance `json:"items,omitempty"`
}
