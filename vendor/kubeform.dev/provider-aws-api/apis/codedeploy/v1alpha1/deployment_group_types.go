/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type DeploymentGroup struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              DeploymentGroupSpec   `json:"spec,omitempty"`
	Status            DeploymentGroupStatus `json:"status,omitempty"`
}

type DeploymentGroupSpec struct {
	DeploymentGroupSpec2 `json:",inline"`
	// +optional
	KubeformOutput DeploymentGroupSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type DeploymentGroupSpecAlarmConfiguration struct {
	// +optional
	// +kubebuilder:validation:MaxItems=10
	Alarms []string `json:"alarms,omitempty" tf:"alarms"`
	// +optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled"`
	// +optional
	IgnorePollAlarmFailure *bool `json:"ignorePollAlarmFailure,omitempty" tf:"ignore_poll_alarm_failure"`
}

type DeploymentGroupSpecAutoRollbackConfiguration struct {
	// +optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled"`
	// +optional
	Events []string `json:"events,omitempty" tf:"events"`
}

type DeploymentGroupSpecBlueGreenDeploymentConfigDeploymentReadyOption struct {
	// +optional
	ActionOnTimeout *string `json:"actionOnTimeout,omitempty" tf:"action_on_timeout"`
	// +optional
	WaitTimeInMinutes *int64 `json:"waitTimeInMinutes,omitempty" tf:"wait_time_in_minutes"`
}

type DeploymentGroupSpecBlueGreenDeploymentConfigGreenFleetProvisioningOption struct {
	// +optional
	Action *string `json:"action,omitempty" tf:"action"`
}

type DeploymentGroupSpecBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccess struct {
	// +optional
	Action *string `json:"action,omitempty" tf:"action"`
	// +optional
	TerminationWaitTimeInMinutes *int64 `json:"terminationWaitTimeInMinutes,omitempty" tf:"termination_wait_time_in_minutes"`
}

type DeploymentGroupSpecBlueGreenDeploymentConfig struct {
	// +optional
	DeploymentReadyOption *DeploymentGroupSpecBlueGreenDeploymentConfigDeploymentReadyOption `json:"deploymentReadyOption,omitempty" tf:"deployment_ready_option"`
	// +optional
	GreenFleetProvisioningOption *DeploymentGroupSpecBlueGreenDeploymentConfigGreenFleetProvisioningOption `json:"greenFleetProvisioningOption,omitempty" tf:"green_fleet_provisioning_option"`
	// +optional
	TerminateBlueInstancesOnDeploymentSuccess *DeploymentGroupSpecBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccess `json:"terminateBlueInstancesOnDeploymentSuccess,omitempty" tf:"terminate_blue_instances_on_deployment_success"`
}

type DeploymentGroupSpecDeploymentStyle struct {
	// +optional
	DeploymentOption *string `json:"deploymentOption,omitempty" tf:"deployment_option"`
	// +optional
	DeploymentType *string `json:"deploymentType,omitempty" tf:"deployment_type"`
}

type DeploymentGroupSpecEc2TagFilter struct {
	// +optional
	Key *string `json:"key,omitempty" tf:"key"`
	// +optional
	Type *string `json:"type,omitempty" tf:"type"`
	// +optional
	Value *string `json:"value,omitempty" tf:"value"`
}

type DeploymentGroupSpecEc2TagSetEc2TagFilter struct {
	// +optional
	Key *string `json:"key,omitempty" tf:"key"`
	// +optional
	Type *string `json:"type,omitempty" tf:"type"`
	// +optional
	Value *string `json:"value,omitempty" tf:"value"`
}

type DeploymentGroupSpecEc2TagSet struct {
	// +optional
	Ec2TagFilter []DeploymentGroupSpecEc2TagSetEc2TagFilter `json:"ec2TagFilter,omitempty" tf:"ec2_tag_filter"`
}

type DeploymentGroupSpecEcsService struct {
	ClusterName *string `json:"clusterName" tf:"cluster_name"`
	ServiceName *string `json:"serviceName" tf:"service_name"`
}

type DeploymentGroupSpecLoadBalancerInfoElbInfo struct {
	// +optional
	Name *string `json:"name,omitempty" tf:"name"`
}

type DeploymentGroupSpecLoadBalancerInfoTargetGroupInfo struct {
	// +optional
	Name *string `json:"name,omitempty" tf:"name"`
}

type DeploymentGroupSpecLoadBalancerInfoTargetGroupPairInfoProdTrafficRoute struct {
	ListenerArns []string `json:"listenerArns" tf:"listener_arns"`
}

type DeploymentGroupSpecLoadBalancerInfoTargetGroupPairInfoTargetGroup struct {
	Name *string `json:"name" tf:"name"`
}

type DeploymentGroupSpecLoadBalancerInfoTargetGroupPairInfoTestTrafficRoute struct {
	ListenerArns []string `json:"listenerArns" tf:"listener_arns"`
}

type DeploymentGroupSpecLoadBalancerInfoTargetGroupPairInfo struct {
	ProdTrafficRoute *DeploymentGroupSpecLoadBalancerInfoTargetGroupPairInfoProdTrafficRoute `json:"prodTrafficRoute" tf:"prod_traffic_route"`
	// +kubebuilder:validation:MaxItems=2
	// +kubebuilder:validation:MinItems=1
	TargetGroup []DeploymentGroupSpecLoadBalancerInfoTargetGroupPairInfoTargetGroup `json:"targetGroup" tf:"target_group"`
	// +optional
	TestTrafficRoute *DeploymentGroupSpecLoadBalancerInfoTargetGroupPairInfoTestTrafficRoute `json:"testTrafficRoute,omitempty" tf:"test_traffic_route"`
}

type DeploymentGroupSpecLoadBalancerInfo struct {
	// +optional
	ElbInfo []DeploymentGroupSpecLoadBalancerInfoElbInfo `json:"elbInfo,omitempty" tf:"elb_info"`
	// +optional
	TargetGroupInfo []DeploymentGroupSpecLoadBalancerInfoTargetGroupInfo `json:"targetGroupInfo,omitempty" tf:"target_group_info"`
	// +optional
	TargetGroupPairInfo *DeploymentGroupSpecLoadBalancerInfoTargetGroupPairInfo `json:"targetGroupPairInfo,omitempty" tf:"target_group_pair_info"`
}

type DeploymentGroupSpecOnPremisesInstanceTagFilter struct {
	// +optional
	Key *string `json:"key,omitempty" tf:"key"`
	// +optional
	Type *string `json:"type,omitempty" tf:"type"`
	// +optional
	Value *string `json:"value,omitempty" tf:"value"`
}

type DeploymentGroupSpecTriggerConfiguration struct {
	TriggerEvents    []string `json:"triggerEvents" tf:"trigger_events"`
	TriggerName      *string  `json:"triggerName" tf:"trigger_name"`
	TriggerTargetArn *string  `json:"triggerTargetArn" tf:"trigger_target_arn"`
}

type DeploymentGroupSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	AlarmConfiguration *DeploymentGroupSpecAlarmConfiguration `json:"alarmConfiguration,omitempty" tf:"alarm_configuration"`
	AppName            *string                                `json:"appName" tf:"app_name"`
	// +optional
	Arn *string `json:"arn,omitempty" tf:"arn"`
	// +optional
	AutoRollbackConfiguration *DeploymentGroupSpecAutoRollbackConfiguration `json:"autoRollbackConfiguration,omitempty" tf:"auto_rollback_configuration"`
	// +optional
	AutoscalingGroups []string `json:"autoscalingGroups,omitempty" tf:"autoscaling_groups"`
	// +optional
	BlueGreenDeploymentConfig *DeploymentGroupSpecBlueGreenDeploymentConfig `json:"blueGreenDeploymentConfig,omitempty" tf:"blue_green_deployment_config"`
	// +optional
	ComputePlatform *string `json:"computePlatform,omitempty" tf:"compute_platform"`
	// +optional
	DeploymentConfigName *string `json:"deploymentConfigName,omitempty" tf:"deployment_config_name"`
	// +optional
	DeploymentGroupID   *string `json:"deploymentGroupID,omitempty" tf:"deployment_group_id"`
	DeploymentGroupName *string `json:"deploymentGroupName" tf:"deployment_group_name"`
	// +optional
	DeploymentStyle *DeploymentGroupSpecDeploymentStyle `json:"deploymentStyle,omitempty" tf:"deployment_style"`
	// +optional
	Ec2TagFilter []DeploymentGroupSpecEc2TagFilter `json:"ec2TagFilter,omitempty" tf:"ec2_tag_filter"`
	// +optional
	Ec2TagSet []DeploymentGroupSpecEc2TagSet `json:"ec2TagSet,omitempty" tf:"ec2_tag_set"`
	// +optional
	EcsService *DeploymentGroupSpecEcsService `json:"ecsService,omitempty" tf:"ecs_service"`
	// +optional
	LoadBalancerInfo *DeploymentGroupSpecLoadBalancerInfo `json:"loadBalancerInfo,omitempty" tf:"load_balancer_info"`
	// +optional
	OnPremisesInstanceTagFilter []DeploymentGroupSpecOnPremisesInstanceTagFilter `json:"onPremisesInstanceTagFilter,omitempty" tf:"on_premises_instance_tag_filter"`
	ServiceRoleArn              *string                                          `json:"serviceRoleArn" tf:"service_role_arn"`
	// +optional
	Tags *map[string]string `json:"tags,omitempty" tf:"tags"`
	// +optional
	TriggerConfiguration []DeploymentGroupSpecTriggerConfiguration `json:"triggerConfiguration,omitempty" tf:"trigger_configuration"`
}

type DeploymentGroupStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// DeploymentGroupList is a list of DeploymentGroups
type DeploymentGroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of DeploymentGroup CRD objects
	Items []DeploymentGroup `json:"items,omitempty"`
}
