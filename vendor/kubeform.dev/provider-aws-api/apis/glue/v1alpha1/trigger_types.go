/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Trigger struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              TriggerSpec   `json:"spec,omitempty"`
	Status            TriggerStatus `json:"status,omitempty"`
}

type TriggerSpec struct {
	TriggerSpec2 `json:",inline"`
	// +optional
	KubeformOutput TriggerSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type TriggerSpecActionsNotificationProperty struct {
	// +optional
	NotifyDelayAfter *int64 `json:"notifyDelayAfter,omitempty" tf:"notify_delay_after"`
}

type TriggerSpecActions struct {
	// +optional
	Arguments *map[string]string `json:"arguments,omitempty" tf:"arguments"`
	// +optional
	CrawlerName *string `json:"crawlerName,omitempty" tf:"crawler_name"`
	// +optional
	JobName *string `json:"jobName,omitempty" tf:"job_name"`
	// +optional
	NotificationProperty *TriggerSpecActionsNotificationProperty `json:"notificationProperty,omitempty" tf:"notification_property"`
	// +optional
	SecurityConfiguration *string `json:"securityConfiguration,omitempty" tf:"security_configuration"`
	// +optional
	Timeout *int64 `json:"timeout,omitempty" tf:"timeout"`
}

type TriggerSpecPredicateConditions struct {
	// +optional
	CrawlState *string `json:"crawlState,omitempty" tf:"crawl_state"`
	// +optional
	CrawlerName *string `json:"crawlerName,omitempty" tf:"crawler_name"`
	// +optional
	JobName *string `json:"jobName,omitempty" tf:"job_name"`
	// +optional
	LogicalOperator *string `json:"logicalOperator,omitempty" tf:"logical_operator"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
}

type TriggerSpecPredicate struct {
	// +kubebuilder:validation:MinItems=1
	Conditions []TriggerSpecPredicateConditions `json:"conditions" tf:"conditions"`
	// +optional
	Logical *string `json:"logical,omitempty" tf:"logical"`
}

type TriggerSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +kubebuilder:validation:MinItems=1
	Actions []TriggerSpecActions `json:"actions" tf:"actions"`
	// +optional
	Arn *string `json:"arn,omitempty" tf:"arn"`
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// +optional
	Enabled *bool   `json:"enabled,omitempty" tf:"enabled"`
	Name    *string `json:"name" tf:"name"`
	// +optional
	Predicate *TriggerSpecPredicate `json:"predicate,omitempty" tf:"predicate"`
	// +optional
	Schedule *string `json:"schedule,omitempty" tf:"schedule"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// +optional
	Tags *map[string]string `json:"tags,omitempty" tf:"tags"`
	Type *string            `json:"type" tf:"type"`
	// +optional
	WorkflowName *string `json:"workflowName,omitempty" tf:"workflow_name"`
}

type TriggerStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// TriggerList is a list of Triggers
type TriggerList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Trigger CRD objects
	Items []Trigger `json:"items,omitempty"`
}
