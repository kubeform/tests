/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type DevEndpoint struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              DevEndpointSpec   `json:"spec,omitempty"`
	Status            DevEndpointStatus `json:"status,omitempty"`
}

type DevEndpointSpec struct {
	DevEndpointSpec2 `json:",inline"`
	// +optional
	KubeformOutput DevEndpointSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type DevEndpointSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	Arguments map[string]string `json:"arguments,omitempty" tf:"arguments"`
	// +optional
	Arn *string `json:"arn,omitempty" tf:"arn"`
	// +optional
	AvailabilityZone *string `json:"availabilityZone,omitempty" tf:"availability_zone"`
	// +optional
	ExtraJarsS3Path *string `json:"extraJarsS3Path,omitempty" tf:"extra_jars_s3_path"`
	// +optional
	ExtraPythonLibsS3Path *string `json:"extraPythonLibsS3Path,omitempty" tf:"extra_python_libs_s3_path"`
	// +optional
	FailureReason *string `json:"failureReason,omitempty" tf:"failure_reason"`
	// +optional
	GlueVersion *string `json:"glueVersion,omitempty" tf:"glue_version"`
	Name        *string `json:"name" tf:"name"`
	// +optional
	NumberOfNodes *int64 `json:"numberOfNodes,omitempty" tf:"number_of_nodes"`
	// +optional
	NumberOfWorkers *int64 `json:"numberOfWorkers,omitempty" tf:"number_of_workers"`
	// +optional
	PrivateAddress *string `json:"privateAddress,omitempty" tf:"private_address"`
	// +optional
	PublicAddress *string `json:"publicAddress,omitempty" tf:"public_address"`
	// +optional
	PublicKey *string `json:"publicKey,omitempty" tf:"public_key"`
	// +optional
	// +kubebuilder:validation:MaxItems=5
	PublicKeys []string `json:"publicKeys,omitempty" tf:"public_keys"`
	RoleArn    *string  `json:"roleArn" tf:"role_arn"`
	// +optional
	SecurityConfiguration *string `json:"securityConfiguration,omitempty" tf:"security_configuration"`
	// +optional
	SecurityGroupIDS []string `json:"securityGroupIDS,omitempty" tf:"security_group_ids"`
	// +optional
	Status *string `json:"status,omitempty" tf:"status"`
	// +optional
	SubnetID *string `json:"subnetID,omitempty" tf:"subnet_id"`
	// +optional
	Tags *map[string]string `json:"tags,omitempty" tf:"tags"`
	// +optional
	VpcID *string `json:"vpcID,omitempty" tf:"vpc_id"`
	// +optional
	WorkerType *string `json:"workerType,omitempty" tf:"worker_type"`
	// +optional
	YarnEndpointAddress *string `json:"yarnEndpointAddress,omitempty" tf:"yarn_endpoint_address"`
	// +optional
	ZeppelinRemoteSparkInterpreterPort *int64 `json:"zeppelinRemoteSparkInterpreterPort,omitempty" tf:"zeppelin_remote_spark_interpreter_port"`
}

type DevEndpointStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// DevEndpointList is a list of DevEndpoints
type DevEndpointList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of DevEndpoint CRD objects
	Items []DevEndpoint `json:"items,omitempty"`
}
