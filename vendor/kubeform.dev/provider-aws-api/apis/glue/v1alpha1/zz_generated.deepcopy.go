// +build !ignore_autogenerated

/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	apiv1alpha1 "kubeform.dev/apimachinery/api/v1alpha1"

	corev1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	v1 "kmodules.xyz/client-go/api/v1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogDatabase) DeepCopyInto(out *CatalogDatabase) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogDatabase.
func (in *CatalogDatabase) DeepCopy() *CatalogDatabase {
	if in == nil {
		return nil
	}
	out := new(CatalogDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CatalogDatabase) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogDatabaseList) DeepCopyInto(out *CatalogDatabaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CatalogDatabase, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogDatabaseList.
func (in *CatalogDatabaseList) DeepCopy() *CatalogDatabaseList {
	if in == nil {
		return nil
	}
	out := new(CatalogDatabaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CatalogDatabaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogDatabaseSpec) DeepCopyInto(out *CatalogDatabaseSpec) {
	*out = *in
	in.CatalogDatabaseSpec2.DeepCopyInto(&out.CatalogDatabaseSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogDatabaseSpec.
func (in *CatalogDatabaseSpec) DeepCopy() *CatalogDatabaseSpec {
	if in == nil {
		return nil
	}
	out := new(CatalogDatabaseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogDatabaseSpec2) DeepCopyInto(out *CatalogDatabaseSpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.CatalogID != nil {
		in, out := &in.CatalogID, &out.CatalogID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.LocationURI != nil {
		in, out := &in.LocationURI, &out.LocationURI
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogDatabaseSpec2.
func (in *CatalogDatabaseSpec2) DeepCopy() *CatalogDatabaseSpec2 {
	if in == nil {
		return nil
	}
	out := new(CatalogDatabaseSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogDatabaseStatus) DeepCopyInto(out *CatalogDatabaseStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogDatabaseStatus.
func (in *CatalogDatabaseStatus) DeepCopy() *CatalogDatabaseStatus {
	if in == nil {
		return nil
	}
	out := new(CatalogDatabaseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogTable) DeepCopyInto(out *CatalogTable) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogTable.
func (in *CatalogTable) DeepCopy() *CatalogTable {
	if in == nil {
		return nil
	}
	out := new(CatalogTable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CatalogTable) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogTableList) DeepCopyInto(out *CatalogTableList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CatalogTable, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogTableList.
func (in *CatalogTableList) DeepCopy() *CatalogTableList {
	if in == nil {
		return nil
	}
	out := new(CatalogTableList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CatalogTableList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogTableSpec) DeepCopyInto(out *CatalogTableSpec) {
	*out = *in
	in.CatalogTableSpec2.DeepCopyInto(&out.CatalogTableSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogTableSpec.
func (in *CatalogTableSpec) DeepCopy() *CatalogTableSpec {
	if in == nil {
		return nil
	}
	out := new(CatalogTableSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogTableSpec2) DeepCopyInto(out *CatalogTableSpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.CatalogID != nil {
		in, out := &in.CatalogID, &out.CatalogID
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.PartitionIndex != nil {
		in, out := &in.PartitionIndex, &out.PartitionIndex
		*out = make([]CatalogTableSpecPartitionIndex, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PartitionKeys != nil {
		in, out := &in.PartitionKeys, &out.PartitionKeys
		*out = make([]CatalogTableSpecPartitionKeys, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Retention != nil {
		in, out := &in.Retention, &out.Retention
		*out = new(int64)
		**out = **in
	}
	if in.StorageDescriptor != nil {
		in, out := &in.StorageDescriptor, &out.StorageDescriptor
		*out = new(CatalogTableSpecStorageDescriptor)
		(*in).DeepCopyInto(*out)
	}
	if in.TableType != nil {
		in, out := &in.TableType, &out.TableType
		*out = new(string)
		**out = **in
	}
	if in.ViewExpandedText != nil {
		in, out := &in.ViewExpandedText, &out.ViewExpandedText
		*out = new(string)
		**out = **in
	}
	if in.ViewOriginalText != nil {
		in, out := &in.ViewOriginalText, &out.ViewOriginalText
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogTableSpec2.
func (in *CatalogTableSpec2) DeepCopy() *CatalogTableSpec2 {
	if in == nil {
		return nil
	}
	out := new(CatalogTableSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogTableSpecPartitionIndex) DeepCopyInto(out *CatalogTableSpecPartitionIndex) {
	*out = *in
	if in.IndexName != nil {
		in, out := &in.IndexName, &out.IndexName
		*out = new(string)
		**out = **in
	}
	if in.IndexStatus != nil {
		in, out := &in.IndexStatus, &out.IndexStatus
		*out = new(string)
		**out = **in
	}
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogTableSpecPartitionIndex.
func (in *CatalogTableSpecPartitionIndex) DeepCopy() *CatalogTableSpecPartitionIndex {
	if in == nil {
		return nil
	}
	out := new(CatalogTableSpecPartitionIndex)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogTableSpecPartitionKeys) DeepCopyInto(out *CatalogTableSpecPartitionKeys) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogTableSpecPartitionKeys.
func (in *CatalogTableSpecPartitionKeys) DeepCopy() *CatalogTableSpecPartitionKeys {
	if in == nil {
		return nil
	}
	out := new(CatalogTableSpecPartitionKeys)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogTableSpecStorageDescriptor) DeepCopyInto(out *CatalogTableSpecStorageDescriptor) {
	*out = *in
	if in.BucketColumns != nil {
		in, out := &in.BucketColumns, &out.BucketColumns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]CatalogTableSpecStorageDescriptorColumns, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Compressed != nil {
		in, out := &in.Compressed, &out.Compressed
		*out = new(bool)
		**out = **in
	}
	if in.InputFormat != nil {
		in, out := &in.InputFormat, &out.InputFormat
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.NumberOfBuckets != nil {
		in, out := &in.NumberOfBuckets, &out.NumberOfBuckets
		*out = new(int64)
		**out = **in
	}
	if in.OutputFormat != nil {
		in, out := &in.OutputFormat, &out.OutputFormat
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.SchemaReference != nil {
		in, out := &in.SchemaReference, &out.SchemaReference
		*out = new(CatalogTableSpecStorageDescriptorSchemaReference)
		(*in).DeepCopyInto(*out)
	}
	if in.SerDeInfo != nil {
		in, out := &in.SerDeInfo, &out.SerDeInfo
		*out = new(CatalogTableSpecStorageDescriptorSerDeInfo)
		(*in).DeepCopyInto(*out)
	}
	if in.SkewedInfo != nil {
		in, out := &in.SkewedInfo, &out.SkewedInfo
		*out = new(CatalogTableSpecStorageDescriptorSkewedInfo)
		(*in).DeepCopyInto(*out)
	}
	if in.SortColumns != nil {
		in, out := &in.SortColumns, &out.SortColumns
		*out = make([]CatalogTableSpecStorageDescriptorSortColumns, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StoredAsSubDirectories != nil {
		in, out := &in.StoredAsSubDirectories, &out.StoredAsSubDirectories
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogTableSpecStorageDescriptor.
func (in *CatalogTableSpecStorageDescriptor) DeepCopy() *CatalogTableSpecStorageDescriptor {
	if in == nil {
		return nil
	}
	out := new(CatalogTableSpecStorageDescriptor)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogTableSpecStorageDescriptorColumns) DeepCopyInto(out *CatalogTableSpecStorageDescriptorColumns) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogTableSpecStorageDescriptorColumns.
func (in *CatalogTableSpecStorageDescriptorColumns) DeepCopy() *CatalogTableSpecStorageDescriptorColumns {
	if in == nil {
		return nil
	}
	out := new(CatalogTableSpecStorageDescriptorColumns)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogTableSpecStorageDescriptorSchemaReference) DeepCopyInto(out *CatalogTableSpecStorageDescriptorSchemaReference) {
	*out = *in
	if in.SchemaID != nil {
		in, out := &in.SchemaID, &out.SchemaID
		*out = new(CatalogTableSpecStorageDescriptorSchemaReferenceSchemaID)
		(*in).DeepCopyInto(*out)
	}
	if in.SchemaVersionID != nil {
		in, out := &in.SchemaVersionID, &out.SchemaVersionID
		*out = new(string)
		**out = **in
	}
	if in.SchemaVersionNumber != nil {
		in, out := &in.SchemaVersionNumber, &out.SchemaVersionNumber
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogTableSpecStorageDescriptorSchemaReference.
func (in *CatalogTableSpecStorageDescriptorSchemaReference) DeepCopy() *CatalogTableSpecStorageDescriptorSchemaReference {
	if in == nil {
		return nil
	}
	out := new(CatalogTableSpecStorageDescriptorSchemaReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogTableSpecStorageDescriptorSchemaReferenceSchemaID) DeepCopyInto(out *CatalogTableSpecStorageDescriptorSchemaReferenceSchemaID) {
	*out = *in
	if in.RegistryName != nil {
		in, out := &in.RegistryName, &out.RegistryName
		*out = new(string)
		**out = **in
	}
	if in.SchemaArn != nil {
		in, out := &in.SchemaArn, &out.SchemaArn
		*out = new(string)
		**out = **in
	}
	if in.SchemaName != nil {
		in, out := &in.SchemaName, &out.SchemaName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogTableSpecStorageDescriptorSchemaReferenceSchemaID.
func (in *CatalogTableSpecStorageDescriptorSchemaReferenceSchemaID) DeepCopy() *CatalogTableSpecStorageDescriptorSchemaReferenceSchemaID {
	if in == nil {
		return nil
	}
	out := new(CatalogTableSpecStorageDescriptorSchemaReferenceSchemaID)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogTableSpecStorageDescriptorSerDeInfo) DeepCopyInto(out *CatalogTableSpecStorageDescriptorSerDeInfo) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.SerializationLibrary != nil {
		in, out := &in.SerializationLibrary, &out.SerializationLibrary
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogTableSpecStorageDescriptorSerDeInfo.
func (in *CatalogTableSpecStorageDescriptorSerDeInfo) DeepCopy() *CatalogTableSpecStorageDescriptorSerDeInfo {
	if in == nil {
		return nil
	}
	out := new(CatalogTableSpecStorageDescriptorSerDeInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogTableSpecStorageDescriptorSkewedInfo) DeepCopyInto(out *CatalogTableSpecStorageDescriptorSkewedInfo) {
	*out = *in
	if in.SkewedColumnNames != nil {
		in, out := &in.SkewedColumnNames, &out.SkewedColumnNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SkewedColumnValueLocationMaps != nil {
		in, out := &in.SkewedColumnValueLocationMaps, &out.SkewedColumnValueLocationMaps
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.SkewedColumnValues != nil {
		in, out := &in.SkewedColumnValues, &out.SkewedColumnValues
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogTableSpecStorageDescriptorSkewedInfo.
func (in *CatalogTableSpecStorageDescriptorSkewedInfo) DeepCopy() *CatalogTableSpecStorageDescriptorSkewedInfo {
	if in == nil {
		return nil
	}
	out := new(CatalogTableSpecStorageDescriptorSkewedInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogTableSpecStorageDescriptorSortColumns) DeepCopyInto(out *CatalogTableSpecStorageDescriptorSortColumns) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.SortOrder != nil {
		in, out := &in.SortOrder, &out.SortOrder
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogTableSpecStorageDescriptorSortColumns.
func (in *CatalogTableSpecStorageDescriptorSortColumns) DeepCopy() *CatalogTableSpecStorageDescriptorSortColumns {
	if in == nil {
		return nil
	}
	out := new(CatalogTableSpecStorageDescriptorSortColumns)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogTableStatus) DeepCopyInto(out *CatalogTableStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogTableStatus.
func (in *CatalogTableStatus) DeepCopy() *CatalogTableStatus {
	if in == nil {
		return nil
	}
	out := new(CatalogTableStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Classifier) DeepCopyInto(out *Classifier) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Classifier.
func (in *Classifier) DeepCopy() *Classifier {
	if in == nil {
		return nil
	}
	out := new(Classifier)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Classifier) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassifierList) DeepCopyInto(out *ClassifierList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Classifier, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassifierList.
func (in *ClassifierList) DeepCopy() *ClassifierList {
	if in == nil {
		return nil
	}
	out := new(ClassifierList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClassifierList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassifierSpec) DeepCopyInto(out *ClassifierSpec) {
	*out = *in
	in.ClassifierSpec2.DeepCopyInto(&out.ClassifierSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassifierSpec.
func (in *ClassifierSpec) DeepCopy() *ClassifierSpec {
	if in == nil {
		return nil
	}
	out := new(ClassifierSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassifierSpec2) DeepCopyInto(out *ClassifierSpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.CsvClassifier != nil {
		in, out := &in.CsvClassifier, &out.CsvClassifier
		*out = new(ClassifierSpecCsvClassifier)
		(*in).DeepCopyInto(*out)
	}
	if in.GrokClassifier != nil {
		in, out := &in.GrokClassifier, &out.GrokClassifier
		*out = new(ClassifierSpecGrokClassifier)
		(*in).DeepCopyInto(*out)
	}
	if in.JsonClassifier != nil {
		in, out := &in.JsonClassifier, &out.JsonClassifier
		*out = new(ClassifierSpecJsonClassifier)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.XmlClassifier != nil {
		in, out := &in.XmlClassifier, &out.XmlClassifier
		*out = new(ClassifierSpecXmlClassifier)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassifierSpec2.
func (in *ClassifierSpec2) DeepCopy() *ClassifierSpec2 {
	if in == nil {
		return nil
	}
	out := new(ClassifierSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassifierSpecCsvClassifier) DeepCopyInto(out *ClassifierSpecCsvClassifier) {
	*out = *in
	if in.AllowSingleColumn != nil {
		in, out := &in.AllowSingleColumn, &out.AllowSingleColumn
		*out = new(bool)
		**out = **in
	}
	if in.ContainsHeader != nil {
		in, out := &in.ContainsHeader, &out.ContainsHeader
		*out = new(string)
		**out = **in
	}
	if in.Delimiter != nil {
		in, out := &in.Delimiter, &out.Delimiter
		*out = new(string)
		**out = **in
	}
	if in.DisableValueTrimming != nil {
		in, out := &in.DisableValueTrimming, &out.DisableValueTrimming
		*out = new(bool)
		**out = **in
	}
	if in.Header != nil {
		in, out := &in.Header, &out.Header
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.QuoteSymbol != nil {
		in, out := &in.QuoteSymbol, &out.QuoteSymbol
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassifierSpecCsvClassifier.
func (in *ClassifierSpecCsvClassifier) DeepCopy() *ClassifierSpecCsvClassifier {
	if in == nil {
		return nil
	}
	out := new(ClassifierSpecCsvClassifier)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassifierSpecGrokClassifier) DeepCopyInto(out *ClassifierSpecGrokClassifier) {
	*out = *in
	if in.Classification != nil {
		in, out := &in.Classification, &out.Classification
		*out = new(string)
		**out = **in
	}
	if in.CustomPatterns != nil {
		in, out := &in.CustomPatterns, &out.CustomPatterns
		*out = new(string)
		**out = **in
	}
	if in.GrokPattern != nil {
		in, out := &in.GrokPattern, &out.GrokPattern
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassifierSpecGrokClassifier.
func (in *ClassifierSpecGrokClassifier) DeepCopy() *ClassifierSpecGrokClassifier {
	if in == nil {
		return nil
	}
	out := new(ClassifierSpecGrokClassifier)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassifierSpecJsonClassifier) DeepCopyInto(out *ClassifierSpecJsonClassifier) {
	*out = *in
	if in.JsonPath != nil {
		in, out := &in.JsonPath, &out.JsonPath
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassifierSpecJsonClassifier.
func (in *ClassifierSpecJsonClassifier) DeepCopy() *ClassifierSpecJsonClassifier {
	if in == nil {
		return nil
	}
	out := new(ClassifierSpecJsonClassifier)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassifierSpecXmlClassifier) DeepCopyInto(out *ClassifierSpecXmlClassifier) {
	*out = *in
	if in.Classification != nil {
		in, out := &in.Classification, &out.Classification
		*out = new(string)
		**out = **in
	}
	if in.RowTag != nil {
		in, out := &in.RowTag, &out.RowTag
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassifierSpecXmlClassifier.
func (in *ClassifierSpecXmlClassifier) DeepCopy() *ClassifierSpecXmlClassifier {
	if in == nil {
		return nil
	}
	out := new(ClassifierSpecXmlClassifier)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClassifierStatus) DeepCopyInto(out *ClassifierStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClassifierStatus.
func (in *ClassifierStatus) DeepCopy() *ClassifierStatus {
	if in == nil {
		return nil
	}
	out := new(ClassifierStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Connection) DeepCopyInto(out *Connection) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Connection.
func (in *Connection) DeepCopy() *Connection {
	if in == nil {
		return nil
	}
	out := new(Connection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Connection) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionList) DeepCopyInto(out *ConnectionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Connection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionList.
func (in *ConnectionList) DeepCopy() *ConnectionList {
	if in == nil {
		return nil
	}
	out := new(ConnectionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConnectionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionSpec) DeepCopyInto(out *ConnectionSpec) {
	*out = *in
	in.ConnectionSpec2.DeepCopyInto(&out.ConnectionSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionSpec.
func (in *ConnectionSpec) DeepCopy() *ConnectionSpec {
	if in == nil {
		return nil
	}
	out := new(ConnectionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionSpec2) DeepCopyInto(out *ConnectionSpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(corev1.LocalObjectReference)
		**out = **in
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.CatalogID != nil {
		in, out := &in.CatalogID, &out.CatalogID
		*out = new(string)
		**out = **in
	}
	if in.ConnectionProperties != nil {
		in, out := &in.ConnectionProperties, &out.ConnectionProperties
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ConnectionType != nil {
		in, out := &in.ConnectionType, &out.ConnectionType
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PhysicalConnectionRequirements != nil {
		in, out := &in.PhysicalConnectionRequirements, &out.PhysicalConnectionRequirements
		*out = new(ConnectionSpecPhysicalConnectionRequirements)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionSpec2.
func (in *ConnectionSpec2) DeepCopy() *ConnectionSpec2 {
	if in == nil {
		return nil
	}
	out := new(ConnectionSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionSpecPhysicalConnectionRequirements) DeepCopyInto(out *ConnectionSpecPhysicalConnectionRequirements) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupIDList != nil {
		in, out := &in.SecurityGroupIDList, &out.SecurityGroupIDList
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionSpecPhysicalConnectionRequirements.
func (in *ConnectionSpecPhysicalConnectionRequirements) DeepCopy() *ConnectionSpecPhysicalConnectionRequirements {
	if in == nil {
		return nil
	}
	out := new(ConnectionSpecPhysicalConnectionRequirements)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionStatus) DeepCopyInto(out *ConnectionStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionStatus.
func (in *ConnectionStatus) DeepCopy() *ConnectionStatus {
	if in == nil {
		return nil
	}
	out := new(ConnectionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Crawler) DeepCopyInto(out *Crawler) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Crawler.
func (in *Crawler) DeepCopy() *Crawler {
	if in == nil {
		return nil
	}
	out := new(Crawler)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Crawler) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrawlerList) DeepCopyInto(out *CrawlerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Crawler, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrawlerList.
func (in *CrawlerList) DeepCopy() *CrawlerList {
	if in == nil {
		return nil
	}
	out := new(CrawlerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CrawlerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrawlerSpec) DeepCopyInto(out *CrawlerSpec) {
	*out = *in
	in.CrawlerSpec2.DeepCopyInto(&out.CrawlerSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrawlerSpec.
func (in *CrawlerSpec) DeepCopy() *CrawlerSpec {
	if in == nil {
		return nil
	}
	out := new(CrawlerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrawlerSpec2) DeepCopyInto(out *CrawlerSpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.CatalogTarget != nil {
		in, out := &in.CatalogTarget, &out.CatalogTarget
		*out = make([]CrawlerSpecCatalogTarget, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Classifiers != nil {
		in, out := &in.Classifiers, &out.Classifiers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DynamodbTarget != nil {
		in, out := &in.DynamodbTarget, &out.DynamodbTarget
		*out = make([]CrawlerSpecDynamodbTarget, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JdbcTarget != nil {
		in, out := &in.JdbcTarget, &out.JdbcTarget
		*out = make([]CrawlerSpecJdbcTarget, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LineageConfiguration != nil {
		in, out := &in.LineageConfiguration, &out.LineageConfiguration
		*out = new(CrawlerSpecLineageConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.MongodbTarget != nil {
		in, out := &in.MongodbTarget, &out.MongodbTarget
		*out = make([]CrawlerSpecMongodbTarget, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RecrawlPolicy != nil {
		in, out := &in.RecrawlPolicy, &out.RecrawlPolicy
		*out = new(CrawlerSpecRecrawlPolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.S3Target != nil {
		in, out := &in.S3Target, &out.S3Target
		*out = make([]CrawlerSpecS3Target, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
	if in.SchemaChangePolicy != nil {
		in, out := &in.SchemaChangePolicy, &out.SchemaChangePolicy
		*out = new(CrawlerSpecSchemaChangePolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityConfiguration != nil {
		in, out := &in.SecurityConfiguration, &out.SecurityConfiguration
		*out = new(string)
		**out = **in
	}
	if in.TablePrefix != nil {
		in, out := &in.TablePrefix, &out.TablePrefix
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrawlerSpec2.
func (in *CrawlerSpec2) DeepCopy() *CrawlerSpec2 {
	if in == nil {
		return nil
	}
	out := new(CrawlerSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrawlerSpecCatalogTarget) DeepCopyInto(out *CrawlerSpecCatalogTarget) {
	*out = *in
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Tables != nil {
		in, out := &in.Tables, &out.Tables
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrawlerSpecCatalogTarget.
func (in *CrawlerSpecCatalogTarget) DeepCopy() *CrawlerSpecCatalogTarget {
	if in == nil {
		return nil
	}
	out := new(CrawlerSpecCatalogTarget)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrawlerSpecDynamodbTarget) DeepCopyInto(out *CrawlerSpecDynamodbTarget) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.ScanAll != nil {
		in, out := &in.ScanAll, &out.ScanAll
		*out = new(bool)
		**out = **in
	}
	if in.ScanRate != nil {
		in, out := &in.ScanRate, &out.ScanRate
		*out = new(float64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrawlerSpecDynamodbTarget.
func (in *CrawlerSpecDynamodbTarget) DeepCopy() *CrawlerSpecDynamodbTarget {
	if in == nil {
		return nil
	}
	out := new(CrawlerSpecDynamodbTarget)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrawlerSpecJdbcTarget) DeepCopyInto(out *CrawlerSpecJdbcTarget) {
	*out = *in
	if in.ConnectionName != nil {
		in, out := &in.ConnectionName, &out.ConnectionName
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrawlerSpecJdbcTarget.
func (in *CrawlerSpecJdbcTarget) DeepCopy() *CrawlerSpecJdbcTarget {
	if in == nil {
		return nil
	}
	out := new(CrawlerSpecJdbcTarget)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrawlerSpecLineageConfiguration) DeepCopyInto(out *CrawlerSpecLineageConfiguration) {
	*out = *in
	if in.CrawlerLineageSettings != nil {
		in, out := &in.CrawlerLineageSettings, &out.CrawlerLineageSettings
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrawlerSpecLineageConfiguration.
func (in *CrawlerSpecLineageConfiguration) DeepCopy() *CrawlerSpecLineageConfiguration {
	if in == nil {
		return nil
	}
	out := new(CrawlerSpecLineageConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrawlerSpecMongodbTarget) DeepCopyInto(out *CrawlerSpecMongodbTarget) {
	*out = *in
	if in.ConnectionName != nil {
		in, out := &in.ConnectionName, &out.ConnectionName
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.ScanAll != nil {
		in, out := &in.ScanAll, &out.ScanAll
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrawlerSpecMongodbTarget.
func (in *CrawlerSpecMongodbTarget) DeepCopy() *CrawlerSpecMongodbTarget {
	if in == nil {
		return nil
	}
	out := new(CrawlerSpecMongodbTarget)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrawlerSpecRecrawlPolicy) DeepCopyInto(out *CrawlerSpecRecrawlPolicy) {
	*out = *in
	if in.RecrawlBehavior != nil {
		in, out := &in.RecrawlBehavior, &out.RecrawlBehavior
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrawlerSpecRecrawlPolicy.
func (in *CrawlerSpecRecrawlPolicy) DeepCopy() *CrawlerSpecRecrawlPolicy {
	if in == nil {
		return nil
	}
	out := new(CrawlerSpecRecrawlPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrawlerSpecS3Target) DeepCopyInto(out *CrawlerSpecS3Target) {
	*out = *in
	if in.ConnectionName != nil {
		in, out := &in.ConnectionName, &out.ConnectionName
		*out = new(string)
		**out = **in
	}
	if in.Exclusions != nil {
		in, out := &in.Exclusions, &out.Exclusions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrawlerSpecS3Target.
func (in *CrawlerSpecS3Target) DeepCopy() *CrawlerSpecS3Target {
	if in == nil {
		return nil
	}
	out := new(CrawlerSpecS3Target)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrawlerSpecSchemaChangePolicy) DeepCopyInto(out *CrawlerSpecSchemaChangePolicy) {
	*out = *in
	if in.DeleteBehavior != nil {
		in, out := &in.DeleteBehavior, &out.DeleteBehavior
		*out = new(string)
		**out = **in
	}
	if in.UpdateBehavior != nil {
		in, out := &in.UpdateBehavior, &out.UpdateBehavior
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrawlerSpecSchemaChangePolicy.
func (in *CrawlerSpecSchemaChangePolicy) DeepCopy() *CrawlerSpecSchemaChangePolicy {
	if in == nil {
		return nil
	}
	out := new(CrawlerSpecSchemaChangePolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrawlerStatus) DeepCopyInto(out *CrawlerStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrawlerStatus.
func (in *CrawlerStatus) DeepCopy() *CrawlerStatus {
	if in == nil {
		return nil
	}
	out := new(CrawlerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataCatalogEncryptionSettings) DeepCopyInto(out *DataCatalogEncryptionSettings) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataCatalogEncryptionSettings.
func (in *DataCatalogEncryptionSettings) DeepCopy() *DataCatalogEncryptionSettings {
	if in == nil {
		return nil
	}
	out := new(DataCatalogEncryptionSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataCatalogEncryptionSettings) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataCatalogEncryptionSettingsList) DeepCopyInto(out *DataCatalogEncryptionSettingsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataCatalogEncryptionSettings, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataCatalogEncryptionSettingsList.
func (in *DataCatalogEncryptionSettingsList) DeepCopy() *DataCatalogEncryptionSettingsList {
	if in == nil {
		return nil
	}
	out := new(DataCatalogEncryptionSettingsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataCatalogEncryptionSettingsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataCatalogEncryptionSettingsSpec) DeepCopyInto(out *DataCatalogEncryptionSettingsSpec) {
	*out = *in
	in.DataCatalogEncryptionSettingsSpec2.DeepCopyInto(&out.DataCatalogEncryptionSettingsSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataCatalogEncryptionSettingsSpec.
func (in *DataCatalogEncryptionSettingsSpec) DeepCopy() *DataCatalogEncryptionSettingsSpec {
	if in == nil {
		return nil
	}
	out := new(DataCatalogEncryptionSettingsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataCatalogEncryptionSettingsSpec2) DeepCopyInto(out *DataCatalogEncryptionSettingsSpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.CatalogID != nil {
		in, out := &in.CatalogID, &out.CatalogID
		*out = new(string)
		**out = **in
	}
	if in.DataCatalogEncryptionSettings != nil {
		in, out := &in.DataCatalogEncryptionSettings, &out.DataCatalogEncryptionSettings
		*out = new(DataCatalogEncryptionSettingsSpecDataCatalogEncryptionSettings)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataCatalogEncryptionSettingsSpec2.
func (in *DataCatalogEncryptionSettingsSpec2) DeepCopy() *DataCatalogEncryptionSettingsSpec2 {
	if in == nil {
		return nil
	}
	out := new(DataCatalogEncryptionSettingsSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataCatalogEncryptionSettingsSpecDataCatalogEncryptionSettings) DeepCopyInto(out *DataCatalogEncryptionSettingsSpecDataCatalogEncryptionSettings) {
	*out = *in
	if in.ConnectionPasswordEncryption != nil {
		in, out := &in.ConnectionPasswordEncryption, &out.ConnectionPasswordEncryption
		*out = new(DataCatalogEncryptionSettingsSpecDataCatalogEncryptionSettingsConnectionPasswordEncryption)
		(*in).DeepCopyInto(*out)
	}
	if in.EncryptionAtRest != nil {
		in, out := &in.EncryptionAtRest, &out.EncryptionAtRest
		*out = new(DataCatalogEncryptionSettingsSpecDataCatalogEncryptionSettingsEncryptionAtRest)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataCatalogEncryptionSettingsSpecDataCatalogEncryptionSettings.
func (in *DataCatalogEncryptionSettingsSpecDataCatalogEncryptionSettings) DeepCopy() *DataCatalogEncryptionSettingsSpecDataCatalogEncryptionSettings {
	if in == nil {
		return nil
	}
	out := new(DataCatalogEncryptionSettingsSpecDataCatalogEncryptionSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataCatalogEncryptionSettingsSpecDataCatalogEncryptionSettingsConnectionPasswordEncryption) DeepCopyInto(out *DataCatalogEncryptionSettingsSpecDataCatalogEncryptionSettingsConnectionPasswordEncryption) {
	*out = *in
	if in.AwsKmsKeyID != nil {
		in, out := &in.AwsKmsKeyID, &out.AwsKmsKeyID
		*out = new(string)
		**out = **in
	}
	if in.ReturnConnectionPasswordEncrypted != nil {
		in, out := &in.ReturnConnectionPasswordEncrypted, &out.ReturnConnectionPasswordEncrypted
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataCatalogEncryptionSettingsSpecDataCatalogEncryptionSettingsConnectionPasswordEncryption.
func (in *DataCatalogEncryptionSettingsSpecDataCatalogEncryptionSettingsConnectionPasswordEncryption) DeepCopy() *DataCatalogEncryptionSettingsSpecDataCatalogEncryptionSettingsConnectionPasswordEncryption {
	if in == nil {
		return nil
	}
	out := new(DataCatalogEncryptionSettingsSpecDataCatalogEncryptionSettingsConnectionPasswordEncryption)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataCatalogEncryptionSettingsSpecDataCatalogEncryptionSettingsEncryptionAtRest) DeepCopyInto(out *DataCatalogEncryptionSettingsSpecDataCatalogEncryptionSettingsEncryptionAtRest) {
	*out = *in
	if in.CatalogEncryptionMode != nil {
		in, out := &in.CatalogEncryptionMode, &out.CatalogEncryptionMode
		*out = new(string)
		**out = **in
	}
	if in.SseAwsKmsKeyID != nil {
		in, out := &in.SseAwsKmsKeyID, &out.SseAwsKmsKeyID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataCatalogEncryptionSettingsSpecDataCatalogEncryptionSettingsEncryptionAtRest.
func (in *DataCatalogEncryptionSettingsSpecDataCatalogEncryptionSettingsEncryptionAtRest) DeepCopy() *DataCatalogEncryptionSettingsSpecDataCatalogEncryptionSettingsEncryptionAtRest {
	if in == nil {
		return nil
	}
	out := new(DataCatalogEncryptionSettingsSpecDataCatalogEncryptionSettingsEncryptionAtRest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataCatalogEncryptionSettingsStatus) DeepCopyInto(out *DataCatalogEncryptionSettingsStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataCatalogEncryptionSettingsStatus.
func (in *DataCatalogEncryptionSettingsStatus) DeepCopy() *DataCatalogEncryptionSettingsStatus {
	if in == nil {
		return nil
	}
	out := new(DataCatalogEncryptionSettingsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DevEndpoint) DeepCopyInto(out *DevEndpoint) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DevEndpoint.
func (in *DevEndpoint) DeepCopy() *DevEndpoint {
	if in == nil {
		return nil
	}
	out := new(DevEndpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DevEndpoint) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DevEndpointList) DeepCopyInto(out *DevEndpointList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DevEndpoint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DevEndpointList.
func (in *DevEndpointList) DeepCopy() *DevEndpointList {
	if in == nil {
		return nil
	}
	out := new(DevEndpointList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DevEndpointList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DevEndpointSpec) DeepCopyInto(out *DevEndpointSpec) {
	*out = *in
	in.DevEndpointSpec2.DeepCopyInto(&out.DevEndpointSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DevEndpointSpec.
func (in *DevEndpointSpec) DeepCopy() *DevEndpointSpec {
	if in == nil {
		return nil
	}
	out := new(DevEndpointSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DevEndpointSpec2) DeepCopyInto(out *DevEndpointSpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.Arguments != nil {
		in, out := &in.Arguments, &out.Arguments
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.ExtraJarsS3Path != nil {
		in, out := &in.ExtraJarsS3Path, &out.ExtraJarsS3Path
		*out = new(string)
		**out = **in
	}
	if in.ExtraPythonLibsS3Path != nil {
		in, out := &in.ExtraPythonLibsS3Path, &out.ExtraPythonLibsS3Path
		*out = new(string)
		**out = **in
	}
	if in.FailureReason != nil {
		in, out := &in.FailureReason, &out.FailureReason
		*out = new(string)
		**out = **in
	}
	if in.GlueVersion != nil {
		in, out := &in.GlueVersion, &out.GlueVersion
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NumberOfNodes != nil {
		in, out := &in.NumberOfNodes, &out.NumberOfNodes
		*out = new(int64)
		**out = **in
	}
	if in.NumberOfWorkers != nil {
		in, out := &in.NumberOfWorkers, &out.NumberOfWorkers
		*out = new(int64)
		**out = **in
	}
	if in.PrivateAddress != nil {
		in, out := &in.PrivateAddress, &out.PrivateAddress
		*out = new(string)
		**out = **in
	}
	if in.PublicAddress != nil {
		in, out := &in.PublicAddress, &out.PublicAddress
		*out = new(string)
		**out = **in
	}
	if in.PublicKey != nil {
		in, out := &in.PublicKey, &out.PublicKey
		*out = new(string)
		**out = **in
	}
	if in.PublicKeys != nil {
		in, out := &in.PublicKeys, &out.PublicKeys
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.SecurityConfiguration != nil {
		in, out := &in.SecurityConfiguration, &out.SecurityConfiguration
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupIDS != nil {
		in, out := &in.SecurityGroupIDS, &out.SecurityGroupIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.VpcID != nil {
		in, out := &in.VpcID, &out.VpcID
		*out = new(string)
		**out = **in
	}
	if in.WorkerType != nil {
		in, out := &in.WorkerType, &out.WorkerType
		*out = new(string)
		**out = **in
	}
	if in.YarnEndpointAddress != nil {
		in, out := &in.YarnEndpointAddress, &out.YarnEndpointAddress
		*out = new(string)
		**out = **in
	}
	if in.ZeppelinRemoteSparkInterpreterPort != nil {
		in, out := &in.ZeppelinRemoteSparkInterpreterPort, &out.ZeppelinRemoteSparkInterpreterPort
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DevEndpointSpec2.
func (in *DevEndpointSpec2) DeepCopy() *DevEndpointSpec2 {
	if in == nil {
		return nil
	}
	out := new(DevEndpointSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DevEndpointStatus) DeepCopyInto(out *DevEndpointStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DevEndpointStatus.
func (in *DevEndpointStatus) DeepCopy() *DevEndpointStatus {
	if in == nil {
		return nil
	}
	out := new(DevEndpointStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Job) DeepCopyInto(out *Job) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Job.
func (in *Job) DeepCopy() *Job {
	if in == nil {
		return nil
	}
	out := new(Job)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Job) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobList) DeepCopyInto(out *JobList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Job, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobList.
func (in *JobList) DeepCopy() *JobList {
	if in == nil {
		return nil
	}
	out := new(JobList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *JobList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobSpec) DeepCopyInto(out *JobSpec) {
	*out = *in
	in.JobSpec2.DeepCopyInto(&out.JobSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobSpec.
func (in *JobSpec) DeepCopy() *JobSpec {
	if in == nil {
		return nil
	}
	out := new(JobSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobSpec2) DeepCopyInto(out *JobSpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Command != nil {
		in, out := &in.Command, &out.Command
		*out = new(JobSpecCommand)
		(*in).DeepCopyInto(*out)
	}
	if in.Connections != nil {
		in, out := &in.Connections, &out.Connections
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DefaultArguments != nil {
		in, out := &in.DefaultArguments, &out.DefaultArguments
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ExecutionProperty != nil {
		in, out := &in.ExecutionProperty, &out.ExecutionProperty
		*out = new(JobSpecExecutionProperty)
		(*in).DeepCopyInto(*out)
	}
	if in.GlueVersion != nil {
		in, out := &in.GlueVersion, &out.GlueVersion
		*out = new(string)
		**out = **in
	}
	if in.MaxCapacity != nil {
		in, out := &in.MaxCapacity, &out.MaxCapacity
		*out = new(float64)
		**out = **in
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(int64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NonOverridableArguments != nil {
		in, out := &in.NonOverridableArguments, &out.NonOverridableArguments
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.NotificationProperty != nil {
		in, out := &in.NotificationProperty, &out.NotificationProperty
		*out = new(JobSpecNotificationProperty)
		(*in).DeepCopyInto(*out)
	}
	if in.NumberOfWorkers != nil {
		in, out := &in.NumberOfWorkers, &out.NumberOfWorkers
		*out = new(int64)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.SecurityConfiguration != nil {
		in, out := &in.SecurityConfiguration, &out.SecurityConfiguration
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(int64)
		**out = **in
	}
	if in.WorkerType != nil {
		in, out := &in.WorkerType, &out.WorkerType
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobSpec2.
func (in *JobSpec2) DeepCopy() *JobSpec2 {
	if in == nil {
		return nil
	}
	out := new(JobSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobSpecCommand) DeepCopyInto(out *JobSpecCommand) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PythonVersion != nil {
		in, out := &in.PythonVersion, &out.PythonVersion
		*out = new(string)
		**out = **in
	}
	if in.ScriptLocation != nil {
		in, out := &in.ScriptLocation, &out.ScriptLocation
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobSpecCommand.
func (in *JobSpecCommand) DeepCopy() *JobSpecCommand {
	if in == nil {
		return nil
	}
	out := new(JobSpecCommand)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobSpecExecutionProperty) DeepCopyInto(out *JobSpecExecutionProperty) {
	*out = *in
	if in.MaxConcurrentRuns != nil {
		in, out := &in.MaxConcurrentRuns, &out.MaxConcurrentRuns
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobSpecExecutionProperty.
func (in *JobSpecExecutionProperty) DeepCopy() *JobSpecExecutionProperty {
	if in == nil {
		return nil
	}
	out := new(JobSpecExecutionProperty)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobSpecNotificationProperty) DeepCopyInto(out *JobSpecNotificationProperty) {
	*out = *in
	if in.NotifyDelayAfter != nil {
		in, out := &in.NotifyDelayAfter, &out.NotifyDelayAfter
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobSpecNotificationProperty.
func (in *JobSpecNotificationProperty) DeepCopy() *JobSpecNotificationProperty {
	if in == nil {
		return nil
	}
	out := new(JobSpecNotificationProperty)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobStatus) DeepCopyInto(out *JobStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobStatus.
func (in *JobStatus) DeepCopy() *JobStatus {
	if in == nil {
		return nil
	}
	out := new(JobStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MlTransform) DeepCopyInto(out *MlTransform) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MlTransform.
func (in *MlTransform) DeepCopy() *MlTransform {
	if in == nil {
		return nil
	}
	out := new(MlTransform)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MlTransform) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MlTransformList) DeepCopyInto(out *MlTransformList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MlTransform, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MlTransformList.
func (in *MlTransformList) DeepCopy() *MlTransformList {
	if in == nil {
		return nil
	}
	out := new(MlTransformList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MlTransformList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MlTransformSpec) DeepCopyInto(out *MlTransformSpec) {
	*out = *in
	in.MlTransformSpec2.DeepCopyInto(&out.MlTransformSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MlTransformSpec.
func (in *MlTransformSpec) DeepCopy() *MlTransformSpec {
	if in == nil {
		return nil
	}
	out := new(MlTransformSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MlTransformSpec2) DeepCopyInto(out *MlTransformSpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.GlueVersion != nil {
		in, out := &in.GlueVersion, &out.GlueVersion
		*out = new(string)
		**out = **in
	}
	if in.InputRecordTables != nil {
		in, out := &in.InputRecordTables, &out.InputRecordTables
		*out = make([]MlTransformSpecInputRecordTables, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LabelCount != nil {
		in, out := &in.LabelCount, &out.LabelCount
		*out = new(int64)
		**out = **in
	}
	if in.MaxCapacity != nil {
		in, out := &in.MaxCapacity, &out.MaxCapacity
		*out = new(float64)
		**out = **in
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(int64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NumberOfWorkers != nil {
		in, out := &in.NumberOfWorkers, &out.NumberOfWorkers
		*out = new(int64)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(MlTransformSpecParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = make([]MlTransformSpecSchema, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(int64)
		**out = **in
	}
	if in.WorkerType != nil {
		in, out := &in.WorkerType, &out.WorkerType
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MlTransformSpec2.
func (in *MlTransformSpec2) DeepCopy() *MlTransformSpec2 {
	if in == nil {
		return nil
	}
	out := new(MlTransformSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MlTransformSpecInputRecordTables) DeepCopyInto(out *MlTransformSpecInputRecordTables) {
	*out = *in
	if in.CatalogID != nil {
		in, out := &in.CatalogID, &out.CatalogID
		*out = new(string)
		**out = **in
	}
	if in.ConnectionName != nil {
		in, out := &in.ConnectionName, &out.ConnectionName
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MlTransformSpecInputRecordTables.
func (in *MlTransformSpecInputRecordTables) DeepCopy() *MlTransformSpecInputRecordTables {
	if in == nil {
		return nil
	}
	out := new(MlTransformSpecInputRecordTables)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MlTransformSpecParameters) DeepCopyInto(out *MlTransformSpecParameters) {
	*out = *in
	if in.FindMatchesParameters != nil {
		in, out := &in.FindMatchesParameters, &out.FindMatchesParameters
		*out = new(MlTransformSpecParametersFindMatchesParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.TransformType != nil {
		in, out := &in.TransformType, &out.TransformType
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MlTransformSpecParameters.
func (in *MlTransformSpecParameters) DeepCopy() *MlTransformSpecParameters {
	if in == nil {
		return nil
	}
	out := new(MlTransformSpecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MlTransformSpecParametersFindMatchesParameters) DeepCopyInto(out *MlTransformSpecParametersFindMatchesParameters) {
	*out = *in
	if in.AccuracyCostTradeOff != nil {
		in, out := &in.AccuracyCostTradeOff, &out.AccuracyCostTradeOff
		*out = new(float64)
		**out = **in
	}
	if in.EnforceProvidedLabels != nil {
		in, out := &in.EnforceProvidedLabels, &out.EnforceProvidedLabels
		*out = new(bool)
		**out = **in
	}
	if in.PrecisionRecallTradeOff != nil {
		in, out := &in.PrecisionRecallTradeOff, &out.PrecisionRecallTradeOff
		*out = new(float64)
		**out = **in
	}
	if in.PrimaryKeyColumnName != nil {
		in, out := &in.PrimaryKeyColumnName, &out.PrimaryKeyColumnName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MlTransformSpecParametersFindMatchesParameters.
func (in *MlTransformSpecParametersFindMatchesParameters) DeepCopy() *MlTransformSpecParametersFindMatchesParameters {
	if in == nil {
		return nil
	}
	out := new(MlTransformSpecParametersFindMatchesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MlTransformSpecSchema) DeepCopyInto(out *MlTransformSpecSchema) {
	*out = *in
	if in.DataType != nil {
		in, out := &in.DataType, &out.DataType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MlTransformSpecSchema.
func (in *MlTransformSpecSchema) DeepCopy() *MlTransformSpecSchema {
	if in == nil {
		return nil
	}
	out := new(MlTransformSpecSchema)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MlTransformStatus) DeepCopyInto(out *MlTransformStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MlTransformStatus.
func (in *MlTransformStatus) DeepCopy() *MlTransformStatus {
	if in == nil {
		return nil
	}
	out := new(MlTransformStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Partition) DeepCopyInto(out *Partition) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Partition.
func (in *Partition) DeepCopy() *Partition {
	if in == nil {
		return nil
	}
	out := new(Partition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Partition) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitionList) DeepCopyInto(out *PartitionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Partition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitionList.
func (in *PartitionList) DeepCopy() *PartitionList {
	if in == nil {
		return nil
	}
	out := new(PartitionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PartitionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitionSpec) DeepCopyInto(out *PartitionSpec) {
	*out = *in
	in.PartitionSpec2.DeepCopyInto(&out.PartitionSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitionSpec.
func (in *PartitionSpec) DeepCopy() *PartitionSpec {
	if in == nil {
		return nil
	}
	out := new(PartitionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitionSpec2) DeepCopyInto(out *PartitionSpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.CatalogID != nil {
		in, out := &in.CatalogID, &out.CatalogID
		*out = new(string)
		**out = **in
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.LastAccessedTime != nil {
		in, out := &in.LastAccessedTime, &out.LastAccessedTime
		*out = new(string)
		**out = **in
	}
	if in.LastAnalyzedTime != nil {
		in, out := &in.LastAnalyzedTime, &out.LastAnalyzedTime
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.PartitionValues != nil {
		in, out := &in.PartitionValues, &out.PartitionValues
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.StorageDescriptor != nil {
		in, out := &in.StorageDescriptor, &out.StorageDescriptor
		*out = new(PartitionSpecStorageDescriptor)
		(*in).DeepCopyInto(*out)
	}
	if in.TableName != nil {
		in, out := &in.TableName, &out.TableName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitionSpec2.
func (in *PartitionSpec2) DeepCopy() *PartitionSpec2 {
	if in == nil {
		return nil
	}
	out := new(PartitionSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitionSpecStorageDescriptor) DeepCopyInto(out *PartitionSpecStorageDescriptor) {
	*out = *in
	if in.BucketColumns != nil {
		in, out := &in.BucketColumns, &out.BucketColumns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]PartitionSpecStorageDescriptorColumns, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Compressed != nil {
		in, out := &in.Compressed, &out.Compressed
		*out = new(bool)
		**out = **in
	}
	if in.InputFormat != nil {
		in, out := &in.InputFormat, &out.InputFormat
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.NumberOfBuckets != nil {
		in, out := &in.NumberOfBuckets, &out.NumberOfBuckets
		*out = new(int64)
		**out = **in
	}
	if in.OutputFormat != nil {
		in, out := &in.OutputFormat, &out.OutputFormat
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.SerDeInfo != nil {
		in, out := &in.SerDeInfo, &out.SerDeInfo
		*out = new(PartitionSpecStorageDescriptorSerDeInfo)
		(*in).DeepCopyInto(*out)
	}
	if in.SkewedInfo != nil {
		in, out := &in.SkewedInfo, &out.SkewedInfo
		*out = new(PartitionSpecStorageDescriptorSkewedInfo)
		(*in).DeepCopyInto(*out)
	}
	if in.SortColumns != nil {
		in, out := &in.SortColumns, &out.SortColumns
		*out = make([]PartitionSpecStorageDescriptorSortColumns, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StoredAsSubDirectories != nil {
		in, out := &in.StoredAsSubDirectories, &out.StoredAsSubDirectories
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitionSpecStorageDescriptor.
func (in *PartitionSpecStorageDescriptor) DeepCopy() *PartitionSpecStorageDescriptor {
	if in == nil {
		return nil
	}
	out := new(PartitionSpecStorageDescriptor)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitionSpecStorageDescriptorColumns) DeepCopyInto(out *PartitionSpecStorageDescriptorColumns) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitionSpecStorageDescriptorColumns.
func (in *PartitionSpecStorageDescriptorColumns) DeepCopy() *PartitionSpecStorageDescriptorColumns {
	if in == nil {
		return nil
	}
	out := new(PartitionSpecStorageDescriptorColumns)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitionSpecStorageDescriptorSerDeInfo) DeepCopyInto(out *PartitionSpecStorageDescriptorSerDeInfo) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.SerializationLibrary != nil {
		in, out := &in.SerializationLibrary, &out.SerializationLibrary
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitionSpecStorageDescriptorSerDeInfo.
func (in *PartitionSpecStorageDescriptorSerDeInfo) DeepCopy() *PartitionSpecStorageDescriptorSerDeInfo {
	if in == nil {
		return nil
	}
	out := new(PartitionSpecStorageDescriptorSerDeInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitionSpecStorageDescriptorSkewedInfo) DeepCopyInto(out *PartitionSpecStorageDescriptorSkewedInfo) {
	*out = *in
	if in.SkewedColumnNames != nil {
		in, out := &in.SkewedColumnNames, &out.SkewedColumnNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SkewedColumnValueLocationMaps != nil {
		in, out := &in.SkewedColumnValueLocationMaps, &out.SkewedColumnValueLocationMaps
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.SkewedColumnValues != nil {
		in, out := &in.SkewedColumnValues, &out.SkewedColumnValues
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitionSpecStorageDescriptorSkewedInfo.
func (in *PartitionSpecStorageDescriptorSkewedInfo) DeepCopy() *PartitionSpecStorageDescriptorSkewedInfo {
	if in == nil {
		return nil
	}
	out := new(PartitionSpecStorageDescriptorSkewedInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitionSpecStorageDescriptorSortColumns) DeepCopyInto(out *PartitionSpecStorageDescriptorSortColumns) {
	*out = *in
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = new(string)
		**out = **in
	}
	if in.SortOrder != nil {
		in, out := &in.SortOrder, &out.SortOrder
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitionSpecStorageDescriptorSortColumns.
func (in *PartitionSpecStorageDescriptorSortColumns) DeepCopy() *PartitionSpecStorageDescriptorSortColumns {
	if in == nil {
		return nil
	}
	out := new(PartitionSpecStorageDescriptorSortColumns)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PartitionStatus) DeepCopyInto(out *PartitionStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PartitionStatus.
func (in *PartitionStatus) DeepCopy() *PartitionStatus {
	if in == nil {
		return nil
	}
	out := new(PartitionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Registry) DeepCopyInto(out *Registry) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Registry.
func (in *Registry) DeepCopy() *Registry {
	if in == nil {
		return nil
	}
	out := new(Registry)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Registry) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryList) DeepCopyInto(out *RegistryList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Registry, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryList.
func (in *RegistryList) DeepCopy() *RegistryList {
	if in == nil {
		return nil
	}
	out := new(RegistryList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegistryList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistrySpec) DeepCopyInto(out *RegistrySpec) {
	*out = *in
	in.RegistrySpec2.DeepCopyInto(&out.RegistrySpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistrySpec.
func (in *RegistrySpec) DeepCopy() *RegistrySpec {
	if in == nil {
		return nil
	}
	out := new(RegistrySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistrySpec2) DeepCopyInto(out *RegistrySpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.RegistryName != nil {
		in, out := &in.RegistryName, &out.RegistryName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistrySpec2.
func (in *RegistrySpec2) DeepCopy() *RegistrySpec2 {
	if in == nil {
		return nil
	}
	out := new(RegistrySpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegistryStatus) DeepCopyInto(out *RegistryStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegistryStatus.
func (in *RegistryStatus) DeepCopy() *RegistryStatus {
	if in == nil {
		return nil
	}
	out := new(RegistryStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourcePolicy) DeepCopyInto(out *ResourcePolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourcePolicy.
func (in *ResourcePolicy) DeepCopy() *ResourcePolicy {
	if in == nil {
		return nil
	}
	out := new(ResourcePolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ResourcePolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourcePolicyList) DeepCopyInto(out *ResourcePolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ResourcePolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourcePolicyList.
func (in *ResourcePolicyList) DeepCopy() *ResourcePolicyList {
	if in == nil {
		return nil
	}
	out := new(ResourcePolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ResourcePolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourcePolicySpec) DeepCopyInto(out *ResourcePolicySpec) {
	*out = *in
	in.ResourcePolicySpec2.DeepCopyInto(&out.ResourcePolicySpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourcePolicySpec.
func (in *ResourcePolicySpec) DeepCopy() *ResourcePolicySpec {
	if in == nil {
		return nil
	}
	out := new(ResourcePolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourcePolicySpec2) DeepCopyInto(out *ResourcePolicySpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourcePolicySpec2.
func (in *ResourcePolicySpec2) DeepCopy() *ResourcePolicySpec2 {
	if in == nil {
		return nil
	}
	out := new(ResourcePolicySpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourcePolicyStatus) DeepCopyInto(out *ResourcePolicyStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourcePolicyStatus.
func (in *ResourcePolicyStatus) DeepCopy() *ResourcePolicyStatus {
	if in == nil {
		return nil
	}
	out := new(ResourcePolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Schema) DeepCopyInto(out *Schema) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Schema.
func (in *Schema) DeepCopy() *Schema {
	if in == nil {
		return nil
	}
	out := new(Schema)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Schema) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaList) DeepCopyInto(out *SchemaList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Schema, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaList.
func (in *SchemaList) DeepCopy() *SchemaList {
	if in == nil {
		return nil
	}
	out := new(SchemaList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SchemaList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaSpec) DeepCopyInto(out *SchemaSpec) {
	*out = *in
	in.SchemaSpec2.DeepCopyInto(&out.SchemaSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaSpec.
func (in *SchemaSpec) DeepCopy() *SchemaSpec {
	if in == nil {
		return nil
	}
	out := new(SchemaSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaSpec2) DeepCopyInto(out *SchemaSpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Compatibility != nil {
		in, out := &in.Compatibility, &out.Compatibility
		*out = new(string)
		**out = **in
	}
	if in.DataFormat != nil {
		in, out := &in.DataFormat, &out.DataFormat
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.LatestSchemaVersion != nil {
		in, out := &in.LatestSchemaVersion, &out.LatestSchemaVersion
		*out = new(int64)
		**out = **in
	}
	if in.NextSchemaVersion != nil {
		in, out := &in.NextSchemaVersion, &out.NextSchemaVersion
		*out = new(int64)
		**out = **in
	}
	if in.RegistryArn != nil {
		in, out := &in.RegistryArn, &out.RegistryArn
		*out = new(string)
		**out = **in
	}
	if in.RegistryName != nil {
		in, out := &in.RegistryName, &out.RegistryName
		*out = new(string)
		**out = **in
	}
	if in.SchemaCheckpoint != nil {
		in, out := &in.SchemaCheckpoint, &out.SchemaCheckpoint
		*out = new(int64)
		**out = **in
	}
	if in.SchemaDefinition != nil {
		in, out := &in.SchemaDefinition, &out.SchemaDefinition
		*out = new(string)
		**out = **in
	}
	if in.SchemaName != nil {
		in, out := &in.SchemaName, &out.SchemaName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaSpec2.
func (in *SchemaSpec2) DeepCopy() *SchemaSpec2 {
	if in == nil {
		return nil
	}
	out := new(SchemaSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchemaStatus) DeepCopyInto(out *SchemaStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchemaStatus.
func (in *SchemaStatus) DeepCopy() *SchemaStatus {
	if in == nil {
		return nil
	}
	out := new(SchemaStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityConfiguration) DeepCopyInto(out *SecurityConfiguration) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityConfiguration.
func (in *SecurityConfiguration) DeepCopy() *SecurityConfiguration {
	if in == nil {
		return nil
	}
	out := new(SecurityConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecurityConfiguration) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityConfigurationList) DeepCopyInto(out *SecurityConfigurationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SecurityConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityConfigurationList.
func (in *SecurityConfigurationList) DeepCopy() *SecurityConfigurationList {
	if in == nil {
		return nil
	}
	out := new(SecurityConfigurationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecurityConfigurationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityConfigurationSpec) DeepCopyInto(out *SecurityConfigurationSpec) {
	*out = *in
	in.SecurityConfigurationSpec2.DeepCopyInto(&out.SecurityConfigurationSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityConfigurationSpec.
func (in *SecurityConfigurationSpec) DeepCopy() *SecurityConfigurationSpec {
	if in == nil {
		return nil
	}
	out := new(SecurityConfigurationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityConfigurationSpec2) DeepCopyInto(out *SecurityConfigurationSpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.EncryptionConfiguration != nil {
		in, out := &in.EncryptionConfiguration, &out.EncryptionConfiguration
		*out = new(SecurityConfigurationSpecEncryptionConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityConfigurationSpec2.
func (in *SecurityConfigurationSpec2) DeepCopy() *SecurityConfigurationSpec2 {
	if in == nil {
		return nil
	}
	out := new(SecurityConfigurationSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityConfigurationSpecEncryptionConfiguration) DeepCopyInto(out *SecurityConfigurationSpecEncryptionConfiguration) {
	*out = *in
	if in.CloudwatchEncryption != nil {
		in, out := &in.CloudwatchEncryption, &out.CloudwatchEncryption
		*out = new(SecurityConfigurationSpecEncryptionConfigurationCloudwatchEncryption)
		(*in).DeepCopyInto(*out)
	}
	if in.JobBookmarksEncryption != nil {
		in, out := &in.JobBookmarksEncryption, &out.JobBookmarksEncryption
		*out = new(SecurityConfigurationSpecEncryptionConfigurationJobBookmarksEncryption)
		(*in).DeepCopyInto(*out)
	}
	if in.S3Encryption != nil {
		in, out := &in.S3Encryption, &out.S3Encryption
		*out = new(SecurityConfigurationSpecEncryptionConfigurationS3Encryption)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityConfigurationSpecEncryptionConfiguration.
func (in *SecurityConfigurationSpecEncryptionConfiguration) DeepCopy() *SecurityConfigurationSpecEncryptionConfiguration {
	if in == nil {
		return nil
	}
	out := new(SecurityConfigurationSpecEncryptionConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityConfigurationSpecEncryptionConfigurationCloudwatchEncryption) DeepCopyInto(out *SecurityConfigurationSpecEncryptionConfigurationCloudwatchEncryption) {
	*out = *in
	if in.CloudwatchEncryptionMode != nil {
		in, out := &in.CloudwatchEncryptionMode, &out.CloudwatchEncryptionMode
		*out = new(string)
		**out = **in
	}
	if in.KmsKeyArn != nil {
		in, out := &in.KmsKeyArn, &out.KmsKeyArn
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityConfigurationSpecEncryptionConfigurationCloudwatchEncryption.
func (in *SecurityConfigurationSpecEncryptionConfigurationCloudwatchEncryption) DeepCopy() *SecurityConfigurationSpecEncryptionConfigurationCloudwatchEncryption {
	if in == nil {
		return nil
	}
	out := new(SecurityConfigurationSpecEncryptionConfigurationCloudwatchEncryption)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityConfigurationSpecEncryptionConfigurationJobBookmarksEncryption) DeepCopyInto(out *SecurityConfigurationSpecEncryptionConfigurationJobBookmarksEncryption) {
	*out = *in
	if in.JobBookmarksEncryptionMode != nil {
		in, out := &in.JobBookmarksEncryptionMode, &out.JobBookmarksEncryptionMode
		*out = new(string)
		**out = **in
	}
	if in.KmsKeyArn != nil {
		in, out := &in.KmsKeyArn, &out.KmsKeyArn
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityConfigurationSpecEncryptionConfigurationJobBookmarksEncryption.
func (in *SecurityConfigurationSpecEncryptionConfigurationJobBookmarksEncryption) DeepCopy() *SecurityConfigurationSpecEncryptionConfigurationJobBookmarksEncryption {
	if in == nil {
		return nil
	}
	out := new(SecurityConfigurationSpecEncryptionConfigurationJobBookmarksEncryption)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityConfigurationSpecEncryptionConfigurationS3Encryption) DeepCopyInto(out *SecurityConfigurationSpecEncryptionConfigurationS3Encryption) {
	*out = *in
	if in.KmsKeyArn != nil {
		in, out := &in.KmsKeyArn, &out.KmsKeyArn
		*out = new(string)
		**out = **in
	}
	if in.S3EncryptionMode != nil {
		in, out := &in.S3EncryptionMode, &out.S3EncryptionMode
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityConfigurationSpecEncryptionConfigurationS3Encryption.
func (in *SecurityConfigurationSpecEncryptionConfigurationS3Encryption) DeepCopy() *SecurityConfigurationSpecEncryptionConfigurationS3Encryption {
	if in == nil {
		return nil
	}
	out := new(SecurityConfigurationSpecEncryptionConfigurationS3Encryption)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityConfigurationStatus) DeepCopyInto(out *SecurityConfigurationStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityConfigurationStatus.
func (in *SecurityConfigurationStatus) DeepCopy() *SecurityConfigurationStatus {
	if in == nil {
		return nil
	}
	out := new(SecurityConfigurationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Trigger) DeepCopyInto(out *Trigger) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Trigger.
func (in *Trigger) DeepCopy() *Trigger {
	if in == nil {
		return nil
	}
	out := new(Trigger)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Trigger) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerList) DeepCopyInto(out *TriggerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Trigger, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerList.
func (in *TriggerList) DeepCopy() *TriggerList {
	if in == nil {
		return nil
	}
	out := new(TriggerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TriggerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerSpec) DeepCopyInto(out *TriggerSpec) {
	*out = *in
	in.TriggerSpec2.DeepCopyInto(&out.TriggerSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerSpec.
func (in *TriggerSpec) DeepCopy() *TriggerSpec {
	if in == nil {
		return nil
	}
	out := new(TriggerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerSpec2) DeepCopyInto(out *TriggerSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.Actions != nil {
		in, out := &in.Actions, &out.Actions
		*out = make([]TriggerSpecActions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Predicate != nil {
		in, out := &in.Predicate, &out.Predicate
		*out = new(TriggerSpecPredicate)
		(*in).DeepCopyInto(*out)
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.WorkflowName != nil {
		in, out := &in.WorkflowName, &out.WorkflowName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerSpec2.
func (in *TriggerSpec2) DeepCopy() *TriggerSpec2 {
	if in == nil {
		return nil
	}
	out := new(TriggerSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerSpecActions) DeepCopyInto(out *TriggerSpecActions) {
	*out = *in
	if in.Arguments != nil {
		in, out := &in.Arguments, &out.Arguments
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.CrawlerName != nil {
		in, out := &in.CrawlerName, &out.CrawlerName
		*out = new(string)
		**out = **in
	}
	if in.JobName != nil {
		in, out := &in.JobName, &out.JobName
		*out = new(string)
		**out = **in
	}
	if in.NotificationProperty != nil {
		in, out := &in.NotificationProperty, &out.NotificationProperty
		*out = new(TriggerSpecActionsNotificationProperty)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityConfiguration != nil {
		in, out := &in.SecurityConfiguration, &out.SecurityConfiguration
		*out = new(string)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerSpecActions.
func (in *TriggerSpecActions) DeepCopy() *TriggerSpecActions {
	if in == nil {
		return nil
	}
	out := new(TriggerSpecActions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerSpecActionsNotificationProperty) DeepCopyInto(out *TriggerSpecActionsNotificationProperty) {
	*out = *in
	if in.NotifyDelayAfter != nil {
		in, out := &in.NotifyDelayAfter, &out.NotifyDelayAfter
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerSpecActionsNotificationProperty.
func (in *TriggerSpecActionsNotificationProperty) DeepCopy() *TriggerSpecActionsNotificationProperty {
	if in == nil {
		return nil
	}
	out := new(TriggerSpecActionsNotificationProperty)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerSpecPredicate) DeepCopyInto(out *TriggerSpecPredicate) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]TriggerSpecPredicateConditions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Logical != nil {
		in, out := &in.Logical, &out.Logical
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerSpecPredicate.
func (in *TriggerSpecPredicate) DeepCopy() *TriggerSpecPredicate {
	if in == nil {
		return nil
	}
	out := new(TriggerSpecPredicate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerSpecPredicateConditions) DeepCopyInto(out *TriggerSpecPredicateConditions) {
	*out = *in
	if in.CrawlState != nil {
		in, out := &in.CrawlState, &out.CrawlState
		*out = new(string)
		**out = **in
	}
	if in.CrawlerName != nil {
		in, out := &in.CrawlerName, &out.CrawlerName
		*out = new(string)
		**out = **in
	}
	if in.JobName != nil {
		in, out := &in.JobName, &out.JobName
		*out = new(string)
		**out = **in
	}
	if in.LogicalOperator != nil {
		in, out := &in.LogicalOperator, &out.LogicalOperator
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerSpecPredicateConditions.
func (in *TriggerSpecPredicateConditions) DeepCopy() *TriggerSpecPredicateConditions {
	if in == nil {
		return nil
	}
	out := new(TriggerSpecPredicateConditions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TriggerStatus) DeepCopyInto(out *TriggerStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TriggerStatus.
func (in *TriggerStatus) DeepCopy() *TriggerStatus {
	if in == nil {
		return nil
	}
	out := new(TriggerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserDefinedFunction) DeepCopyInto(out *UserDefinedFunction) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserDefinedFunction.
func (in *UserDefinedFunction) DeepCopy() *UserDefinedFunction {
	if in == nil {
		return nil
	}
	out := new(UserDefinedFunction)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UserDefinedFunction) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserDefinedFunctionList) DeepCopyInto(out *UserDefinedFunctionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]UserDefinedFunction, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserDefinedFunctionList.
func (in *UserDefinedFunctionList) DeepCopy() *UserDefinedFunctionList {
	if in == nil {
		return nil
	}
	out := new(UserDefinedFunctionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UserDefinedFunctionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserDefinedFunctionSpec) DeepCopyInto(out *UserDefinedFunctionSpec) {
	*out = *in
	in.UserDefinedFunctionSpec2.DeepCopyInto(&out.UserDefinedFunctionSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserDefinedFunctionSpec.
func (in *UserDefinedFunctionSpec) DeepCopy() *UserDefinedFunctionSpec {
	if in == nil {
		return nil
	}
	out := new(UserDefinedFunctionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserDefinedFunctionSpec2) DeepCopyInto(out *UserDefinedFunctionSpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.CatalogID != nil {
		in, out := &in.CatalogID, &out.CatalogID
		*out = new(string)
		**out = **in
	}
	if in.ClassName != nil {
		in, out := &in.ClassName, &out.ClassName
		*out = new(string)
		**out = **in
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OwnerName != nil {
		in, out := &in.OwnerName, &out.OwnerName
		*out = new(string)
		**out = **in
	}
	if in.OwnerType != nil {
		in, out := &in.OwnerType, &out.OwnerType
		*out = new(string)
		**out = **in
	}
	if in.ResourceUris != nil {
		in, out := &in.ResourceUris, &out.ResourceUris
		*out = make([]UserDefinedFunctionSpecResourceUris, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserDefinedFunctionSpec2.
func (in *UserDefinedFunctionSpec2) DeepCopy() *UserDefinedFunctionSpec2 {
	if in == nil {
		return nil
	}
	out := new(UserDefinedFunctionSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserDefinedFunctionSpecResourceUris) DeepCopyInto(out *UserDefinedFunctionSpecResourceUris) {
	*out = *in
	if in.ResourceType != nil {
		in, out := &in.ResourceType, &out.ResourceType
		*out = new(string)
		**out = **in
	}
	if in.Uri != nil {
		in, out := &in.Uri, &out.Uri
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserDefinedFunctionSpecResourceUris.
func (in *UserDefinedFunctionSpecResourceUris) DeepCopy() *UserDefinedFunctionSpecResourceUris {
	if in == nil {
		return nil
	}
	out := new(UserDefinedFunctionSpecResourceUris)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserDefinedFunctionStatus) DeepCopyInto(out *UserDefinedFunctionStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserDefinedFunctionStatus.
func (in *UserDefinedFunctionStatus) DeepCopy() *UserDefinedFunctionStatus {
	if in == nil {
		return nil
	}
	out := new(UserDefinedFunctionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Workflow) DeepCopyInto(out *Workflow) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Workflow.
func (in *Workflow) DeepCopy() *Workflow {
	if in == nil {
		return nil
	}
	out := new(Workflow)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Workflow) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowList) DeepCopyInto(out *WorkflowList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Workflow, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowList.
func (in *WorkflowList) DeepCopy() *WorkflowList {
	if in == nil {
		return nil
	}
	out := new(WorkflowList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkflowList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowSpec) DeepCopyInto(out *WorkflowSpec) {
	*out = *in
	in.WorkflowSpec2.DeepCopyInto(&out.WorkflowSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowSpec.
func (in *WorkflowSpec) DeepCopy() *WorkflowSpec {
	if in == nil {
		return nil
	}
	out := new(WorkflowSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowSpec2) DeepCopyInto(out *WorkflowSpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.DefaultRunProperties != nil {
		in, out := &in.DefaultRunProperties, &out.DefaultRunProperties
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.MaxConcurrentRuns != nil {
		in, out := &in.MaxConcurrentRuns, &out.MaxConcurrentRuns
		*out = new(int64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowSpec2.
func (in *WorkflowSpec2) DeepCopy() *WorkflowSpec2 {
	if in == nil {
		return nil
	}
	out := new(WorkflowSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowStatus) DeepCopyInto(out *WorkflowStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowStatus.
func (in *WorkflowStatus) DeepCopy() *WorkflowStatus {
	if in == nil {
		return nil
	}
	out := new(WorkflowStatus)
	in.DeepCopyInto(out)
	return out
}
