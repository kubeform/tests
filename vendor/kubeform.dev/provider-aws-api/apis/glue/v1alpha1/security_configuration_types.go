/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type SecurityConfiguration struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SecurityConfigurationSpec   `json:"spec,omitempty"`
	Status            SecurityConfigurationStatus `json:"status,omitempty"`
}

type SecurityConfigurationSpec struct {
	SecurityConfigurationSpec2 `json:",inline"`
	// +optional
	KubeformOutput SecurityConfigurationSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type SecurityConfigurationSpecEncryptionConfigurationCloudwatchEncryption struct {
	// +optional
	CloudwatchEncryptionMode *string `json:"cloudwatchEncryptionMode,omitempty" tf:"cloudwatch_encryption_mode"`
	// +optional
	KmsKeyArn *string `json:"kmsKeyArn,omitempty" tf:"kms_key_arn"`
}

type SecurityConfigurationSpecEncryptionConfigurationJobBookmarksEncryption struct {
	// +optional
	JobBookmarksEncryptionMode *string `json:"jobBookmarksEncryptionMode,omitempty" tf:"job_bookmarks_encryption_mode"`
	// +optional
	KmsKeyArn *string `json:"kmsKeyArn,omitempty" tf:"kms_key_arn"`
}

type SecurityConfigurationSpecEncryptionConfigurationS3Encryption struct {
	// +optional
	KmsKeyArn *string `json:"kmsKeyArn,omitempty" tf:"kms_key_arn"`
	// +optional
	S3EncryptionMode *string `json:"s3EncryptionMode,omitempty" tf:"s3_encryption_mode"`
}

type SecurityConfigurationSpecEncryptionConfiguration struct {
	CloudwatchEncryption   *SecurityConfigurationSpecEncryptionConfigurationCloudwatchEncryption   `json:"cloudwatchEncryption" tf:"cloudwatch_encryption"`
	JobBookmarksEncryption *SecurityConfigurationSpecEncryptionConfigurationJobBookmarksEncryption `json:"jobBookmarksEncryption" tf:"job_bookmarks_encryption"`
	S3Encryption           *SecurityConfigurationSpecEncryptionConfigurationS3Encryption           `json:"s3Encryption" tf:"s3_encryption"`
}

type SecurityConfigurationSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	EncryptionConfiguration *SecurityConfigurationSpecEncryptionConfiguration `json:"encryptionConfiguration" tf:"encryption_configuration"`
	Name                    *string                                           `json:"name" tf:"name"`
}

type SecurityConfigurationStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// SecurityConfigurationList is a list of SecurityConfigurations
type SecurityConfigurationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of SecurityConfiguration CRD objects
	Items []SecurityConfiguration `json:"items,omitempty"`
}
