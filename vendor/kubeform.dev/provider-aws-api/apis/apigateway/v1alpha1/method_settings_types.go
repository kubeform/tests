/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type MethodSettings struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              MethodSettingsSpec   `json:"spec,omitempty"`
	Status            MethodSettingsStatus `json:"status,omitempty"`
}

type MethodSettingsSpec struct {
	MethodSettingsSpec2 `json:",inline"`
	// +optional
	KubeformOutput MethodSettingsSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type MethodSettingsSpecSettings struct {
	// +optional
	CacheDataEncrypted *bool `json:"cacheDataEncrypted,omitempty" tf:"cache_data_encrypted"`
	// +optional
	CacheTtlInSeconds *int64 `json:"cacheTtlInSeconds,omitempty" tf:"cache_ttl_in_seconds"`
	// +optional
	CachingEnabled *bool `json:"cachingEnabled,omitempty" tf:"caching_enabled"`
	// +optional
	DataTraceEnabled *bool `json:"dataTraceEnabled,omitempty" tf:"data_trace_enabled"`
	// +optional
	LoggingLevel *string `json:"loggingLevel,omitempty" tf:"logging_level"`
	// +optional
	MetricsEnabled *bool `json:"metricsEnabled,omitempty" tf:"metrics_enabled"`
	// +optional
	RequireAuthorizationForCacheControl *bool `json:"requireAuthorizationForCacheControl,omitempty" tf:"require_authorization_for_cache_control"`
	// +optional
	ThrottlingBurstLimit *int64 `json:"throttlingBurstLimit,omitempty" tf:"throttling_burst_limit"`
	// +optional
	ThrottlingRateLimit *float64 `json:"throttlingRateLimit,omitempty" tf:"throttling_rate_limit"`
	// +optional
	UnauthorizedCacheControlHeaderStrategy *string `json:"unauthorizedCacheControlHeaderStrategy,omitempty" tf:"unauthorized_cache_control_header_strategy"`
}

type MethodSettingsSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	MethodPath *string                     `json:"methodPath" tf:"method_path"`
	RestAPIID  *string                     `json:"restAPIID" tf:"rest_api_id"`
	Settings   *MethodSettingsSpecSettings `json:"settings" tf:"settings"`
	StageName  *string                     `json:"stageName" tf:"stage_name"`
}

type MethodSettingsStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// MethodSettingsList is a list of MethodSettingss
type MethodSettingsList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of MethodSettings CRD objects
	Items []MethodSettings `json:"items,omitempty"`
}
