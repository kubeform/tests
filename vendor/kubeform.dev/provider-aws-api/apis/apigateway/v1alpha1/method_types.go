/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Method struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              MethodSpec   `json:"spec,omitempty"`
	Status            MethodStatus `json:"status,omitempty"`
}

type MethodSpec struct {
	MethodSpec2 `json:",inline"`
	// +optional
	KubeformOutput MethodSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type MethodSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	ApiKeyRequired *bool   `json:"apiKeyRequired,omitempty" tf:"api_key_required"`
	Authorization  *string `json:"authorization" tf:"authorization"`
	// +optional
	AuthorizationScopes []string `json:"authorizationScopes,omitempty" tf:"authorization_scopes"`
	// +optional
	AuthorizerID *string `json:"authorizerID,omitempty" tf:"authorizer_id"`
	HttpMethod   *string `json:"httpMethod" tf:"http_method"`
	// +optional
	OperationName *string `json:"operationName,omitempty" tf:"operation_name"`
	// +optional
	RequestModels *map[string]string `json:"requestModels,omitempty" tf:"request_models"`
	// +optional
	RequestParameters *map[string]bool `json:"requestParameters,omitempty" tf:"request_parameters"`
	// +optional
	RequestValidatorID *string `json:"requestValidatorID,omitempty" tf:"request_validator_id"`
	ResourceID         *string `json:"resourceID" tf:"resource_id"`
	RestAPIID          *string `json:"restAPIID" tf:"rest_api_id"`
}

type MethodStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// MethodList is a list of Methods
type MethodList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Method CRD objects
	Items []Method `json:"items,omitempty"`
}
