// +build !ignore_autogenerated

/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
	v1 "kmodules.xyz/client-go/api/v1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataLakeSettings) DeepCopyInto(out *DataLakeSettings) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataLakeSettings.
func (in *DataLakeSettings) DeepCopy() *DataLakeSettings {
	if in == nil {
		return nil
	}
	out := new(DataLakeSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataLakeSettings) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataLakeSettingsList) DeepCopyInto(out *DataLakeSettingsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataLakeSettings, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataLakeSettingsList.
func (in *DataLakeSettingsList) DeepCopy() *DataLakeSettingsList {
	if in == nil {
		return nil
	}
	out := new(DataLakeSettingsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataLakeSettingsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataLakeSettingsSpec) DeepCopyInto(out *DataLakeSettingsSpec) {
	*out = *in
	in.DataLakeSettingsSpec2.DeepCopyInto(&out.DataLakeSettingsSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataLakeSettingsSpec.
func (in *DataLakeSettingsSpec) DeepCopy() *DataLakeSettingsSpec {
	if in == nil {
		return nil
	}
	out := new(DataLakeSettingsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataLakeSettingsSpec2) DeepCopyInto(out *DataLakeSettingsSpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.Admins != nil {
		in, out := &in.Admins, &out.Admins
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.CatalogID != nil {
		in, out := &in.CatalogID, &out.CatalogID
		*out = new(string)
		**out = **in
	}
	if in.CreateDatabaseDefaultPermissions != nil {
		in, out := &in.CreateDatabaseDefaultPermissions, &out.CreateDatabaseDefaultPermissions
		*out = make([]DataLakeSettingsSpecCreateDatabaseDefaultPermissions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreateTableDefaultPermissions != nil {
		in, out := &in.CreateTableDefaultPermissions, &out.CreateTableDefaultPermissions
		*out = make([]DataLakeSettingsSpecCreateTableDefaultPermissions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TrustedResourceOwners != nil {
		in, out := &in.TrustedResourceOwners, &out.TrustedResourceOwners
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataLakeSettingsSpec2.
func (in *DataLakeSettingsSpec2) DeepCopy() *DataLakeSettingsSpec2 {
	if in == nil {
		return nil
	}
	out := new(DataLakeSettingsSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataLakeSettingsSpecCreateDatabaseDefaultPermissions) DeepCopyInto(out *DataLakeSettingsSpecCreateDatabaseDefaultPermissions) {
	*out = *in
	if in.Permissions != nil {
		in, out := &in.Permissions, &out.Permissions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataLakeSettingsSpecCreateDatabaseDefaultPermissions.
func (in *DataLakeSettingsSpecCreateDatabaseDefaultPermissions) DeepCopy() *DataLakeSettingsSpecCreateDatabaseDefaultPermissions {
	if in == nil {
		return nil
	}
	out := new(DataLakeSettingsSpecCreateDatabaseDefaultPermissions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataLakeSettingsSpecCreateTableDefaultPermissions) DeepCopyInto(out *DataLakeSettingsSpecCreateTableDefaultPermissions) {
	*out = *in
	if in.Permissions != nil {
		in, out := &in.Permissions, &out.Permissions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataLakeSettingsSpecCreateTableDefaultPermissions.
func (in *DataLakeSettingsSpecCreateTableDefaultPermissions) DeepCopy() *DataLakeSettingsSpecCreateTableDefaultPermissions {
	if in == nil {
		return nil
	}
	out := new(DataLakeSettingsSpecCreateTableDefaultPermissions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataLakeSettingsStatus) DeepCopyInto(out *DataLakeSettingsStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataLakeSettingsStatus.
func (in *DataLakeSettingsStatus) DeepCopy() *DataLakeSettingsStatus {
	if in == nil {
		return nil
	}
	out := new(DataLakeSettingsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeformationResource) DeepCopyInto(out *LakeformationResource) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeformationResource.
func (in *LakeformationResource) DeepCopy() *LakeformationResource {
	if in == nil {
		return nil
	}
	out := new(LakeformationResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LakeformationResource) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeformationResourceList) DeepCopyInto(out *LakeformationResourceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LakeformationResource, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeformationResourceList.
func (in *LakeformationResourceList) DeepCopy() *LakeformationResourceList {
	if in == nil {
		return nil
	}
	out := new(LakeformationResourceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LakeformationResourceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeformationResourceSpec) DeepCopyInto(out *LakeformationResourceSpec) {
	*out = *in
	in.LakeformationResourceSpec2.DeepCopyInto(&out.LakeformationResourceSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeformationResourceSpec.
func (in *LakeformationResourceSpec) DeepCopy() *LakeformationResourceSpec {
	if in == nil {
		return nil
	}
	out := new(LakeformationResourceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeformationResourceSpec2) DeepCopyInto(out *LakeformationResourceSpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.LastModified != nil {
		in, out := &in.LastModified, &out.LastModified
		*out = new(string)
		**out = **in
	}
	if in.RoleArn != nil {
		in, out := &in.RoleArn, &out.RoleArn
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeformationResourceSpec2.
func (in *LakeformationResourceSpec2) DeepCopy() *LakeformationResourceSpec2 {
	if in == nil {
		return nil
	}
	out := new(LakeformationResourceSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LakeformationResourceStatus) DeepCopyInto(out *LakeformationResourceStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LakeformationResourceStatus.
func (in *LakeformationResourceStatus) DeepCopy() *LakeformationResourceStatus {
	if in == nil {
		return nil
	}
	out := new(LakeformationResourceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Permissions) DeepCopyInto(out *Permissions) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Permissions.
func (in *Permissions) DeepCopy() *Permissions {
	if in == nil {
		return nil
	}
	out := new(Permissions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Permissions) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionsList) DeepCopyInto(out *PermissionsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Permissions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionsList.
func (in *PermissionsList) DeepCopy() *PermissionsList {
	if in == nil {
		return nil
	}
	out := new(PermissionsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PermissionsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionsSpec) DeepCopyInto(out *PermissionsSpec) {
	*out = *in
	in.PermissionsSpec2.DeepCopyInto(&out.PermissionsSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionsSpec.
func (in *PermissionsSpec) DeepCopy() *PermissionsSpec {
	if in == nil {
		return nil
	}
	out := new(PermissionsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionsSpec2) DeepCopyInto(out *PermissionsSpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.CatalogID != nil {
		in, out := &in.CatalogID, &out.CatalogID
		*out = new(string)
		**out = **in
	}
	if in.CatalogResource != nil {
		in, out := &in.CatalogResource, &out.CatalogResource
		*out = new(bool)
		**out = **in
	}
	if in.DataLocation != nil {
		in, out := &in.DataLocation, &out.DataLocation
		*out = new(PermissionsSpecDataLocation)
		(*in).DeepCopyInto(*out)
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(PermissionsSpecDatabase)
		(*in).DeepCopyInto(*out)
	}
	if in.Permissions != nil {
		in, out := &in.Permissions, &out.Permissions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PermissionsWithGrantOption != nil {
		in, out := &in.PermissionsWithGrantOption, &out.PermissionsWithGrantOption
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Principal != nil {
		in, out := &in.Principal, &out.Principal
		*out = new(string)
		**out = **in
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(PermissionsSpecTable)
		(*in).DeepCopyInto(*out)
	}
	if in.TableWithColumns != nil {
		in, out := &in.TableWithColumns, &out.TableWithColumns
		*out = new(PermissionsSpecTableWithColumns)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionsSpec2.
func (in *PermissionsSpec2) DeepCopy() *PermissionsSpec2 {
	if in == nil {
		return nil
	}
	out := new(PermissionsSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionsSpecDataLocation) DeepCopyInto(out *PermissionsSpecDataLocation) {
	*out = *in
	if in.Arn != nil {
		in, out := &in.Arn, &out.Arn
		*out = new(string)
		**out = **in
	}
	if in.CatalogID != nil {
		in, out := &in.CatalogID, &out.CatalogID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionsSpecDataLocation.
func (in *PermissionsSpecDataLocation) DeepCopy() *PermissionsSpecDataLocation {
	if in == nil {
		return nil
	}
	out := new(PermissionsSpecDataLocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionsSpecDatabase) DeepCopyInto(out *PermissionsSpecDatabase) {
	*out = *in
	if in.CatalogID != nil {
		in, out := &in.CatalogID, &out.CatalogID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionsSpecDatabase.
func (in *PermissionsSpecDatabase) DeepCopy() *PermissionsSpecDatabase {
	if in == nil {
		return nil
	}
	out := new(PermissionsSpecDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionsSpecTable) DeepCopyInto(out *PermissionsSpecTable) {
	*out = *in
	if in.CatalogID != nil {
		in, out := &in.CatalogID, &out.CatalogID
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Wildcard != nil {
		in, out := &in.Wildcard, &out.Wildcard
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionsSpecTable.
func (in *PermissionsSpecTable) DeepCopy() *PermissionsSpecTable {
	if in == nil {
		return nil
	}
	out := new(PermissionsSpecTable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionsSpecTableWithColumns) DeepCopyInto(out *PermissionsSpecTableWithColumns) {
	*out = *in
	if in.CatalogID != nil {
		in, out := &in.CatalogID, &out.CatalogID
		*out = new(string)
		**out = **in
	}
	if in.ColumnNames != nil {
		in, out := &in.ColumnNames, &out.ColumnNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.ExcludedColumnNames != nil {
		in, out := &in.ExcludedColumnNames, &out.ExcludedColumnNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionsSpecTableWithColumns.
func (in *PermissionsSpecTableWithColumns) DeepCopy() *PermissionsSpecTableWithColumns {
	if in == nil {
		return nil
	}
	out := new(PermissionsSpecTableWithColumns)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionsStatus) DeepCopyInto(out *PermissionsStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionsStatus.
func (in *PermissionsStatus) DeepCopy() *PermissionsStatus {
	if in == nil {
		return nil
	}
	out := new(PermissionsStatus)
	in.DeepCopyInto(out)
	return out
}
