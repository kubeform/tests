/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type WebACL struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              WebACLSpec   `json:"spec,omitempty"`
	Status            WebACLStatus `json:"status,omitempty"`
}

type WebACLSpec struct {
	WebACLSpec2 `json:",inline"`
	// +optional
	KubeformOutput WebACLSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type WebACLSpecDefaultAction struct {
	Type *string `json:"type" tf:"type"`
}

type WebACLSpecLoggingConfigurationRedactedFieldsFieldToMatch struct {
	// +optional
	Data *string `json:"data,omitempty" tf:"data"`
	Type *string `json:"type" tf:"type"`
}

type WebACLSpecLoggingConfigurationRedactedFields struct {
	FieldToMatch []WebACLSpecLoggingConfigurationRedactedFieldsFieldToMatch `json:"fieldToMatch" tf:"field_to_match"`
}

type WebACLSpecLoggingConfiguration struct {
	LogDestination *string `json:"logDestination" tf:"log_destination"`
	// +optional
	RedactedFields *WebACLSpecLoggingConfigurationRedactedFields `json:"redactedFields,omitempty" tf:"redacted_fields"`
}

type WebACLSpecRuleAction struct {
	Type *string `json:"type" tf:"type"`
}

type WebACLSpecRuleOverrideAction struct {
	Type *string `json:"type" tf:"type"`
}

type WebACLSpecRule struct {
	// +optional
	Action *WebACLSpecRuleAction `json:"action,omitempty" tf:"action"`
	// +optional
	OverrideAction *WebACLSpecRuleOverrideAction `json:"overrideAction,omitempty" tf:"override_action"`
	Priority       *int64                        `json:"priority" tf:"priority"`
	RuleID         *string                       `json:"ruleID" tf:"rule_id"`
	// +optional
	Type *string `json:"type,omitempty" tf:"type"`
}

type WebACLSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	Arn           *string                  `json:"arn,omitempty" tf:"arn"`
	DefaultAction *WebACLSpecDefaultAction `json:"defaultAction" tf:"default_action"`
	// +optional
	LoggingConfiguration *WebACLSpecLoggingConfiguration `json:"loggingConfiguration,omitempty" tf:"logging_configuration"`
	MetricName           *string                         `json:"metricName" tf:"metric_name"`
	Name                 *string                         `json:"name" tf:"name"`
	// +optional
	Rule []WebACLSpecRule `json:"rule,omitempty" tf:"rule"`
	// +optional
	Tags *map[string]string `json:"tags,omitempty" tf:"tags"`
}

type WebACLStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// WebACLList is a list of WebACLs
type WebACLList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of WebACL CRD objects
	Items []WebACL `json:"items,omitempty"`
}
