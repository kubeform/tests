/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Stage struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              StageSpec   `json:"spec,omitempty"`
	Status            StageStatus `json:"status,omitempty"`
}

type StageSpec struct {
	StageSpec2 `json:",inline"`
	// +optional
	KubeformOutput StageSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type StageSpecAccessLogSettings struct {
	DestinationArn *string `json:"destinationArn" tf:"destination_arn"`
	Format         *string `json:"format" tf:"format"`
}

type StageSpecDefaultRouteSettings struct {
	// +optional
	DataTraceEnabled *bool `json:"dataTraceEnabled,omitempty" tf:"data_trace_enabled"`
	// +optional
	DetailedMetricsEnabled *bool `json:"detailedMetricsEnabled,omitempty" tf:"detailed_metrics_enabled"`
	// +optional
	LoggingLevel *string `json:"loggingLevel,omitempty" tf:"logging_level"`
	// +optional
	ThrottlingBurstLimit *int64 `json:"throttlingBurstLimit,omitempty" tf:"throttling_burst_limit"`
	// +optional
	ThrottlingRateLimit *float64 `json:"throttlingRateLimit,omitempty" tf:"throttling_rate_limit"`
}

type StageSpecRouteSettings struct {
	// +optional
	DataTraceEnabled *bool `json:"dataTraceEnabled,omitempty" tf:"data_trace_enabled"`
	// +optional
	DetailedMetricsEnabled *bool `json:"detailedMetricsEnabled,omitempty" tf:"detailed_metrics_enabled"`
	// +optional
	LoggingLevel *string `json:"loggingLevel,omitempty" tf:"logging_level"`
	RouteKey     *string `json:"routeKey" tf:"route_key"`
	// +optional
	ThrottlingBurstLimit *int64 `json:"throttlingBurstLimit,omitempty" tf:"throttling_burst_limit"`
	// +optional
	ThrottlingRateLimit *float64 `json:"throttlingRateLimit,omitempty" tf:"throttling_rate_limit"`
}

type StageSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	AccessLogSettings *StageSpecAccessLogSettings `json:"accessLogSettings,omitempty" tf:"access_log_settings"`
	ApiID             *string                     `json:"apiID" tf:"api_id"`
	// +optional
	Arn *string `json:"arn,omitempty" tf:"arn"`
	// +optional
	AutoDeploy *bool `json:"autoDeploy,omitempty" tf:"auto_deploy"`
	// +optional
	ClientCertificateID *string `json:"clientCertificateID,omitempty" tf:"client_certificate_id"`
	// +optional
	DefaultRouteSettings *StageSpecDefaultRouteSettings `json:"defaultRouteSettings,omitempty" tf:"default_route_settings"`
	// +optional
	DeploymentID *string `json:"deploymentID,omitempty" tf:"deployment_id"`
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// +optional
	ExecutionArn *string `json:"executionArn,omitempty" tf:"execution_arn"`
	// +optional
	InvokeURL *string `json:"invokeURL,omitempty" tf:"invoke_url"`
	Name      *string `json:"name" tf:"name"`
	// +optional
	RouteSettings []StageSpecRouteSettings `json:"routeSettings,omitempty" tf:"route_settings"`
	// +optional
	StageVariables *map[string]string `json:"stageVariables,omitempty" tf:"stage_variables"`
	// +optional
	Tags *map[string]string `json:"tags,omitempty" tf:"tags"`
}

type StageStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// StageList is a list of Stages
type StageList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Stage CRD objects
	Items []Stage `json:"items,omitempty"`
}
