/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Api struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ApiSpec   `json:"spec,omitempty"`
	Status            ApiStatus `json:"status,omitempty"`
}

type ApiSpec struct {
	ApiSpec2 `json:",inline"`
	// +optional
	KubeformOutput ApiSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type ApiSpecCorsConfiguration struct {
	// +optional
	AllowCredentials *bool `json:"allowCredentials,omitempty" tf:"allow_credentials"`
	// +optional
	AllowHeaders []string `json:"allowHeaders,omitempty" tf:"allow_headers"`
	// +optional
	AllowMethods []string `json:"allowMethods,omitempty" tf:"allow_methods"`
	// +optional
	AllowOrigins []string `json:"allowOrigins,omitempty" tf:"allow_origins"`
	// +optional
	ExposeHeaders []string `json:"exposeHeaders,omitempty" tf:"expose_headers"`
	// +optional
	MaxAge *int64 `json:"maxAge,omitempty" tf:"max_age"`
}

type ApiSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	ApiEndpoint *string `json:"apiEndpoint,omitempty" tf:"api_endpoint"`
	// +optional
	ApiKeySelectionExpression *string `json:"apiKeySelectionExpression,omitempty" tf:"api_key_selection_expression"`
	// +optional
	Arn *string `json:"arn,omitempty" tf:"arn"`
	// +optional
	Body *string `json:"body,omitempty" tf:"body"`
	// +optional
	CorsConfiguration *ApiSpecCorsConfiguration `json:"corsConfiguration,omitempty" tf:"cors_configuration"`
	// +optional
	CredentialsArn *string `json:"credentialsArn,omitempty" tf:"credentials_arn"`
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// +optional
	DisableExecuteAPIEndpoint *bool `json:"disableExecuteAPIEndpoint,omitempty" tf:"disable_execute_api_endpoint"`
	// +optional
	ExecutionArn *string `json:"executionArn,omitempty" tf:"execution_arn"`
	// +optional
	FailOnWarnings *bool   `json:"failOnWarnings,omitempty" tf:"fail_on_warnings"`
	Name           *string `json:"name" tf:"name"`
	ProtocolType   *string `json:"protocolType" tf:"protocol_type"`
	// +optional
	RouteKey *string `json:"routeKey,omitempty" tf:"route_key"`
	// +optional
	RouteSelectionExpression *string `json:"routeSelectionExpression,omitempty" tf:"route_selection_expression"`
	// +optional
	Tags *map[string]string `json:"tags,omitempty" tf:"tags"`
	// +optional
	Target *string `json:"target,omitempty" tf:"target"`
	// +optional
	Version *string `json:"version,omitempty" tf:"version"`
}

type ApiStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ApiList is a list of Apis
type ApiList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Api CRD objects
	Items []Api `json:"items,omitempty"`
}
