/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type BgpPeer struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              BgpPeerSpec   `json:"spec,omitempty"`
	Status            BgpPeerStatus `json:"status,omitempty"`
}

type BgpPeerSpec struct {
	BgpPeerSpec2 `json:",inline"`
	// +optional
	KubeformOutput BgpPeerSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type BgpPeerSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	AddressFamily *string `json:"addressFamily" tf:"address_family"`
	// +optional
	AmazonAddress *string `json:"amazonAddress,omitempty" tf:"amazon_address"`
	// +optional
	AwsDevice *string `json:"awsDevice,omitempty" tf:"aws_device"`
	BgpAsn    *int64  `json:"bgpAsn" tf:"bgp_asn"`
	// +optional
	BgpAuthKey *string `json:"bgpAuthKey,omitempty" tf:"bgp_auth_key"`
	// +optional
	BgpPeerID *string `json:"bgpPeerID,omitempty" tf:"bgp_peer_id"`
	// +optional
	BgpStatus *string `json:"bgpStatus,omitempty" tf:"bgp_status"`
	// +optional
	CustomerAddress    *string `json:"customerAddress,omitempty" tf:"customer_address"`
	VirtualInterfaceID *string `json:"virtualInterfaceID" tf:"virtual_interface_id"`
}

type BgpPeerStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// BgpPeerList is a list of BgpPeers
type BgpPeerList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of BgpPeer CRD objects
	Items []BgpPeer `json:"items,omitempty"`
}
