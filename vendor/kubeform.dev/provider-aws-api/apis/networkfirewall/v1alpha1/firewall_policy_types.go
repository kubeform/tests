/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type FirewallPolicy struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              FirewallPolicySpec   `json:"spec,omitempty"`
	Status            FirewallPolicyStatus `json:"status,omitempty"`
}

type FirewallPolicySpec struct {
	FirewallPolicySpec2 `json:",inline"`
	// +optional
	KubeformOutput FirewallPolicySpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type FirewallPolicySpecFirewallPolicyStatefulRuleGroupReference struct {
	ResourceArn *string `json:"resourceArn" tf:"resource_arn"`
}

type FirewallPolicySpecFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimension struct {
	Value *string `json:"value" tf:"value"`
}

type FirewallPolicySpecFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricAction struct {
	Dimension []FirewallPolicySpecFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricActionDimension `json:"dimension" tf:"dimension"`
}

type FirewallPolicySpecFirewallPolicyStatelessCustomActionActionDefinition struct {
	PublishMetricAction *FirewallPolicySpecFirewallPolicyStatelessCustomActionActionDefinitionPublishMetricAction `json:"publishMetricAction" tf:"publish_metric_action"`
}

type FirewallPolicySpecFirewallPolicyStatelessCustomAction struct {
	ActionDefinition *FirewallPolicySpecFirewallPolicyStatelessCustomActionActionDefinition `json:"actionDefinition" tf:"action_definition"`
	ActionName       *string                                                                `json:"actionName" tf:"action_name"`
}

type FirewallPolicySpecFirewallPolicyStatelessRuleGroupReference struct {
	Priority    *int64  `json:"priority" tf:"priority"`
	ResourceArn *string `json:"resourceArn" tf:"resource_arn"`
}

type FirewallPolicySpecFirewallPolicy struct {
	// +optional
	StatefulRuleGroupReference []FirewallPolicySpecFirewallPolicyStatefulRuleGroupReference `json:"statefulRuleGroupReference,omitempty" tf:"stateful_rule_group_reference"`
	// +optional
	StatelessCustomAction           []FirewallPolicySpecFirewallPolicyStatelessCustomAction `json:"statelessCustomAction,omitempty" tf:"stateless_custom_action"`
	StatelessDefaultActions         []string                                                `json:"statelessDefaultActions" tf:"stateless_default_actions"`
	StatelessFragmentDefaultActions []string                                                `json:"statelessFragmentDefaultActions" tf:"stateless_fragment_default_actions"`
	// +optional
	StatelessRuleGroupReference []FirewallPolicySpecFirewallPolicyStatelessRuleGroupReference `json:"statelessRuleGroupReference,omitempty" tf:"stateless_rule_group_reference"`
}

type FirewallPolicySpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	Arn *string `json:"arn,omitempty" tf:"arn"`
	// +optional
	Description    *string                           `json:"description,omitempty" tf:"description"`
	FirewallPolicy *FirewallPolicySpecFirewallPolicy `json:"firewallPolicy" tf:"firewall_policy"`
	Name           *string                           `json:"name" tf:"name"`
	// +optional
	Tags *map[string]string `json:"tags,omitempty" tf:"tags"`
	// +optional
	UpdateToken *string `json:"updateToken,omitempty" tf:"update_token"`
}

type FirewallPolicyStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// FirewallPolicyList is a list of FirewallPolicys
type FirewallPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of FirewallPolicy CRD objects
	Items []FirewallPolicy `json:"items,omitempty"`
}
