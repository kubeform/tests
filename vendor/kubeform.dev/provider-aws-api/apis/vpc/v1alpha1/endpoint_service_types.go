/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type EndpointService struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              EndpointServiceSpec   `json:"spec,omitempty"`
	Status            EndpointServiceStatus `json:"status,omitempty"`
}

type EndpointServiceSpec struct {
	EndpointServiceSpec2 `json:",inline"`
	// +optional
	KubeformOutput EndpointServiceSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type EndpointServiceSpecPrivateDNSNameConfiguration struct {
	// +optional
	Name *string `json:"name,omitempty" tf:"name"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// +optional
	Type *string `json:"type,omitempty" tf:"type"`
	// +optional
	Value *string `json:"value,omitempty" tf:"value"`
}

type EndpointServiceSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	AcceptanceRequired *bool `json:"acceptanceRequired" tf:"acceptance_required"`
	// +optional
	AllowedPrincipals []string `json:"allowedPrincipals,omitempty" tf:"allowed_principals"`
	// +optional
	Arn *string `json:"arn,omitempty" tf:"arn"`
	// +optional
	AvailabilityZones []string `json:"availabilityZones,omitempty" tf:"availability_zones"`
	// +optional
	BaseEndpointDNSNames []string `json:"baseEndpointDNSNames,omitempty" tf:"base_endpoint_dns_names"`
	// +optional
	// +kubebuilder:validation:MinItems=1
	GatewayLoadBalancerArns []string `json:"gatewayLoadBalancerArns,omitempty" tf:"gateway_load_balancer_arns"`
	// +optional
	ManagesVpcEndpoints *bool `json:"managesVpcEndpoints,omitempty" tf:"manages_vpc_endpoints"`
	// +optional
	// +kubebuilder:validation:MinItems=1
	NetworkLoadBalancerArns []string `json:"networkLoadBalancerArns,omitempty" tf:"network_load_balancer_arns"`
	// +optional
	PrivateDNSName *string `json:"privateDNSName,omitempty" tf:"private_dns_name"`
	// +optional
	PrivateDNSNameConfiguration []EndpointServiceSpecPrivateDNSNameConfiguration `json:"privateDNSNameConfiguration,omitempty" tf:"private_dns_name_configuration"`
	// +optional
	ServiceName *string `json:"serviceName,omitempty" tf:"service_name"`
	// +optional
	ServiceType *string `json:"serviceType,omitempty" tf:"service_type"`
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// +optional
	Tags *map[string]string `json:"tags,omitempty" tf:"tags"`
}

type EndpointServiceStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// EndpointServiceList is a list of EndpointServices
type EndpointServiceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of EndpointService CRD objects
	Items []EndpointService `json:"items,omitempty"`
}
