// +build !ignore_autogenerated

/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	apiv1alpha1 "kubeform.dev/apimachinery/api/v1alpha1"

	v1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	apiv1 "kmodules.xyz/client-go/api/v1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Circuit) DeepCopyInto(out *Circuit) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Circuit.
func (in *Circuit) DeepCopy() *Circuit {
	if in == nil {
		return nil
	}
	out := new(Circuit)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Circuit) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CircuitAuthorization) DeepCopyInto(out *CircuitAuthorization) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CircuitAuthorization.
func (in *CircuitAuthorization) DeepCopy() *CircuitAuthorization {
	if in == nil {
		return nil
	}
	out := new(CircuitAuthorization)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CircuitAuthorization) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CircuitAuthorizationList) DeepCopyInto(out *CircuitAuthorizationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CircuitAuthorization, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CircuitAuthorizationList.
func (in *CircuitAuthorizationList) DeepCopy() *CircuitAuthorizationList {
	if in == nil {
		return nil
	}
	out := new(CircuitAuthorizationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CircuitAuthorizationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CircuitAuthorizationSpec) DeepCopyInto(out *CircuitAuthorizationSpec) {
	*out = *in
	in.CircuitAuthorizationSpec2.DeepCopyInto(&out.CircuitAuthorizationSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CircuitAuthorizationSpec.
func (in *CircuitAuthorizationSpec) DeepCopy() *CircuitAuthorizationSpec {
	if in == nil {
		return nil
	}
	out := new(CircuitAuthorizationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CircuitAuthorizationSpec2) DeepCopyInto(out *CircuitAuthorizationSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	if in.AuthorizationKey != nil {
		in, out := &in.AuthorizationKey, &out.AuthorizationKey
		*out = new(string)
		**out = **in
	}
	if in.AuthorizationUseStatus != nil {
		in, out := &in.AuthorizationUseStatus, &out.AuthorizationUseStatus
		*out = new(string)
		**out = **in
	}
	if in.ExpressRouteCircuitName != nil {
		in, out := &in.ExpressRouteCircuitName, &out.ExpressRouteCircuitName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CircuitAuthorizationSpec2.
func (in *CircuitAuthorizationSpec2) DeepCopy() *CircuitAuthorizationSpec2 {
	if in == nil {
		return nil
	}
	out := new(CircuitAuthorizationSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CircuitAuthorizationStatus) DeepCopyInto(out *CircuitAuthorizationStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CircuitAuthorizationStatus.
func (in *CircuitAuthorizationStatus) DeepCopy() *CircuitAuthorizationStatus {
	if in == nil {
		return nil
	}
	out := new(CircuitAuthorizationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CircuitList) DeepCopyInto(out *CircuitList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Circuit, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CircuitList.
func (in *CircuitList) DeepCopy() *CircuitList {
	if in == nil {
		return nil
	}
	out := new(CircuitList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CircuitList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CircuitPeering) DeepCopyInto(out *CircuitPeering) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CircuitPeering.
func (in *CircuitPeering) DeepCopy() *CircuitPeering {
	if in == nil {
		return nil
	}
	out := new(CircuitPeering)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CircuitPeering) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CircuitPeeringList) DeepCopyInto(out *CircuitPeeringList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CircuitPeering, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CircuitPeeringList.
func (in *CircuitPeeringList) DeepCopy() *CircuitPeeringList {
	if in == nil {
		return nil
	}
	out := new(CircuitPeeringList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CircuitPeeringList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CircuitPeeringSpec) DeepCopyInto(out *CircuitPeeringSpec) {
	*out = *in
	in.CircuitPeeringSpec2.DeepCopyInto(&out.CircuitPeeringSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CircuitPeeringSpec.
func (in *CircuitPeeringSpec) DeepCopy() *CircuitPeeringSpec {
	if in == nil {
		return nil
	}
	out := new(CircuitPeeringSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CircuitPeeringSpec2) DeepCopyInto(out *CircuitPeeringSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	if in.AzureAsn != nil {
		in, out := &in.AzureAsn, &out.AzureAsn
		*out = new(int64)
		**out = **in
	}
	if in.ExpressRouteCircuitName != nil {
		in, out := &in.ExpressRouteCircuitName, &out.ExpressRouteCircuitName
		*out = new(string)
		**out = **in
	}
	if in.Ipv6 != nil {
		in, out := &in.Ipv6, &out.Ipv6
		*out = new(CircuitPeeringSpecIpv6)
		(*in).DeepCopyInto(*out)
	}
	if in.MicrosoftPeeringConfig != nil {
		in, out := &in.MicrosoftPeeringConfig, &out.MicrosoftPeeringConfig
		*out = new(CircuitPeeringSpecMicrosoftPeeringConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.PeerAsn != nil {
		in, out := &in.PeerAsn, &out.PeerAsn
		*out = new(int64)
		**out = **in
	}
	if in.PeeringType != nil {
		in, out := &in.PeeringType, &out.PeeringType
		*out = new(string)
		**out = **in
	}
	if in.PrimaryAzurePort != nil {
		in, out := &in.PrimaryAzurePort, &out.PrimaryAzurePort
		*out = new(string)
		**out = **in
	}
	if in.PrimaryPeerAddressPrefix != nil {
		in, out := &in.PrimaryPeerAddressPrefix, &out.PrimaryPeerAddressPrefix
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.RouteFilterID != nil {
		in, out := &in.RouteFilterID, &out.RouteFilterID
		*out = new(string)
		**out = **in
	}
	if in.SecondaryAzurePort != nil {
		in, out := &in.SecondaryAzurePort, &out.SecondaryAzurePort
		*out = new(string)
		**out = **in
	}
	if in.SecondaryPeerAddressPrefix != nil {
		in, out := &in.SecondaryPeerAddressPrefix, &out.SecondaryPeerAddressPrefix
		*out = new(string)
		**out = **in
	}
	if in.SharedKey != nil {
		in, out := &in.SharedKey, &out.SharedKey
		*out = new(string)
		**out = **in
	}
	if in.VlanID != nil {
		in, out := &in.VlanID, &out.VlanID
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CircuitPeeringSpec2.
func (in *CircuitPeeringSpec2) DeepCopy() *CircuitPeeringSpec2 {
	if in == nil {
		return nil
	}
	out := new(CircuitPeeringSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CircuitPeeringSpecIpv6) DeepCopyInto(out *CircuitPeeringSpecIpv6) {
	*out = *in
	if in.MicrosoftPeering != nil {
		in, out := &in.MicrosoftPeering, &out.MicrosoftPeering
		*out = new(CircuitPeeringSpecIpv6MicrosoftPeering)
		(*in).DeepCopyInto(*out)
	}
	if in.PrimaryPeerAddressPrefix != nil {
		in, out := &in.PrimaryPeerAddressPrefix, &out.PrimaryPeerAddressPrefix
		*out = new(string)
		**out = **in
	}
	if in.RouteFilterID != nil {
		in, out := &in.RouteFilterID, &out.RouteFilterID
		*out = new(string)
		**out = **in
	}
	if in.SecondaryPeerAddressPrefix != nil {
		in, out := &in.SecondaryPeerAddressPrefix, &out.SecondaryPeerAddressPrefix
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CircuitPeeringSpecIpv6.
func (in *CircuitPeeringSpecIpv6) DeepCopy() *CircuitPeeringSpecIpv6 {
	if in == nil {
		return nil
	}
	out := new(CircuitPeeringSpecIpv6)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CircuitPeeringSpecIpv6MicrosoftPeering) DeepCopyInto(out *CircuitPeeringSpecIpv6MicrosoftPeering) {
	*out = *in
	if in.AdvertisedPublicPrefixes != nil {
		in, out := &in.AdvertisedPublicPrefixes, &out.AdvertisedPublicPrefixes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.CustomerAsn != nil {
		in, out := &in.CustomerAsn, &out.CustomerAsn
		*out = new(int64)
		**out = **in
	}
	if in.RoutingRegistryName != nil {
		in, out := &in.RoutingRegistryName, &out.RoutingRegistryName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CircuitPeeringSpecIpv6MicrosoftPeering.
func (in *CircuitPeeringSpecIpv6MicrosoftPeering) DeepCopy() *CircuitPeeringSpecIpv6MicrosoftPeering {
	if in == nil {
		return nil
	}
	out := new(CircuitPeeringSpecIpv6MicrosoftPeering)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CircuitPeeringSpecMicrosoftPeeringConfig) DeepCopyInto(out *CircuitPeeringSpecMicrosoftPeeringConfig) {
	*out = *in
	if in.AdvertisedPublicPrefixes != nil {
		in, out := &in.AdvertisedPublicPrefixes, &out.AdvertisedPublicPrefixes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.CustomerAsn != nil {
		in, out := &in.CustomerAsn, &out.CustomerAsn
		*out = new(int64)
		**out = **in
	}
	if in.RoutingRegistryName != nil {
		in, out := &in.RoutingRegistryName, &out.RoutingRegistryName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CircuitPeeringSpecMicrosoftPeeringConfig.
func (in *CircuitPeeringSpecMicrosoftPeeringConfig) DeepCopy() *CircuitPeeringSpecMicrosoftPeeringConfig {
	if in == nil {
		return nil
	}
	out := new(CircuitPeeringSpecMicrosoftPeeringConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CircuitPeeringStatus) DeepCopyInto(out *CircuitPeeringStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CircuitPeeringStatus.
func (in *CircuitPeeringStatus) DeepCopy() *CircuitPeeringStatus {
	if in == nil {
		return nil
	}
	out := new(CircuitPeeringStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CircuitSpec) DeepCopyInto(out *CircuitSpec) {
	*out = *in
	in.CircuitSpec2.DeepCopyInto(&out.CircuitSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CircuitSpec.
func (in *CircuitSpec) DeepCopy() *CircuitSpec {
	if in == nil {
		return nil
	}
	out := new(CircuitSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CircuitSpec2) DeepCopyInto(out *CircuitSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	if in.AllowClassicOperations != nil {
		in, out := &in.AllowClassicOperations, &out.AllowClassicOperations
		*out = new(bool)
		**out = **in
	}
	if in.BandwidthInMbps != nil {
		in, out := &in.BandwidthInMbps, &out.BandwidthInMbps
		*out = new(int64)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PeeringLocation != nil {
		in, out := &in.PeeringLocation, &out.PeeringLocation
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ServiceKey != nil {
		in, out := &in.ServiceKey, &out.ServiceKey
		*out = new(string)
		**out = **in
	}
	if in.ServiceProviderName != nil {
		in, out := &in.ServiceProviderName, &out.ServiceProviderName
		*out = new(string)
		**out = **in
	}
	if in.ServiceProviderProvisioningState != nil {
		in, out := &in.ServiceProviderProvisioningState, &out.ServiceProviderProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(CircuitSpecSku)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CircuitSpec2.
func (in *CircuitSpec2) DeepCopy() *CircuitSpec2 {
	if in == nil {
		return nil
	}
	out := new(CircuitSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CircuitSpecSku) DeepCopyInto(out *CircuitSpecSku) {
	*out = *in
	if in.Family != nil {
		in, out := &in.Family, &out.Family
		*out = new(string)
		**out = **in
	}
	if in.Tier != nil {
		in, out := &in.Tier, &out.Tier
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CircuitSpecSku.
func (in *CircuitSpecSku) DeepCopy() *CircuitSpecSku {
	if in == nil {
		return nil
	}
	out := new(CircuitSpecSku)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CircuitStatus) DeepCopyInto(out *CircuitStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CircuitStatus.
func (in *CircuitStatus) DeepCopy() *CircuitStatus {
	if in == nil {
		return nil
	}
	out := new(CircuitStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Gateway) DeepCopyInto(out *Gateway) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Gateway.
func (in *Gateway) DeepCopy() *Gateway {
	if in == nil {
		return nil
	}
	out := new(Gateway)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Gateway) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GatewayList) DeepCopyInto(out *GatewayList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Gateway, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GatewayList.
func (in *GatewayList) DeepCopy() *GatewayList {
	if in == nil {
		return nil
	}
	out := new(GatewayList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GatewayList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GatewaySpec) DeepCopyInto(out *GatewaySpec) {
	*out = *in
	in.GatewaySpec2.DeepCopyInto(&out.GatewaySpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GatewaySpec.
func (in *GatewaySpec) DeepCopy() *GatewaySpec {
	if in == nil {
		return nil
	}
	out := new(GatewaySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GatewaySpec2) DeepCopyInto(out *GatewaySpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ScaleUnits != nil {
		in, out := &in.ScaleUnits, &out.ScaleUnits
		*out = new(int64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.VirtualHubID != nil {
		in, out := &in.VirtualHubID, &out.VirtualHubID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GatewaySpec2.
func (in *GatewaySpec2) DeepCopy() *GatewaySpec2 {
	if in == nil {
		return nil
	}
	out := new(GatewaySpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GatewayStatus) DeepCopyInto(out *GatewayStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GatewayStatus.
func (in *GatewayStatus) DeepCopy() *GatewayStatus {
	if in == nil {
		return nil
	}
	out := new(GatewayStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Port) DeepCopyInto(out *Port) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Port.
func (in *Port) DeepCopy() *Port {
	if in == nil {
		return nil
	}
	out := new(Port)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Port) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PortList) DeepCopyInto(out *PortList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Port, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PortList.
func (in *PortList) DeepCopy() *PortList {
	if in == nil {
		return nil
	}
	out := new(PortList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PortList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PortSpec) DeepCopyInto(out *PortSpec) {
	*out = *in
	in.PortSpec2.DeepCopyInto(&out.PortSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PortSpec.
func (in *PortSpec) DeepCopy() *PortSpec {
	if in == nil {
		return nil
	}
	out := new(PortSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PortSpec2) DeepCopyInto(out *PortSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.BandwidthInGbps != nil {
		in, out := &in.BandwidthInGbps, &out.BandwidthInGbps
		*out = new(int64)
		**out = **in
	}
	if in.Encapsulation != nil {
		in, out := &in.Encapsulation, &out.Encapsulation
		*out = new(string)
		**out = **in
	}
	if in.Ethertype != nil {
		in, out := &in.Ethertype, &out.Ethertype
		*out = new(string)
		**out = **in
	}
	if in.Guid != nil {
		in, out := &in.Guid, &out.Guid
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(PortSpecIdentity)
		(*in).DeepCopyInto(*out)
	}
	if in.Link1 != nil {
		in, out := &in.Link1, &out.Link1
		*out = new(PortSpecLink1)
		(*in).DeepCopyInto(*out)
	}
	if in.Link2 != nil {
		in, out := &in.Link2, &out.Link2
		*out = new(PortSpecLink2)
		(*in).DeepCopyInto(*out)
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Mtu != nil {
		in, out := &in.Mtu, &out.Mtu
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PeeringLocation != nil {
		in, out := &in.PeeringLocation, &out.PeeringLocation
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PortSpec2.
func (in *PortSpec2) DeepCopy() *PortSpec2 {
	if in == nil {
		return nil
	}
	out := new(PortSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PortSpecIdentity) DeepCopyInto(out *PortSpecIdentity) {
	*out = *in
	if in.IdentityIDS != nil {
		in, out := &in.IdentityIDS, &out.IdentityIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PortSpecIdentity.
func (in *PortSpecIdentity) DeepCopy() *PortSpecIdentity {
	if in == nil {
		return nil
	}
	out := new(PortSpecIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PortSpecLink1) DeepCopyInto(out *PortSpecLink1) {
	*out = *in
	if in.AdminEnabled != nil {
		in, out := &in.AdminEnabled, &out.AdminEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ConnectorType != nil {
		in, out := &in.ConnectorType, &out.ConnectorType
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InterfaceName != nil {
		in, out := &in.InterfaceName, &out.InterfaceName
		*out = new(string)
		**out = **in
	}
	if in.MacsecCakKeyvaultSecretID != nil {
		in, out := &in.MacsecCakKeyvaultSecretID, &out.MacsecCakKeyvaultSecretID
		*out = new(string)
		**out = **in
	}
	if in.MacsecCipher != nil {
		in, out := &in.MacsecCipher, &out.MacsecCipher
		*out = new(string)
		**out = **in
	}
	if in.MacsecCknKeyvaultSecretID != nil {
		in, out := &in.MacsecCknKeyvaultSecretID, &out.MacsecCknKeyvaultSecretID
		*out = new(string)
		**out = **in
	}
	if in.PatchPanelID != nil {
		in, out := &in.PatchPanelID, &out.PatchPanelID
		*out = new(string)
		**out = **in
	}
	if in.RackID != nil {
		in, out := &in.RackID, &out.RackID
		*out = new(string)
		**out = **in
	}
	if in.RouterName != nil {
		in, out := &in.RouterName, &out.RouterName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PortSpecLink1.
func (in *PortSpecLink1) DeepCopy() *PortSpecLink1 {
	if in == nil {
		return nil
	}
	out := new(PortSpecLink1)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PortSpecLink2) DeepCopyInto(out *PortSpecLink2) {
	*out = *in
	if in.AdminEnabled != nil {
		in, out := &in.AdminEnabled, &out.AdminEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ConnectorType != nil {
		in, out := &in.ConnectorType, &out.ConnectorType
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InterfaceName != nil {
		in, out := &in.InterfaceName, &out.InterfaceName
		*out = new(string)
		**out = **in
	}
	if in.MacsecCakKeyvaultSecretID != nil {
		in, out := &in.MacsecCakKeyvaultSecretID, &out.MacsecCakKeyvaultSecretID
		*out = new(string)
		**out = **in
	}
	if in.MacsecCipher != nil {
		in, out := &in.MacsecCipher, &out.MacsecCipher
		*out = new(string)
		**out = **in
	}
	if in.MacsecCknKeyvaultSecretID != nil {
		in, out := &in.MacsecCknKeyvaultSecretID, &out.MacsecCknKeyvaultSecretID
		*out = new(string)
		**out = **in
	}
	if in.PatchPanelID != nil {
		in, out := &in.PatchPanelID, &out.PatchPanelID
		*out = new(string)
		**out = **in
	}
	if in.RackID != nil {
		in, out := &in.RackID, &out.RackID
		*out = new(string)
		**out = **in
	}
	if in.RouterName != nil {
		in, out := &in.RouterName, &out.RouterName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PortSpecLink2.
func (in *PortSpecLink2) DeepCopy() *PortSpecLink2 {
	if in == nil {
		return nil
	}
	out := new(PortSpecLink2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PortStatus) DeepCopyInto(out *PortStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PortStatus.
func (in *PortStatus) DeepCopy() *PortStatus {
	if in == nil {
		return nil
	}
	out := new(PortStatus)
	in.DeepCopyInto(out)
	return out
}
