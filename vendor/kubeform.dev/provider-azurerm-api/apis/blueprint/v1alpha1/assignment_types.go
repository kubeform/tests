/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Assignment struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AssignmentSpec   `json:"spec,omitempty"`
	Status            AssignmentStatus `json:"status,omitempty"`
}

type AssignmentSpec struct {
	AssignmentSpec2 `json:",inline"`
	// +optional
	KubeformOutput AssignmentSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type AssignmentSpecIdentity struct {
	// +kubebuilder:validation:MinItems=1
	IdentityIDS []string `json:"identityIDS" tf:"identity_ids"`
	// +optional
	PrincipalID *string `json:"principalID,omitempty" tf:"principal_id"`
	// +optional
	TenantID *string `json:"tenantID,omitempty" tf:"tenant_id"`
	Type     *string `json:"type" tf:"type"`
}

type AssignmentSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	BlueprintName *string `json:"blueprintName,omitempty" tf:"blueprint_name"`
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// +optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name"`
	// +optional
	Identity *AssignmentSpecIdentity `json:"identity,omitempty" tf:"identity"`
	Location *string                 `json:"location" tf:"location"`
	// +optional
	// +kubebuilder:validation:MaxItems=5
	LockExcludePrincipals []string `json:"lockExcludePrincipals,omitempty" tf:"lock_exclude_principals"`
	// +optional
	LockMode *string `json:"lockMode,omitempty" tf:"lock_mode"`
	Name     *string `json:"name" tf:"name"`
	// +optional
	ParameterValues *string `json:"parameterValues,omitempty" tf:"parameter_values"`
	// +optional
	ResourceGroups       *string `json:"resourceGroups,omitempty" tf:"resource_groups"`
	TargetSubscriptionID *string `json:"targetSubscriptionID" tf:"target_subscription_id"`
	// +optional
	Type      *string `json:"type,omitempty" tf:"type"`
	VersionID *string `json:"versionID" tf:"version_id"`
}

type AssignmentStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// AssignmentList is a list of Assignments
type AssignmentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Assignment CRD objects
	Items []Assignment `json:"items,omitempty"`
}
