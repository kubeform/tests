/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type LinkedService struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              LinkedServiceSpec   `json:"spec,omitempty"`
	Status            LinkedServiceStatus `json:"status,omitempty"`
}

type LinkedServiceSpec struct {
	LinkedServiceSpec2 `json:",inline"`
	// +optional
	KubeformOutput LinkedServiceSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type LinkedServiceSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	// Deprecated
	LinkedServiceName *string `json:"linkedServiceName,omitempty" tf:"linked_service_name"`
	// +optional
	Name *string `json:"name,omitempty" tf:"name"`
	// +optional
	ReadAccessID      *string `json:"readAccessID,omitempty" tf:"read_access_id"`
	ResourceGroupName *string `json:"resourceGroupName" tf:"resource_group_name"`
	// +optional
	// Deprecated
	ResourceID *string `json:"resourceID,omitempty" tf:"resource_id"`
	// +optional
	Tags *map[string]string `json:"tags,omitempty" tf:"tags"`
	// +optional
	WorkspaceID *string `json:"workspaceID,omitempty" tf:"workspace_id"`
	// +optional
	// Deprecated
	WorkspaceName *string `json:"workspaceName,omitempty" tf:"workspace_name"`
	// +optional
	WriteAccessID *string `json:"writeAccessID,omitempty" tf:"write_access_id"`
}

type LinkedServiceStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// LinkedServiceList is a list of LinkedServices
type LinkedServiceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of LinkedService CRD objects
	Items []LinkedService `json:"items,omitempty"`
}
