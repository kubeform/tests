/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type ServerVulnerabilityAssessment struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ServerVulnerabilityAssessmentSpec   `json:"spec,omitempty"`
	Status            ServerVulnerabilityAssessmentStatus `json:"status,omitempty"`
}

type ServerVulnerabilityAssessmentSpec struct {
	ServerVulnerabilityAssessmentSpec2 `json:",inline"`
	// +optional
	KubeformOutput ServerVulnerabilityAssessmentSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type ServerVulnerabilityAssessmentSpecRecurringScans struct {
	// +optional
	EmailSubscriptionAdmins *bool `json:"emailSubscriptionAdmins,omitempty" tf:"email_subscription_admins"`
	// +optional
	Emails []string `json:"emails,omitempty" tf:"emails"`
	// +optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled"`
}

type ServerVulnerabilityAssessmentSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`

	// +optional
	RecurringScans              *ServerVulnerabilityAssessmentSpecRecurringScans `json:"recurringScans,omitempty" tf:"recurring_scans"`
	ServerSecurityAlertPolicyID *string                                          `json:"serverSecurityAlertPolicyID" tf:"server_security_alert_policy_id"`
	// +optional
	StorageAccountAccessKey *string `json:"-" sensitive:"true" tf:"storage_account_access_key"`
	StorageContainerPath    *string `json:"storageContainerPath" tf:"storage_container_path"`
	// +optional
	StorageContainerSasKey *string `json:"-" sensitive:"true" tf:"storage_container_sas_key"`
}

type ServerVulnerabilityAssessmentStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ServerVulnerabilityAssessmentList is a list of ServerVulnerabilityAssessments
type ServerVulnerabilityAssessmentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of ServerVulnerabilityAssessment CRD objects
	Items []ServerVulnerabilityAssessment `json:"items,omitempty"`
}
