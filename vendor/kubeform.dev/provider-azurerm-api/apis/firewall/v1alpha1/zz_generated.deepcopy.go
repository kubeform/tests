// +build !ignore_autogenerated

/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	apiv1alpha1 "kubeform.dev/apimachinery/api/v1alpha1"

	runtime "k8s.io/apimachinery/pkg/runtime"
	v1 "kmodules.xyz/client-go/api/v1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationRuleCollection) DeepCopyInto(out *ApplicationRuleCollection) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationRuleCollection.
func (in *ApplicationRuleCollection) DeepCopy() *ApplicationRuleCollection {
	if in == nil {
		return nil
	}
	out := new(ApplicationRuleCollection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationRuleCollection) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationRuleCollectionList) DeepCopyInto(out *ApplicationRuleCollectionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ApplicationRuleCollection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationRuleCollectionList.
func (in *ApplicationRuleCollectionList) DeepCopy() *ApplicationRuleCollectionList {
	if in == nil {
		return nil
	}
	out := new(ApplicationRuleCollectionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationRuleCollectionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationRuleCollectionSpec) DeepCopyInto(out *ApplicationRuleCollectionSpec) {
	*out = *in
	in.ApplicationRuleCollectionSpec2.DeepCopyInto(&out.ApplicationRuleCollectionSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationRuleCollectionSpec.
func (in *ApplicationRuleCollectionSpec) DeepCopy() *ApplicationRuleCollectionSpec {
	if in == nil {
		return nil
	}
	out := new(ApplicationRuleCollectionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationRuleCollectionSpec2) DeepCopyInto(out *ApplicationRuleCollectionSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.AzureFirewallName != nil {
		in, out := &in.AzureFirewallName, &out.AzureFirewallName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int64)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = make([]ApplicationRuleCollectionSpecRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationRuleCollectionSpec2.
func (in *ApplicationRuleCollectionSpec2) DeepCopy() *ApplicationRuleCollectionSpec2 {
	if in == nil {
		return nil
	}
	out := new(ApplicationRuleCollectionSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationRuleCollectionSpecRule) DeepCopyInto(out *ApplicationRuleCollectionSpecRule) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FqdnTags != nil {
		in, out := &in.FqdnTags, &out.FqdnTags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = make([]ApplicationRuleCollectionSpecRuleProtocol, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceAddresses != nil {
		in, out := &in.SourceAddresses, &out.SourceAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SourceIPGroups != nil {
		in, out := &in.SourceIPGroups, &out.SourceIPGroups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.TargetFqdns != nil {
		in, out := &in.TargetFqdns, &out.TargetFqdns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationRuleCollectionSpecRule.
func (in *ApplicationRuleCollectionSpecRule) DeepCopy() *ApplicationRuleCollectionSpecRule {
	if in == nil {
		return nil
	}
	out := new(ApplicationRuleCollectionSpecRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationRuleCollectionSpecRuleProtocol) DeepCopyInto(out *ApplicationRuleCollectionSpecRuleProtocol) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationRuleCollectionSpecRuleProtocol.
func (in *ApplicationRuleCollectionSpecRuleProtocol) DeepCopy() *ApplicationRuleCollectionSpecRuleProtocol {
	if in == nil {
		return nil
	}
	out := new(ApplicationRuleCollectionSpecRuleProtocol)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationRuleCollectionStatus) DeepCopyInto(out *ApplicationRuleCollectionStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationRuleCollectionStatus.
func (in *ApplicationRuleCollectionStatus) DeepCopy() *ApplicationRuleCollectionStatus {
	if in == nil {
		return nil
	}
	out := new(ApplicationRuleCollectionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Firewall) DeepCopyInto(out *Firewall) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Firewall.
func (in *Firewall) DeepCopy() *Firewall {
	if in == nil {
		return nil
	}
	out := new(Firewall)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Firewall) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallList) DeepCopyInto(out *FirewallList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Firewall, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallList.
func (in *FirewallList) DeepCopy() *FirewallList {
	if in == nil {
		return nil
	}
	out := new(FirewallList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FirewallList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallSpec) DeepCopyInto(out *FirewallSpec) {
	*out = *in
	in.FirewallSpec2.DeepCopyInto(&out.FirewallSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallSpec.
func (in *FirewallSpec) DeepCopy() *FirewallSpec {
	if in == nil {
		return nil
	}
	out := new(FirewallSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallSpec2) DeepCopyInto(out *FirewallSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.DnsServers != nil {
		in, out := &in.DnsServers, &out.DnsServers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.FirewallPolicyID != nil {
		in, out := &in.FirewallPolicyID, &out.FirewallPolicyID
		*out = new(string)
		**out = **in
	}
	if in.IpConfiguration != nil {
		in, out := &in.IpConfiguration, &out.IpConfiguration
		*out = make([]FirewallSpecIpConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ManagementIPConfiguration != nil {
		in, out := &in.ManagementIPConfiguration, &out.ManagementIPConfiguration
		*out = new(FirewallSpecManagementIPConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPRanges != nil {
		in, out := &in.PrivateIPRanges, &out.PrivateIPRanges
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
	if in.SkuTier != nil {
		in, out := &in.SkuTier, &out.SkuTier
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.ThreatIntelMode != nil {
		in, out := &in.ThreatIntelMode, &out.ThreatIntelMode
		*out = new(string)
		**out = **in
	}
	if in.VirtualHub != nil {
		in, out := &in.VirtualHub, &out.VirtualHub
		*out = new(FirewallSpecVirtualHub)
		(*in).DeepCopyInto(*out)
	}
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallSpec2.
func (in *FirewallSpec2) DeepCopy() *FirewallSpec2 {
	if in == nil {
		return nil
	}
	out := new(FirewallSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallSpecIpConfiguration) DeepCopyInto(out *FirewallSpecIpConfiguration) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.PublicIPAddressID != nil {
		in, out := &in.PublicIPAddressID, &out.PublicIPAddressID
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallSpecIpConfiguration.
func (in *FirewallSpecIpConfiguration) DeepCopy() *FirewallSpecIpConfiguration {
	if in == nil {
		return nil
	}
	out := new(FirewallSpecIpConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallSpecManagementIPConfiguration) DeepCopyInto(out *FirewallSpecManagementIPConfiguration) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.PublicIPAddressID != nil {
		in, out := &in.PublicIPAddressID, &out.PublicIPAddressID
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallSpecManagementIPConfiguration.
func (in *FirewallSpecManagementIPConfiguration) DeepCopy() *FirewallSpecManagementIPConfiguration {
	if in == nil {
		return nil
	}
	out := new(FirewallSpecManagementIPConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallSpecVirtualHub) DeepCopyInto(out *FirewallSpecVirtualHub) {
	*out = *in
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.PublicIPAddresses != nil {
		in, out := &in.PublicIPAddresses, &out.PublicIPAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PublicIPCount != nil {
		in, out := &in.PublicIPCount, &out.PublicIPCount
		*out = new(int64)
		**out = **in
	}
	if in.VirtualHubID != nil {
		in, out := &in.VirtualHubID, &out.VirtualHubID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallSpecVirtualHub.
func (in *FirewallSpecVirtualHub) DeepCopy() *FirewallSpecVirtualHub {
	if in == nil {
		return nil
	}
	out := new(FirewallSpecVirtualHub)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallStatus) DeepCopyInto(out *FirewallStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallStatus.
func (in *FirewallStatus) DeepCopy() *FirewallStatus {
	if in == nil {
		return nil
	}
	out := new(FirewallStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NatRuleCollection) DeepCopyInto(out *NatRuleCollection) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NatRuleCollection.
func (in *NatRuleCollection) DeepCopy() *NatRuleCollection {
	if in == nil {
		return nil
	}
	out := new(NatRuleCollection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NatRuleCollection) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NatRuleCollectionList) DeepCopyInto(out *NatRuleCollectionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NatRuleCollection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NatRuleCollectionList.
func (in *NatRuleCollectionList) DeepCopy() *NatRuleCollectionList {
	if in == nil {
		return nil
	}
	out := new(NatRuleCollectionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NatRuleCollectionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NatRuleCollectionSpec) DeepCopyInto(out *NatRuleCollectionSpec) {
	*out = *in
	in.NatRuleCollectionSpec2.DeepCopyInto(&out.NatRuleCollectionSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NatRuleCollectionSpec.
func (in *NatRuleCollectionSpec) DeepCopy() *NatRuleCollectionSpec {
	if in == nil {
		return nil
	}
	out := new(NatRuleCollectionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NatRuleCollectionSpec2) DeepCopyInto(out *NatRuleCollectionSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.AzureFirewallName != nil {
		in, out := &in.AzureFirewallName, &out.AzureFirewallName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int64)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = make([]NatRuleCollectionSpecRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NatRuleCollectionSpec2.
func (in *NatRuleCollectionSpec2) DeepCopy() *NatRuleCollectionSpec2 {
	if in == nil {
		return nil
	}
	out := new(NatRuleCollectionSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NatRuleCollectionSpecRule) DeepCopyInto(out *NatRuleCollectionSpecRule) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DestinationAddresses != nil {
		in, out := &in.DestinationAddresses, &out.DestinationAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DestinationPorts != nil {
		in, out := &in.DestinationPorts, &out.DestinationPorts
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Protocols != nil {
		in, out := &in.Protocols, &out.Protocols
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SourceAddresses != nil {
		in, out := &in.SourceAddresses, &out.SourceAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SourceIPGroups != nil {
		in, out := &in.SourceIPGroups, &out.SourceIPGroups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.TranslatedAddress != nil {
		in, out := &in.TranslatedAddress, &out.TranslatedAddress
		*out = new(string)
		**out = **in
	}
	if in.TranslatedPort != nil {
		in, out := &in.TranslatedPort, &out.TranslatedPort
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NatRuleCollectionSpecRule.
func (in *NatRuleCollectionSpecRule) DeepCopy() *NatRuleCollectionSpecRule {
	if in == nil {
		return nil
	}
	out := new(NatRuleCollectionSpecRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NatRuleCollectionStatus) DeepCopyInto(out *NatRuleCollectionStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NatRuleCollectionStatus.
func (in *NatRuleCollectionStatus) DeepCopy() *NatRuleCollectionStatus {
	if in == nil {
		return nil
	}
	out := new(NatRuleCollectionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkRuleCollection) DeepCopyInto(out *NetworkRuleCollection) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkRuleCollection.
func (in *NetworkRuleCollection) DeepCopy() *NetworkRuleCollection {
	if in == nil {
		return nil
	}
	out := new(NetworkRuleCollection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkRuleCollection) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkRuleCollectionList) DeepCopyInto(out *NetworkRuleCollectionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NetworkRuleCollection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkRuleCollectionList.
func (in *NetworkRuleCollectionList) DeepCopy() *NetworkRuleCollectionList {
	if in == nil {
		return nil
	}
	out := new(NetworkRuleCollectionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkRuleCollectionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkRuleCollectionSpec) DeepCopyInto(out *NetworkRuleCollectionSpec) {
	*out = *in
	in.NetworkRuleCollectionSpec2.DeepCopyInto(&out.NetworkRuleCollectionSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkRuleCollectionSpec.
func (in *NetworkRuleCollectionSpec) DeepCopy() *NetworkRuleCollectionSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkRuleCollectionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkRuleCollectionSpec2) DeepCopyInto(out *NetworkRuleCollectionSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.AzureFirewallName != nil {
		in, out := &in.AzureFirewallName, &out.AzureFirewallName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int64)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = make([]NetworkRuleCollectionSpecRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkRuleCollectionSpec2.
func (in *NetworkRuleCollectionSpec2) DeepCopy() *NetworkRuleCollectionSpec2 {
	if in == nil {
		return nil
	}
	out := new(NetworkRuleCollectionSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkRuleCollectionSpecRule) DeepCopyInto(out *NetworkRuleCollectionSpecRule) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DestinationAddresses != nil {
		in, out := &in.DestinationAddresses, &out.DestinationAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DestinationFqdns != nil {
		in, out := &in.DestinationFqdns, &out.DestinationFqdns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DestinationIPGroups != nil {
		in, out := &in.DestinationIPGroups, &out.DestinationIPGroups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DestinationPorts != nil {
		in, out := &in.DestinationPorts, &out.DestinationPorts
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Protocols != nil {
		in, out := &in.Protocols, &out.Protocols
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SourceAddresses != nil {
		in, out := &in.SourceAddresses, &out.SourceAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SourceIPGroups != nil {
		in, out := &in.SourceIPGroups, &out.SourceIPGroups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkRuleCollectionSpecRule.
func (in *NetworkRuleCollectionSpecRule) DeepCopy() *NetworkRuleCollectionSpecRule {
	if in == nil {
		return nil
	}
	out := new(NetworkRuleCollectionSpecRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkRuleCollectionStatus) DeepCopyInto(out *NetworkRuleCollectionStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkRuleCollectionStatus.
func (in *NetworkRuleCollectionStatus) DeepCopy() *NetworkRuleCollectionStatus {
	if in == nil {
		return nil
	}
	out := new(NetworkRuleCollectionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Policy) DeepCopyInto(out *Policy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Policy.
func (in *Policy) DeepCopy() *Policy {
	if in == nil {
		return nil
	}
	out := new(Policy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Policy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyList) DeepCopyInto(out *PolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Policy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyList.
func (in *PolicyList) DeepCopy() *PolicyList {
	if in == nil {
		return nil
	}
	out := new(PolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyRuleCollectionGroup) DeepCopyInto(out *PolicyRuleCollectionGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyRuleCollectionGroup.
func (in *PolicyRuleCollectionGroup) DeepCopy() *PolicyRuleCollectionGroup {
	if in == nil {
		return nil
	}
	out := new(PolicyRuleCollectionGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PolicyRuleCollectionGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyRuleCollectionGroupList) DeepCopyInto(out *PolicyRuleCollectionGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PolicyRuleCollectionGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyRuleCollectionGroupList.
func (in *PolicyRuleCollectionGroupList) DeepCopy() *PolicyRuleCollectionGroupList {
	if in == nil {
		return nil
	}
	out := new(PolicyRuleCollectionGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PolicyRuleCollectionGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyRuleCollectionGroupSpec) DeepCopyInto(out *PolicyRuleCollectionGroupSpec) {
	*out = *in
	in.PolicyRuleCollectionGroupSpec2.DeepCopyInto(&out.PolicyRuleCollectionGroupSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyRuleCollectionGroupSpec.
func (in *PolicyRuleCollectionGroupSpec) DeepCopy() *PolicyRuleCollectionGroupSpec {
	if in == nil {
		return nil
	}
	out := new(PolicyRuleCollectionGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyRuleCollectionGroupSpec2) DeepCopyInto(out *PolicyRuleCollectionGroupSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.ApplicationRuleCollection != nil {
		in, out := &in.ApplicationRuleCollection, &out.ApplicationRuleCollection
		*out = make([]PolicyRuleCollectionGroupSpecApplicationRuleCollection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FirewallPolicyID != nil {
		in, out := &in.FirewallPolicyID, &out.FirewallPolicyID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NatRuleCollection != nil {
		in, out := &in.NatRuleCollection, &out.NatRuleCollection
		*out = make([]PolicyRuleCollectionGroupSpecNatRuleCollection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkRuleCollection != nil {
		in, out := &in.NetworkRuleCollection, &out.NetworkRuleCollection
		*out = make([]PolicyRuleCollectionGroupSpecNetworkRuleCollection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyRuleCollectionGroupSpec2.
func (in *PolicyRuleCollectionGroupSpec2) DeepCopy() *PolicyRuleCollectionGroupSpec2 {
	if in == nil {
		return nil
	}
	out := new(PolicyRuleCollectionGroupSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyRuleCollectionGroupSpecApplicationRuleCollection) DeepCopyInto(out *PolicyRuleCollectionGroupSpecApplicationRuleCollection) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int64)
		**out = **in
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = make([]PolicyRuleCollectionGroupSpecApplicationRuleCollectionRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyRuleCollectionGroupSpecApplicationRuleCollection.
func (in *PolicyRuleCollectionGroupSpecApplicationRuleCollection) DeepCopy() *PolicyRuleCollectionGroupSpecApplicationRuleCollection {
	if in == nil {
		return nil
	}
	out := new(PolicyRuleCollectionGroupSpecApplicationRuleCollection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyRuleCollectionGroupSpecApplicationRuleCollectionRule) DeepCopyInto(out *PolicyRuleCollectionGroupSpecApplicationRuleCollectionRule) {
	*out = *in
	if in.DestinationFqdnTags != nil {
		in, out := &in.DestinationFqdnTags, &out.DestinationFqdnTags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DestinationFqdns != nil {
		in, out := &in.DestinationFqdns, &out.DestinationFqdns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Protocols != nil {
		in, out := &in.Protocols, &out.Protocols
		*out = make([]PolicyRuleCollectionGroupSpecApplicationRuleCollectionRuleProtocols, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceAddresses != nil {
		in, out := &in.SourceAddresses, &out.SourceAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SourceIPGroups != nil {
		in, out := &in.SourceIPGroups, &out.SourceIPGroups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyRuleCollectionGroupSpecApplicationRuleCollectionRule.
func (in *PolicyRuleCollectionGroupSpecApplicationRuleCollectionRule) DeepCopy() *PolicyRuleCollectionGroupSpecApplicationRuleCollectionRule {
	if in == nil {
		return nil
	}
	out := new(PolicyRuleCollectionGroupSpecApplicationRuleCollectionRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyRuleCollectionGroupSpecApplicationRuleCollectionRuleProtocols) DeepCopyInto(out *PolicyRuleCollectionGroupSpecApplicationRuleCollectionRuleProtocols) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyRuleCollectionGroupSpecApplicationRuleCollectionRuleProtocols.
func (in *PolicyRuleCollectionGroupSpecApplicationRuleCollectionRuleProtocols) DeepCopy() *PolicyRuleCollectionGroupSpecApplicationRuleCollectionRuleProtocols {
	if in == nil {
		return nil
	}
	out := new(PolicyRuleCollectionGroupSpecApplicationRuleCollectionRuleProtocols)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyRuleCollectionGroupSpecNatRuleCollection) DeepCopyInto(out *PolicyRuleCollectionGroupSpecNatRuleCollection) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int64)
		**out = **in
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = make([]PolicyRuleCollectionGroupSpecNatRuleCollectionRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyRuleCollectionGroupSpecNatRuleCollection.
func (in *PolicyRuleCollectionGroupSpecNatRuleCollection) DeepCopy() *PolicyRuleCollectionGroupSpecNatRuleCollection {
	if in == nil {
		return nil
	}
	out := new(PolicyRuleCollectionGroupSpecNatRuleCollection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyRuleCollectionGroupSpecNatRuleCollectionRule) DeepCopyInto(out *PolicyRuleCollectionGroupSpecNatRuleCollectionRule) {
	*out = *in
	if in.DestinationAddress != nil {
		in, out := &in.DestinationAddress, &out.DestinationAddress
		*out = new(string)
		**out = **in
	}
	if in.DestinationPorts != nil {
		in, out := &in.DestinationPorts, &out.DestinationPorts
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Protocols != nil {
		in, out := &in.Protocols, &out.Protocols
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SourceAddresses != nil {
		in, out := &in.SourceAddresses, &out.SourceAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SourceIPGroups != nil {
		in, out := &in.SourceIPGroups, &out.SourceIPGroups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.TranslatedAddress != nil {
		in, out := &in.TranslatedAddress, &out.TranslatedAddress
		*out = new(string)
		**out = **in
	}
	if in.TranslatedPort != nil {
		in, out := &in.TranslatedPort, &out.TranslatedPort
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyRuleCollectionGroupSpecNatRuleCollectionRule.
func (in *PolicyRuleCollectionGroupSpecNatRuleCollectionRule) DeepCopy() *PolicyRuleCollectionGroupSpecNatRuleCollectionRule {
	if in == nil {
		return nil
	}
	out := new(PolicyRuleCollectionGroupSpecNatRuleCollectionRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyRuleCollectionGroupSpecNetworkRuleCollection) DeepCopyInto(out *PolicyRuleCollectionGroupSpecNetworkRuleCollection) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int64)
		**out = **in
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = make([]PolicyRuleCollectionGroupSpecNetworkRuleCollectionRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyRuleCollectionGroupSpecNetworkRuleCollection.
func (in *PolicyRuleCollectionGroupSpecNetworkRuleCollection) DeepCopy() *PolicyRuleCollectionGroupSpecNetworkRuleCollection {
	if in == nil {
		return nil
	}
	out := new(PolicyRuleCollectionGroupSpecNetworkRuleCollection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyRuleCollectionGroupSpecNetworkRuleCollectionRule) DeepCopyInto(out *PolicyRuleCollectionGroupSpecNetworkRuleCollectionRule) {
	*out = *in
	if in.DestinationAddresses != nil {
		in, out := &in.DestinationAddresses, &out.DestinationAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DestinationFqdns != nil {
		in, out := &in.DestinationFqdns, &out.DestinationFqdns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DestinationIPGroups != nil {
		in, out := &in.DestinationIPGroups, &out.DestinationIPGroups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DestinationPorts != nil {
		in, out := &in.DestinationPorts, &out.DestinationPorts
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Protocols != nil {
		in, out := &in.Protocols, &out.Protocols
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SourceAddresses != nil {
		in, out := &in.SourceAddresses, &out.SourceAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SourceIPGroups != nil {
		in, out := &in.SourceIPGroups, &out.SourceIPGroups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyRuleCollectionGroupSpecNetworkRuleCollectionRule.
func (in *PolicyRuleCollectionGroupSpecNetworkRuleCollectionRule) DeepCopy() *PolicyRuleCollectionGroupSpecNetworkRuleCollectionRule {
	if in == nil {
		return nil
	}
	out := new(PolicyRuleCollectionGroupSpecNetworkRuleCollectionRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyRuleCollectionGroupStatus) DeepCopyInto(out *PolicyRuleCollectionGroupStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyRuleCollectionGroupStatus.
func (in *PolicyRuleCollectionGroupStatus) DeepCopy() *PolicyRuleCollectionGroupStatus {
	if in == nil {
		return nil
	}
	out := new(PolicyRuleCollectionGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicySpec) DeepCopyInto(out *PolicySpec) {
	*out = *in
	in.PolicySpec2.DeepCopyInto(&out.PolicySpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicySpec.
func (in *PolicySpec) DeepCopy() *PolicySpec {
	if in == nil {
		return nil
	}
	out := new(PolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicySpec2) DeepCopyInto(out *PolicySpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.BasePolicyID != nil {
		in, out := &in.BasePolicyID, &out.BasePolicyID
		*out = new(string)
		**out = **in
	}
	if in.ChildPolicies != nil {
		in, out := &in.ChildPolicies, &out.ChildPolicies
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Dns != nil {
		in, out := &in.Dns, &out.Dns
		*out = new(PolicySpecDns)
		(*in).DeepCopyInto(*out)
	}
	if in.Firewalls != nil {
		in, out := &in.Firewalls, &out.Firewalls
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.RuleCollectionGroups != nil {
		in, out := &in.RuleCollectionGroups, &out.RuleCollectionGroups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Sku != nil {
		in, out := &in.Sku, &out.Sku
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.ThreatIntelligenceAllowlist != nil {
		in, out := &in.ThreatIntelligenceAllowlist, &out.ThreatIntelligenceAllowlist
		*out = new(PolicySpecThreatIntelligenceAllowlist)
		(*in).DeepCopyInto(*out)
	}
	if in.ThreatIntelligenceMode != nil {
		in, out := &in.ThreatIntelligenceMode, &out.ThreatIntelligenceMode
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicySpec2.
func (in *PolicySpec2) DeepCopy() *PolicySpec2 {
	if in == nil {
		return nil
	}
	out := new(PolicySpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicySpecDns) DeepCopyInto(out *PolicySpecDns) {
	*out = *in
	if in.NetworkRuleFqdnEnabled != nil {
		in, out := &in.NetworkRuleFqdnEnabled, &out.NetworkRuleFqdnEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ProxyEnabled != nil {
		in, out := &in.ProxyEnabled, &out.ProxyEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Servers != nil {
		in, out := &in.Servers, &out.Servers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicySpecDns.
func (in *PolicySpecDns) DeepCopy() *PolicySpecDns {
	if in == nil {
		return nil
	}
	out := new(PolicySpecDns)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicySpecThreatIntelligenceAllowlist) DeepCopyInto(out *PolicySpecThreatIntelligenceAllowlist) {
	*out = *in
	if in.Fqdns != nil {
		in, out := &in.Fqdns, &out.Fqdns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.IpAddresses != nil {
		in, out := &in.IpAddresses, &out.IpAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicySpecThreatIntelligenceAllowlist.
func (in *PolicySpecThreatIntelligenceAllowlist) DeepCopy() *PolicySpecThreatIntelligenceAllowlist {
	if in == nil {
		return nil
	}
	out := new(PolicySpecThreatIntelligenceAllowlist)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyStatus) DeepCopyInto(out *PolicyStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyStatus.
func (in *PolicyStatus) DeepCopy() *PolicyStatus {
	if in == nil {
		return nil
	}
	out := new(PolicyStatus)
	in.DeepCopyInto(out)
	return out
}
