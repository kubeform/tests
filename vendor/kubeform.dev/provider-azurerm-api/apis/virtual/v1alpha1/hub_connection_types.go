/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type HubConnection struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              HubConnectionSpec   `json:"spec,omitempty"`
	Status            HubConnectionStatus `json:"status,omitempty"`
}

type HubConnectionSpec struct {
	HubConnectionSpec2 `json:",inline"`
	// +optional
	KubeformOutput HubConnectionSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type HubConnectionSpecRoutingPropagatedRouteTable struct {
	// +optional
	Labels []string `json:"labels,omitempty" tf:"labels"`
	// +optional
	RouteTableIDS []string `json:"routeTableIDS,omitempty" tf:"route_table_ids"`
}

type HubConnectionSpecRoutingStaticVnetRoute struct {
	// +optional
	AddressPrefixes []string `json:"addressPrefixes,omitempty" tf:"address_prefixes"`
	// +optional
	Name *string `json:"name,omitempty" tf:"name"`
	// +optional
	NextHopIPAddress *string `json:"nextHopIPAddress,omitempty" tf:"next_hop_ip_address"`
}

type HubConnectionSpecRouting struct {
	// +optional
	AssociatedRouteTableID *string `json:"associatedRouteTableID,omitempty" tf:"associated_route_table_id"`
	// +optional
	PropagatedRouteTable *HubConnectionSpecRoutingPropagatedRouteTable `json:"propagatedRouteTable,omitempty" tf:"propagated_route_table"`
	// +optional
	StaticVnetRoute []HubConnectionSpecRoutingStaticVnetRoute `json:"staticVnetRoute,omitempty" tf:"static_vnet_route"`
}

type HubConnectionSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	// Deprecated
	HubToVitualNetworkTrafficAllowed *bool `json:"hubToVitualNetworkTrafficAllowed,omitempty" tf:"hub_to_vitual_network_traffic_allowed"`
	// +optional
	InternetSecurityEnabled *bool   `json:"internetSecurityEnabled,omitempty" tf:"internet_security_enabled"`
	Name                    *string `json:"name" tf:"name"`
	RemoteVirtualNetworkID  *string `json:"remoteVirtualNetworkID" tf:"remote_virtual_network_id"`
	// +optional
	Routing      *HubConnectionSpecRouting `json:"routing,omitempty" tf:"routing"`
	VirtualHubID *string                   `json:"virtualHubID" tf:"virtual_hub_id"`
	// +optional
	// Deprecated
	VitualNetworkToHubGatewaysTrafficAllowed *bool `json:"vitualNetworkToHubGatewaysTrafficAllowed,omitempty" tf:"vitual_network_to_hub_gateways_traffic_allowed"`
}

type HubConnectionStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// HubConnectionList is a list of HubConnections
type HubConnectionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of HubConnection CRD objects
	Items []HubConnection `json:"items,omitempty"`
}
