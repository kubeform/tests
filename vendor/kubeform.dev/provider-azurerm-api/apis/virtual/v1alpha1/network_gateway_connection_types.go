/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type NetworkGatewayConnection struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              NetworkGatewayConnectionSpec   `json:"spec,omitempty"`
	Status            NetworkGatewayConnectionStatus `json:"status,omitempty"`
}

type NetworkGatewayConnectionSpec struct {
	NetworkGatewayConnectionSpec2 `json:",inline"`
	// +optional
	KubeformOutput NetworkGatewayConnectionSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type NetworkGatewayConnectionSpecIpsecPolicy struct {
	DhGroup         *string `json:"dhGroup" tf:"dh_group"`
	IkeEncryption   *string `json:"ikeEncryption" tf:"ike_encryption"`
	IkeIntegrity    *string `json:"ikeIntegrity" tf:"ike_integrity"`
	IpsecEncryption *string `json:"ipsecEncryption" tf:"ipsec_encryption"`
	IpsecIntegrity  *string `json:"ipsecIntegrity" tf:"ipsec_integrity"`
	PfsGroup        *string `json:"pfsGroup" tf:"pfs_group"`
	// +optional
	SaDatasize *int64 `json:"saDatasize,omitempty" tf:"sa_datasize"`
	// +optional
	SaLifetime *int64 `json:"saLifetime,omitempty" tf:"sa_lifetime"`
}

type NetworkGatewayConnectionSpecTrafficSelectorPolicy struct {
	LocalAddressCidrs  []string `json:"localAddressCidrs" tf:"local_address_cidrs"`
	RemoteAddressCidrs []string `json:"remoteAddressCidrs" tf:"remote_address_cidrs"`
}

type NetworkGatewayConnectionSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`

	// +optional
	AuthorizationKey *string `json:"-" sensitive:"true" tf:"authorization_key"`
	// +optional
	ConnectionProtocol *string `json:"connectionProtocol,omitempty" tf:"connection_protocol"`
	// +optional
	DpdTimeoutSeconds *int64 `json:"dpdTimeoutSeconds,omitempty" tf:"dpd_timeout_seconds"`
	// +optional
	EnableBGP *bool `json:"enableBGP,omitempty" tf:"enable_bgp"`
	// +optional
	ExpressRouteCircuitID *string `json:"expressRouteCircuitID,omitempty" tf:"express_route_circuit_id"`
	// +optional
	ExpressRouteGatewayBypass *bool `json:"expressRouteGatewayBypass,omitempty" tf:"express_route_gateway_bypass"`
	// +optional
	IpsecPolicy *NetworkGatewayConnectionSpecIpsecPolicy `json:"ipsecPolicy,omitempty" tf:"ipsec_policy"`
	// +optional
	LocalAzureIPAddressEnabled *bool `json:"localAzureIPAddressEnabled,omitempty" tf:"local_azure_ip_address_enabled"`
	// +optional
	LocalNetworkGatewayID *string `json:"localNetworkGatewayID,omitempty" tf:"local_network_gateway_id"`
	Location              *string `json:"location" tf:"location"`
	Name                  *string `json:"name" tf:"name"`
	// +optional
	PeerVirtualNetworkGatewayID *string `json:"peerVirtualNetworkGatewayID,omitempty" tf:"peer_virtual_network_gateway_id"`
	ResourceGroupName           *string `json:"resourceGroupName" tf:"resource_group_name"`
	// +optional
	RoutingWeight *int64 `json:"routingWeight,omitempty" tf:"routing_weight"`
	// +optional
	SharedKey *string `json:"-" sensitive:"true" tf:"shared_key"`
	// +optional
	Tags *map[string]string `json:"tags,omitempty" tf:"tags"`
	// +optional
	TrafficSelectorPolicy *NetworkGatewayConnectionSpecTrafficSelectorPolicy `json:"trafficSelectorPolicy,omitempty" tf:"traffic_selector_policy"`
	Type                  *string                                            `json:"type" tf:"type"`
	// +optional
	UsePolicyBasedTrafficSelectors *bool   `json:"usePolicyBasedTrafficSelectors,omitempty" tf:"use_policy_based_traffic_selectors"`
	VirtualNetworkGatewayID        *string `json:"virtualNetworkGatewayID" tf:"virtual_network_gateway_id"`
}

type NetworkGatewayConnectionStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// NetworkGatewayConnectionList is a list of NetworkGatewayConnections
type NetworkGatewayConnectionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of NetworkGatewayConnection CRD objects
	Items []NetworkGatewayConnection `json:"items,omitempty"`
}
