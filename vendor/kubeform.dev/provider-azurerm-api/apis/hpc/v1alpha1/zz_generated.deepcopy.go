// +build !ignore_autogenerated

/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	apiv1alpha1 "kubeform.dev/apimachinery/api/v1alpha1"

	corev1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	v1 "kmodules.xyz/client-go/api/v1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cache) DeepCopyInto(out *Cache) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cache.
func (in *Cache) DeepCopy() *Cache {
	if in == nil {
		return nil
	}
	out := new(Cache)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Cache) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheAccessPolicy) DeepCopyInto(out *CacheAccessPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheAccessPolicy.
func (in *CacheAccessPolicy) DeepCopy() *CacheAccessPolicy {
	if in == nil {
		return nil
	}
	out := new(CacheAccessPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CacheAccessPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheAccessPolicyList) DeepCopyInto(out *CacheAccessPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CacheAccessPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheAccessPolicyList.
func (in *CacheAccessPolicyList) DeepCopy() *CacheAccessPolicyList {
	if in == nil {
		return nil
	}
	out := new(CacheAccessPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CacheAccessPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheAccessPolicySpec) DeepCopyInto(out *CacheAccessPolicySpec) {
	*out = *in
	in.CacheAccessPolicySpec2.DeepCopyInto(&out.CacheAccessPolicySpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheAccessPolicySpec.
func (in *CacheAccessPolicySpec) DeepCopy() *CacheAccessPolicySpec {
	if in == nil {
		return nil
	}
	out := new(CacheAccessPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheAccessPolicySpec2) DeepCopyInto(out *CacheAccessPolicySpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.AccessRule != nil {
		in, out := &in.AccessRule, &out.AccessRule
		*out = make([]CacheAccessPolicySpecAccessRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HpcCacheID != nil {
		in, out := &in.HpcCacheID, &out.HpcCacheID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheAccessPolicySpec2.
func (in *CacheAccessPolicySpec2) DeepCopy() *CacheAccessPolicySpec2 {
	if in == nil {
		return nil
	}
	out := new(CacheAccessPolicySpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheAccessPolicySpecAccessRule) DeepCopyInto(out *CacheAccessPolicySpecAccessRule) {
	*out = *in
	if in.Access != nil {
		in, out := &in.Access, &out.Access
		*out = new(string)
		**out = **in
	}
	if in.AnonymousGid != nil {
		in, out := &in.AnonymousGid, &out.AnonymousGid
		*out = new(int64)
		**out = **in
	}
	if in.AnonymousUid != nil {
		in, out := &in.AnonymousUid, &out.AnonymousUid
		*out = new(int64)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
	if in.RootSquashEnabled != nil {
		in, out := &in.RootSquashEnabled, &out.RootSquashEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.SubmountAccessEnabled != nil {
		in, out := &in.SubmountAccessEnabled, &out.SubmountAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SuidEnabled != nil {
		in, out := &in.SuidEnabled, &out.SuidEnabled
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheAccessPolicySpecAccessRule.
func (in *CacheAccessPolicySpecAccessRule) DeepCopy() *CacheAccessPolicySpecAccessRule {
	if in == nil {
		return nil
	}
	out := new(CacheAccessPolicySpecAccessRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheAccessPolicyStatus) DeepCopyInto(out *CacheAccessPolicyStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheAccessPolicyStatus.
func (in *CacheAccessPolicyStatus) DeepCopy() *CacheAccessPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(CacheAccessPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheBlobTarget) DeepCopyInto(out *CacheBlobTarget) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheBlobTarget.
func (in *CacheBlobTarget) DeepCopy() *CacheBlobTarget {
	if in == nil {
		return nil
	}
	out := new(CacheBlobTarget)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CacheBlobTarget) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheBlobTargetList) DeepCopyInto(out *CacheBlobTargetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CacheBlobTarget, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheBlobTargetList.
func (in *CacheBlobTargetList) DeepCopy() *CacheBlobTargetList {
	if in == nil {
		return nil
	}
	out := new(CacheBlobTargetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CacheBlobTargetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheBlobTargetSpec) DeepCopyInto(out *CacheBlobTargetSpec) {
	*out = *in
	in.CacheBlobTargetSpec2.DeepCopyInto(&out.CacheBlobTargetSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheBlobTargetSpec.
func (in *CacheBlobTargetSpec) DeepCopy() *CacheBlobTargetSpec {
	if in == nil {
		return nil
	}
	out := new(CacheBlobTargetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheBlobTargetSpec2) DeepCopyInto(out *CacheBlobTargetSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.AccessPolicyName != nil {
		in, out := &in.AccessPolicyName, &out.AccessPolicyName
		*out = new(string)
		**out = **in
	}
	if in.CacheName != nil {
		in, out := &in.CacheName, &out.CacheName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NamespacePath != nil {
		in, out := &in.NamespacePath, &out.NamespacePath
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.StorageContainerID != nil {
		in, out := &in.StorageContainerID, &out.StorageContainerID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheBlobTargetSpec2.
func (in *CacheBlobTargetSpec2) DeepCopy() *CacheBlobTargetSpec2 {
	if in == nil {
		return nil
	}
	out := new(CacheBlobTargetSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheBlobTargetStatus) DeepCopyInto(out *CacheBlobTargetStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheBlobTargetStatus.
func (in *CacheBlobTargetStatus) DeepCopy() *CacheBlobTargetStatus {
	if in == nil {
		return nil
	}
	out := new(CacheBlobTargetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheList) DeepCopyInto(out *CacheList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Cache, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheList.
func (in *CacheList) DeepCopy() *CacheList {
	if in == nil {
		return nil
	}
	out := new(CacheList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CacheList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheNfsTarget) DeepCopyInto(out *CacheNfsTarget) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheNfsTarget.
func (in *CacheNfsTarget) DeepCopy() *CacheNfsTarget {
	if in == nil {
		return nil
	}
	out := new(CacheNfsTarget)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CacheNfsTarget) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheNfsTargetList) DeepCopyInto(out *CacheNfsTargetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CacheNfsTarget, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheNfsTargetList.
func (in *CacheNfsTargetList) DeepCopy() *CacheNfsTargetList {
	if in == nil {
		return nil
	}
	out := new(CacheNfsTargetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CacheNfsTargetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheNfsTargetSpec) DeepCopyInto(out *CacheNfsTargetSpec) {
	*out = *in
	in.CacheNfsTargetSpec2.DeepCopyInto(&out.CacheNfsTargetSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheNfsTargetSpec.
func (in *CacheNfsTargetSpec) DeepCopy() *CacheNfsTargetSpec {
	if in == nil {
		return nil
	}
	out := new(CacheNfsTargetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheNfsTargetSpec2) DeepCopyInto(out *CacheNfsTargetSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.CacheName != nil {
		in, out := &in.CacheName, &out.CacheName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NamespaceJunction != nil {
		in, out := &in.NamespaceJunction, &out.NamespaceJunction
		*out = make([]CacheNfsTargetSpecNamespaceJunction, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.TargetHostName != nil {
		in, out := &in.TargetHostName, &out.TargetHostName
		*out = new(string)
		**out = **in
	}
	if in.UsageModel != nil {
		in, out := &in.UsageModel, &out.UsageModel
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheNfsTargetSpec2.
func (in *CacheNfsTargetSpec2) DeepCopy() *CacheNfsTargetSpec2 {
	if in == nil {
		return nil
	}
	out := new(CacheNfsTargetSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheNfsTargetSpecNamespaceJunction) DeepCopyInto(out *CacheNfsTargetSpecNamespaceJunction) {
	*out = *in
	if in.AccessPolicyName != nil {
		in, out := &in.AccessPolicyName, &out.AccessPolicyName
		*out = new(string)
		**out = **in
	}
	if in.NamespacePath != nil {
		in, out := &in.NamespacePath, &out.NamespacePath
		*out = new(string)
		**out = **in
	}
	if in.NfsExport != nil {
		in, out := &in.NfsExport, &out.NfsExport
		*out = new(string)
		**out = **in
	}
	if in.TargetPath != nil {
		in, out := &in.TargetPath, &out.TargetPath
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheNfsTargetSpecNamespaceJunction.
func (in *CacheNfsTargetSpecNamespaceJunction) DeepCopy() *CacheNfsTargetSpecNamespaceJunction {
	if in == nil {
		return nil
	}
	out := new(CacheNfsTargetSpecNamespaceJunction)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheNfsTargetStatus) DeepCopyInto(out *CacheNfsTargetStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheNfsTargetStatus.
func (in *CacheNfsTargetStatus) DeepCopy() *CacheNfsTargetStatus {
	if in == nil {
		return nil
	}
	out := new(CacheNfsTargetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheSpec) DeepCopyInto(out *CacheSpec) {
	*out = *in
	in.CacheSpec2.DeepCopyInto(&out.CacheSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheSpec.
func (in *CacheSpec) DeepCopy() *CacheSpec {
	if in == nil {
		return nil
	}
	out := new(CacheSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheSpec2) DeepCopyInto(out *CacheSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(corev1.LocalObjectReference)
		**out = **in
	}
	if in.CacheSizeInGb != nil {
		in, out := &in.CacheSizeInGb, &out.CacheSizeInGb
		*out = new(int64)
		**out = **in
	}
	if in.DefaultAccessPolicy != nil {
		in, out := &in.DefaultAccessPolicy, &out.DefaultAccessPolicy
		*out = new(CacheSpecDefaultAccessPolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.DirectoryActiveDirectory != nil {
		in, out := &in.DirectoryActiveDirectory, &out.DirectoryActiveDirectory
		*out = new(CacheSpecDirectoryActiveDirectory)
		(*in).DeepCopyInto(*out)
	}
	if in.DirectoryFlatFile != nil {
		in, out := &in.DirectoryFlatFile, &out.DirectoryFlatFile
		*out = new(CacheSpecDirectoryFlatFile)
		(*in).DeepCopyInto(*out)
	}
	if in.DirectoryLdap != nil {
		in, out := &in.DirectoryLdap, &out.DirectoryLdap
		*out = new(CacheSpecDirectoryLdap)
		(*in).DeepCopyInto(*out)
	}
	if in.Dns != nil {
		in, out := &in.Dns, &out.Dns
		*out = new(CacheSpecDns)
		(*in).DeepCopyInto(*out)
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MountAddresses != nil {
		in, out := &in.MountAddresses, &out.MountAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Mtu != nil {
		in, out := &in.Mtu, &out.Mtu
		*out = new(int64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NtpServer != nil {
		in, out := &in.NtpServer, &out.NtpServer
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.RootSquashEnabled != nil {
		in, out := &in.RootSquashEnabled, &out.RootSquashEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheSpec2.
func (in *CacheSpec2) DeepCopy() *CacheSpec2 {
	if in == nil {
		return nil
	}
	out := new(CacheSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheSpecDefaultAccessPolicy) DeepCopyInto(out *CacheSpecDefaultAccessPolicy) {
	*out = *in
	if in.AccessRule != nil {
		in, out := &in.AccessRule, &out.AccessRule
		*out = make([]CacheSpecDefaultAccessPolicyAccessRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheSpecDefaultAccessPolicy.
func (in *CacheSpecDefaultAccessPolicy) DeepCopy() *CacheSpecDefaultAccessPolicy {
	if in == nil {
		return nil
	}
	out := new(CacheSpecDefaultAccessPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheSpecDefaultAccessPolicyAccessRule) DeepCopyInto(out *CacheSpecDefaultAccessPolicyAccessRule) {
	*out = *in
	if in.Access != nil {
		in, out := &in.Access, &out.Access
		*out = new(string)
		**out = **in
	}
	if in.AnonymousGid != nil {
		in, out := &in.AnonymousGid, &out.AnonymousGid
		*out = new(int64)
		**out = **in
	}
	if in.AnonymousUid != nil {
		in, out := &in.AnonymousUid, &out.AnonymousUid
		*out = new(int64)
		**out = **in
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
	if in.RootSquashEnabled != nil {
		in, out := &in.RootSquashEnabled, &out.RootSquashEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.SubmountAccessEnabled != nil {
		in, out := &in.SubmountAccessEnabled, &out.SubmountAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SuidEnabled != nil {
		in, out := &in.SuidEnabled, &out.SuidEnabled
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheSpecDefaultAccessPolicyAccessRule.
func (in *CacheSpecDefaultAccessPolicyAccessRule) DeepCopy() *CacheSpecDefaultAccessPolicyAccessRule {
	if in == nil {
		return nil
	}
	out := new(CacheSpecDefaultAccessPolicyAccessRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheSpecDirectoryActiveDirectory) DeepCopyInto(out *CacheSpecDirectoryActiveDirectory) {
	*out = *in
	if in.CacheNetbiosName != nil {
		in, out := &in.CacheNetbiosName, &out.CacheNetbiosName
		*out = new(string)
		**out = **in
	}
	if in.DnsPrimaryIP != nil {
		in, out := &in.DnsPrimaryIP, &out.DnsPrimaryIP
		*out = new(string)
		**out = **in
	}
	if in.DnsSecondaryIP != nil {
		in, out := &in.DnsSecondaryIP, &out.DnsSecondaryIP
		*out = new(string)
		**out = **in
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.DomainNetbiosName != nil {
		in, out := &in.DomainNetbiosName, &out.DomainNetbiosName
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheSpecDirectoryActiveDirectory.
func (in *CacheSpecDirectoryActiveDirectory) DeepCopy() *CacheSpecDirectoryActiveDirectory {
	if in == nil {
		return nil
	}
	out := new(CacheSpecDirectoryActiveDirectory)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheSpecDirectoryFlatFile) DeepCopyInto(out *CacheSpecDirectoryFlatFile) {
	*out = *in
	if in.GroupFileURI != nil {
		in, out := &in.GroupFileURI, &out.GroupFileURI
		*out = new(string)
		**out = **in
	}
	if in.PasswordFileURI != nil {
		in, out := &in.PasswordFileURI, &out.PasswordFileURI
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheSpecDirectoryFlatFile.
func (in *CacheSpecDirectoryFlatFile) DeepCopy() *CacheSpecDirectoryFlatFile {
	if in == nil {
		return nil
	}
	out := new(CacheSpecDirectoryFlatFile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheSpecDirectoryLdap) DeepCopyInto(out *CacheSpecDirectoryLdap) {
	*out = *in
	if in.BaseDn != nil {
		in, out := &in.BaseDn, &out.BaseDn
		*out = new(string)
		**out = **in
	}
	if in.Bind != nil {
		in, out := &in.Bind, &out.Bind
		*out = new(CacheSpecDirectoryLdapBind)
		(*in).DeepCopyInto(*out)
	}
	if in.CertificateValidationURI != nil {
		in, out := &in.CertificateValidationURI, &out.CertificateValidationURI
		*out = new(string)
		**out = **in
	}
	if in.DownloadCertificateAutomatically != nil {
		in, out := &in.DownloadCertificateAutomatically, &out.DownloadCertificateAutomatically
		*out = new(bool)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheSpecDirectoryLdap.
func (in *CacheSpecDirectoryLdap) DeepCopy() *CacheSpecDirectoryLdap {
	if in == nil {
		return nil
	}
	out := new(CacheSpecDirectoryLdap)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheSpecDirectoryLdapBind) DeepCopyInto(out *CacheSpecDirectoryLdapBind) {
	*out = *in
	if in.Dn != nil {
		in, out := &in.Dn, &out.Dn
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheSpecDirectoryLdapBind.
func (in *CacheSpecDirectoryLdapBind) DeepCopy() *CacheSpecDirectoryLdapBind {
	if in == nil {
		return nil
	}
	out := new(CacheSpecDirectoryLdapBind)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheSpecDns) DeepCopyInto(out *CacheSpecDns) {
	*out = *in
	if in.SearchDomain != nil {
		in, out := &in.SearchDomain, &out.SearchDomain
		*out = new(string)
		**out = **in
	}
	if in.Servers != nil {
		in, out := &in.Servers, &out.Servers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheSpecDns.
func (in *CacheSpecDns) DeepCopy() *CacheSpecDns {
	if in == nil {
		return nil
	}
	out := new(CacheSpecDns)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheStatus) DeepCopyInto(out *CacheStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheStatus.
func (in *CacheStatus) DeepCopy() *CacheStatus {
	if in == nil {
		return nil
	}
	out := new(CacheStatus)
	in.DeepCopyInto(out)
	return out
}
