/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type MlServicesCluster struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              MlServicesClusterSpec   `json:"spec,omitempty"`
	Status            MlServicesClusterStatus `json:"status,omitempty"`
}

type MlServicesClusterSpec struct {
	MlServicesClusterSpec2 `json:",inline"`
	// +optional
	KubeformOutput MlServicesClusterSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type MlServicesClusterSpecGateway struct {
	// +optional
	// Deprecated
	Enabled  *bool   `json:"enabled,omitempty" tf:"enabled"`
	Password *string `json:"-" sensitive:"true" tf:"password"`
	Username *string `json:"username" tf:"username"`
}

type MlServicesClusterSpecRolesEdgeNode struct {
	// +optional
	Password *string `json:"-" sensitive:"true" tf:"password"`
	// +optional
	SshKeys []string `json:"sshKeys,omitempty" tf:"ssh_keys"`
	// +optional
	SubnetID *string `json:"subnetID,omitempty" tf:"subnet_id"`
	Username *string `json:"username" tf:"username"`
	// +optional
	VirtualNetworkID *string `json:"virtualNetworkID,omitempty" tf:"virtual_network_id"`
	VmSize           *string `json:"vmSize" tf:"vm_size"`
}

type MlServicesClusterSpecRolesHeadNode struct {
	// +optional
	Password *string `json:"-" sensitive:"true" tf:"password"`
	// +optional
	SshKeys []string `json:"sshKeys,omitempty" tf:"ssh_keys"`
	// +optional
	SubnetID *string `json:"subnetID,omitempty" tf:"subnet_id"`
	Username *string `json:"username" tf:"username"`
	// +optional
	VirtualNetworkID *string `json:"virtualNetworkID,omitempty" tf:"virtual_network_id"`
	VmSize           *string `json:"vmSize" tf:"vm_size"`
}

type MlServicesClusterSpecRolesWorkerNode struct {
	// +optional
	// Deprecated
	MinInstanceCount *int64 `json:"minInstanceCount,omitempty" tf:"min_instance_count"`
	// +optional
	Password *string `json:"-" sensitive:"true" tf:"password"`
	// +optional
	SshKeys []string `json:"sshKeys,omitempty" tf:"ssh_keys"`
	// +optional
	SubnetID            *string `json:"subnetID,omitempty" tf:"subnet_id"`
	TargetInstanceCount *int64  `json:"targetInstanceCount" tf:"target_instance_count"`
	Username            *string `json:"username" tf:"username"`
	// +optional
	VirtualNetworkID *string `json:"virtualNetworkID,omitempty" tf:"virtual_network_id"`
	VmSize           *string `json:"vmSize" tf:"vm_size"`
}

type MlServicesClusterSpecRolesZookeeperNode struct {
	// +optional
	Password *string `json:"-" sensitive:"true" tf:"password"`
	// +optional
	SshKeys []string `json:"sshKeys,omitempty" tf:"ssh_keys"`
	// +optional
	SubnetID *string `json:"subnetID,omitempty" tf:"subnet_id"`
	Username *string `json:"username" tf:"username"`
	// +optional
	VirtualNetworkID *string `json:"virtualNetworkID,omitempty" tf:"virtual_network_id"`
	VmSize           *string `json:"vmSize" tf:"vm_size"`
}

type MlServicesClusterSpecRoles struct {
	EdgeNode      *MlServicesClusterSpecRolesEdgeNode      `json:"edgeNode" tf:"edge_node"`
	HeadNode      *MlServicesClusterSpecRolesHeadNode      `json:"headNode" tf:"head_node"`
	WorkerNode    *MlServicesClusterSpecRolesWorkerNode    `json:"workerNode" tf:"worker_node"`
	ZookeeperNode *MlServicesClusterSpecRolesZookeeperNode `json:"zookeeperNode" tf:"zookeeper_node"`
}

type MlServicesClusterSpecStorageAccount struct {
	IsDefault          *bool   `json:"isDefault" tf:"is_default"`
	StorageAccountKey  *string `json:"-" sensitive:"true" tf:"storage_account_key"`
	StorageContainerID *string `json:"storageContainerID" tf:"storage_container_id"`
}

type MlServicesClusterSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`

	ClusterVersion *string `json:"clusterVersion" tf:"cluster_version"`
	// +optional
	EdgeSSHEndpoint *string                       `json:"edgeSSHEndpoint,omitempty" tf:"edge_ssh_endpoint"`
	Gateway         *MlServicesClusterSpecGateway `json:"gateway" tf:"gateway"`
	// +optional
	HttpsEndpoint     *string                     `json:"httpsEndpoint,omitempty" tf:"https_endpoint"`
	Location          *string                     `json:"location" tf:"location"`
	Name              *string                     `json:"name" tf:"name"`
	ResourceGroupName *string                     `json:"resourceGroupName" tf:"resource_group_name"`
	Roles             *MlServicesClusterSpecRoles `json:"roles" tf:"roles"`
	Rstudio           *bool                       `json:"rstudio" tf:"rstudio"`
	// +optional
	SshEndpoint *string `json:"sshEndpoint,omitempty" tf:"ssh_endpoint"`
	// +optional
	StorageAccount []MlServicesClusterSpecStorageAccount `json:"storageAccount,omitempty" tf:"storage_account"`
	// +optional
	Tags *map[string]string `json:"tags,omitempty" tf:"tags"`
	Tier *string            `json:"tier" tf:"tier"`
	// +optional
	TlsMinVersion *string `json:"tlsMinVersion,omitempty" tf:"tls_min_version"`
}

type MlServicesClusterStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// MlServicesClusterList is a list of MlServicesClusters
type MlServicesClusterList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of MlServicesCluster CRD objects
	Items []MlServicesCluster `json:"items,omitempty"`
}
