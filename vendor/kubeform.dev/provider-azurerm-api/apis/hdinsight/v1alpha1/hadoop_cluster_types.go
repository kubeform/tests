/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type HadoopCluster struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              HadoopClusterSpec   `json:"spec,omitempty"`
	Status            HadoopClusterStatus `json:"status,omitempty"`
}

type HadoopClusterSpec struct {
	HadoopClusterSpec2 `json:",inline"`
	// +optional
	KubeformOutput HadoopClusterSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type HadoopClusterSpecComponentVersion struct {
	Hadoop *string `json:"hadoop" tf:"hadoop"`
}

type HadoopClusterSpecGateway struct {
	// +optional
	// Deprecated
	Enabled  *bool   `json:"enabled,omitempty" tf:"enabled"`
	Password *string `json:"-" sensitive:"true" tf:"password"`
	Username *string `json:"username" tf:"username"`
}

type HadoopClusterSpecMetastoresAmbari struct {
	DatabaseName *string `json:"databaseName" tf:"database_name"`
	Password     *string `json:"-" sensitive:"true" tf:"password"`
	Server       *string `json:"server" tf:"server"`
	Username     *string `json:"username" tf:"username"`
}

type HadoopClusterSpecMetastoresHive struct {
	DatabaseName *string `json:"databaseName" tf:"database_name"`
	Password     *string `json:"-" sensitive:"true" tf:"password"`
	Server       *string `json:"server" tf:"server"`
	Username     *string `json:"username" tf:"username"`
}

type HadoopClusterSpecMetastoresOozie struct {
	DatabaseName *string `json:"databaseName" tf:"database_name"`
	Password     *string `json:"-" sensitive:"true" tf:"password"`
	Server       *string `json:"server" tf:"server"`
	Username     *string `json:"username" tf:"username"`
}

type HadoopClusterSpecMetastores struct {
	// +optional
	Ambari *HadoopClusterSpecMetastoresAmbari `json:"ambari,omitempty" tf:"ambari"`
	// +optional
	Hive *HadoopClusterSpecMetastoresHive `json:"hive,omitempty" tf:"hive"`
	// +optional
	Oozie *HadoopClusterSpecMetastoresOozie `json:"oozie,omitempty" tf:"oozie"`
}

type HadoopClusterSpecMonitor struct {
	LogAnalyticsWorkspaceID *string `json:"logAnalyticsWorkspaceID" tf:"log_analytics_workspace_id"`
	PrimaryKey              *string `json:"-" sensitive:"true" tf:"primary_key"`
}

type HadoopClusterSpecNetwork struct {
	// +optional
	ConnectionDirection *string `json:"connectionDirection,omitempty" tf:"connection_direction"`
	// +optional
	PrivateLinkEnabled *bool `json:"privateLinkEnabled,omitempty" tf:"private_link_enabled"`
}

type HadoopClusterSpecRolesEdgeNodeInstallScriptAction struct {
	Name *string `json:"name" tf:"name"`
	Uri  *string `json:"uri" tf:"uri"`
}

type HadoopClusterSpecRolesEdgeNode struct {
	// +kubebuilder:validation:MinItems=1
	InstallScriptAction []HadoopClusterSpecRolesEdgeNodeInstallScriptAction `json:"installScriptAction" tf:"install_script_action"`
	TargetInstanceCount *int64                                              `json:"targetInstanceCount" tf:"target_instance_count"`
	VmSize              *string                                             `json:"vmSize" tf:"vm_size"`
}

type HadoopClusterSpecRolesHeadNode struct {
	// +optional
	Password *string `json:"-" sensitive:"true" tf:"password"`
	// +optional
	SshKeys []string `json:"sshKeys,omitempty" tf:"ssh_keys"`
	// +optional
	SubnetID *string `json:"subnetID,omitempty" tf:"subnet_id"`
	Username *string `json:"username" tf:"username"`
	// +optional
	VirtualNetworkID *string `json:"virtualNetworkID,omitempty" tf:"virtual_network_id"`
	VmSize           *string `json:"vmSize" tf:"vm_size"`
}

type HadoopClusterSpecRolesWorkerNodeAutoscaleCapacity struct {
	MaxInstanceCount *int64 `json:"maxInstanceCount" tf:"max_instance_count"`
	MinInstanceCount *int64 `json:"minInstanceCount" tf:"min_instance_count"`
}

type HadoopClusterSpecRolesWorkerNodeAutoscaleRecurrenceSchedule struct {
	Days                []string `json:"days" tf:"days"`
	TargetInstanceCount *int64   `json:"targetInstanceCount" tf:"target_instance_count"`
	Time                *string  `json:"time" tf:"time"`
}

type HadoopClusterSpecRolesWorkerNodeAutoscaleRecurrence struct {
	// +kubebuilder:validation:MinItems=1
	Schedule []HadoopClusterSpecRolesWorkerNodeAutoscaleRecurrenceSchedule `json:"schedule" tf:"schedule"`
	Timezone *string                                                       `json:"timezone" tf:"timezone"`
}

type HadoopClusterSpecRolesWorkerNodeAutoscale struct {
	// +optional
	Capacity *HadoopClusterSpecRolesWorkerNodeAutoscaleCapacity `json:"capacity,omitempty" tf:"capacity"`
	// +optional
	Recurrence *HadoopClusterSpecRolesWorkerNodeAutoscaleRecurrence `json:"recurrence,omitempty" tf:"recurrence"`
}

type HadoopClusterSpecRolesWorkerNode struct {
	// +optional
	Autoscale *HadoopClusterSpecRolesWorkerNodeAutoscale `json:"autoscale,omitempty" tf:"autoscale"`
	// +optional
	// Deprecated
	MinInstanceCount *int64 `json:"minInstanceCount,omitempty" tf:"min_instance_count"`
	// +optional
	Password *string `json:"-" sensitive:"true" tf:"password"`
	// +optional
	SshKeys []string `json:"sshKeys,omitempty" tf:"ssh_keys"`
	// +optional
	SubnetID            *string `json:"subnetID,omitempty" tf:"subnet_id"`
	TargetInstanceCount *int64  `json:"targetInstanceCount" tf:"target_instance_count"`
	Username            *string `json:"username" tf:"username"`
	// +optional
	VirtualNetworkID *string `json:"virtualNetworkID,omitempty" tf:"virtual_network_id"`
	VmSize           *string `json:"vmSize" tf:"vm_size"`
}

type HadoopClusterSpecRolesZookeeperNode struct {
	// +optional
	Password *string `json:"-" sensitive:"true" tf:"password"`
	// +optional
	SshKeys []string `json:"sshKeys,omitempty" tf:"ssh_keys"`
	// +optional
	SubnetID *string `json:"subnetID,omitempty" tf:"subnet_id"`
	Username *string `json:"username" tf:"username"`
	// +optional
	VirtualNetworkID *string `json:"virtualNetworkID,omitempty" tf:"virtual_network_id"`
	VmSize           *string `json:"vmSize" tf:"vm_size"`
}

type HadoopClusterSpecRoles struct {
	// +optional
	EdgeNode      *HadoopClusterSpecRolesEdgeNode      `json:"edgeNode,omitempty" tf:"edge_node"`
	HeadNode      *HadoopClusterSpecRolesHeadNode      `json:"headNode" tf:"head_node"`
	WorkerNode    *HadoopClusterSpecRolesWorkerNode    `json:"workerNode" tf:"worker_node"`
	ZookeeperNode *HadoopClusterSpecRolesZookeeperNode `json:"zookeeperNode" tf:"zookeeper_node"`
}

type HadoopClusterSpecStorageAccount struct {
	IsDefault          *bool   `json:"isDefault" tf:"is_default"`
	StorageAccountKey  *string `json:"-" sensitive:"true" tf:"storage_account_key"`
	StorageContainerID *string `json:"storageContainerID" tf:"storage_container_id"`
}

type HadoopClusterSpecStorageAccountGen2 struct {
	FilesystemID              *string `json:"filesystemID" tf:"filesystem_id"`
	IsDefault                 *bool   `json:"isDefault" tf:"is_default"`
	ManagedIdentityResourceID *string `json:"managedIdentityResourceID" tf:"managed_identity_resource_id"`
	StorageResourceID         *string `json:"storageResourceID" tf:"storage_resource_id"`
}

type HadoopClusterSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`

	ClusterVersion   *string                            `json:"clusterVersion" tf:"cluster_version"`
	ComponentVersion *HadoopClusterSpecComponentVersion `json:"componentVersion" tf:"component_version"`
	Gateway          *HadoopClusterSpecGateway          `json:"gateway" tf:"gateway"`
	// +optional
	HttpsEndpoint *string `json:"httpsEndpoint,omitempty" tf:"https_endpoint"`
	Location      *string `json:"location" tf:"location"`
	// +optional
	Metastores *HadoopClusterSpecMetastores `json:"metastores,omitempty" tf:"metastores"`
	// +optional
	Monitor *HadoopClusterSpecMonitor `json:"monitor,omitempty" tf:"monitor"`
	Name    *string                   `json:"name" tf:"name"`
	// +optional
	Network           *HadoopClusterSpecNetwork `json:"network,omitempty" tf:"network"`
	ResourceGroupName *string                   `json:"resourceGroupName" tf:"resource_group_name"`
	Roles             *HadoopClusterSpecRoles   `json:"roles" tf:"roles"`
	// +optional
	SshEndpoint *string `json:"sshEndpoint,omitempty" tf:"ssh_endpoint"`
	// +optional
	StorageAccount []HadoopClusterSpecStorageAccount `json:"storageAccount,omitempty" tf:"storage_account"`
	// +optional
	StorageAccountGen2 *HadoopClusterSpecStorageAccountGen2 `json:"storageAccountGen2,omitempty" tf:"storage_account_gen2"`
	// +optional
	Tags *map[string]string `json:"tags,omitempty" tf:"tags"`
	Tier *string            `json:"tier" tf:"tier"`
	// +optional
	TlsMinVersion *string `json:"tlsMinVersion,omitempty" tf:"tls_min_version"`
}

type HadoopClusterStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// HadoopClusterList is a list of HadoopClusters
type HadoopClusterList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of HadoopCluster CRD objects
	Items []HadoopCluster `json:"items,omitempty"`
}
