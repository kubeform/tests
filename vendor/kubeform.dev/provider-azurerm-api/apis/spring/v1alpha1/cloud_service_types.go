/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type CloudService struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              CloudServiceSpec   `json:"spec,omitempty"`
	Status            CloudServiceStatus `json:"status,omitempty"`
}

type CloudServiceSpec struct {
	CloudServiceSpec2 `json:",inline"`
	// +optional
	KubeformOutput CloudServiceSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type CloudServiceSpecConfigServerGitSettingHttpBasicAuth struct {
	Password *string `json:"-" sensitive:"true" tf:"password"`
	Username *string `json:"username" tf:"username"`
}

type CloudServiceSpecConfigServerGitSettingRepositoryHttpBasicAuth struct {
	Password *string `json:"-" sensitive:"true" tf:"password"`
	Username *string `json:"username" tf:"username"`
}

type CloudServiceSpecConfigServerGitSettingRepositorySshAuth struct {
	// +optional
	HostKey *string `json:"-" sensitive:"true" tf:"host_key"`
	// +optional
	HostKeyAlgorithm *string `json:"hostKeyAlgorithm,omitempty" tf:"host_key_algorithm"`
	PrivateKey       *string `json:"-" sensitive:"true" tf:"private_key"`
	// +optional
	StrictHostKeyCheckingEnabled *bool `json:"strictHostKeyCheckingEnabled,omitempty" tf:"strict_host_key_checking_enabled"`
}

type CloudServiceSpecConfigServerGitSettingRepository struct {
	// +optional
	HttpBasicAuth *CloudServiceSpecConfigServerGitSettingRepositoryHttpBasicAuth `json:"httpBasicAuth,omitempty" tf:"http_basic_auth"`
	// +optional
	Label *string `json:"label,omitempty" tf:"label"`
	Name  *string `json:"name" tf:"name"`
	// +optional
	Pattern []string `json:"pattern,omitempty" tf:"pattern"`
	// +optional
	SearchPaths []string `json:"searchPaths,omitempty" tf:"search_paths"`
	// +optional
	SshAuth *CloudServiceSpecConfigServerGitSettingRepositorySshAuth `json:"sshAuth,omitempty" tf:"ssh_auth"`
	Uri     *string                                                  `json:"uri" tf:"uri"`
}

type CloudServiceSpecConfigServerGitSettingSshAuth struct {
	// +optional
	HostKey *string `json:"-" sensitive:"true" tf:"host_key"`
	// +optional
	HostKeyAlgorithm *string `json:"hostKeyAlgorithm,omitempty" tf:"host_key_algorithm"`
	PrivateKey       *string `json:"-" sensitive:"true" tf:"private_key"`
	// +optional
	StrictHostKeyCheckingEnabled *bool `json:"strictHostKeyCheckingEnabled,omitempty" tf:"strict_host_key_checking_enabled"`
}

type CloudServiceSpecConfigServerGitSetting struct {
	// +optional
	HttpBasicAuth *CloudServiceSpecConfigServerGitSettingHttpBasicAuth `json:"httpBasicAuth,omitempty" tf:"http_basic_auth"`
	// +optional
	Label *string `json:"label,omitempty" tf:"label"`
	// +optional
	Repository []CloudServiceSpecConfigServerGitSettingRepository `json:"repository,omitempty" tf:"repository"`
	// +optional
	SearchPaths []string `json:"searchPaths,omitempty" tf:"search_paths"`
	// +optional
	SshAuth *CloudServiceSpecConfigServerGitSettingSshAuth `json:"sshAuth,omitempty" tf:"ssh_auth"`
	Uri     *string                                        `json:"uri" tf:"uri"`
}

type CloudServiceSpecNetwork struct {
	// +optional
	AppNetworkResourceGroup *string `json:"appNetworkResourceGroup,omitempty" tf:"app_network_resource_group"`
	AppSubnetID             *string `json:"appSubnetID" tf:"app_subnet_id"`
	// +kubebuilder:validation:MinItems=3
	CidrRanges []string `json:"cidrRanges" tf:"cidr_ranges"`
	// +optional
	ServiceRuntimeNetworkResourceGroup *string `json:"serviceRuntimeNetworkResourceGroup,omitempty" tf:"service_runtime_network_resource_group"`
	ServiceRuntimeSubnetID             *string `json:"serviceRuntimeSubnetID" tf:"service_runtime_subnet_id"`
}

type CloudServiceSpecRequiredNetworkTrafficRules struct {
	// +optional
	Direction *string `json:"direction,omitempty" tf:"direction"`
	// +optional
	Fqdns []string `json:"fqdns,omitempty" tf:"fqdns"`
	// +optional
	IpAddresses []string `json:"ipAddresses,omitempty" tf:"ip_addresses"`
	// +optional
	Port *int64 `json:"port,omitempty" tf:"port"`
	// +optional
	Protocol *string `json:"protocol,omitempty" tf:"protocol"`
}

type CloudServiceSpecTrace struct {
	InstrumentationKey *string `json:"instrumentationKey" tf:"instrumentation_key"`
	// +optional
	SampleRate *float64 `json:"sampleRate,omitempty" tf:"sample_rate"`
}

type CloudServiceSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`

	// +optional
	ConfigServerGitSetting *CloudServiceSpecConfigServerGitSetting `json:"configServerGitSetting,omitempty" tf:"config_server_git_setting"`
	Location               *string                                 `json:"location" tf:"location"`
	Name                   *string                                 `json:"name" tf:"name"`
	// +optional
	Network *CloudServiceSpecNetwork `json:"network,omitempty" tf:"network"`
	// +optional
	OutboundPublicIPAddresses []string `json:"outboundPublicIPAddresses,omitempty" tf:"outbound_public_ip_addresses"`
	// +optional
	RequiredNetworkTrafficRules []CloudServiceSpecRequiredNetworkTrafficRules `json:"requiredNetworkTrafficRules,omitempty" tf:"required_network_traffic_rules"`
	ResourceGroupName           *string                                       `json:"resourceGroupName" tf:"resource_group_name"`
	// +optional
	SkuName *string `json:"skuName,omitempty" tf:"sku_name"`
	// +optional
	Tags *map[string]string `json:"tags,omitempty" tf:"tags"`
	// +optional
	Trace *CloudServiceSpecTrace `json:"trace,omitempty" tf:"trace"`
}

type CloudServiceStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// CloudServiceList is a list of CloudServices
type CloudServiceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of CloudService CRD objects
	Items []CloudService `json:"items,omitempty"`
}
