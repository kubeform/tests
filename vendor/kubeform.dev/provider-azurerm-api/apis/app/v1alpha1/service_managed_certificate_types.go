/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type ServiceManagedCertificate struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ServiceManagedCertificateSpec   `json:"spec,omitempty"`
	Status            ServiceManagedCertificateStatus `json:"status,omitempty"`
}

type ServiceManagedCertificateSpec struct {
	ServiceManagedCertificateSpec2 `json:",inline"`
	// +optional
	KubeformOutput ServiceManagedCertificateSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type ServiceManagedCertificateSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	CanonicalName           *string `json:"canonicalName,omitempty" tf:"canonical_name"`
	CustomHostnameBindingID *string `json:"customHostnameBindingID" tf:"custom_hostname_binding_id"`
	// +optional
	ExpirationDate *string `json:"expirationDate,omitempty" tf:"expiration_date"`
	// +optional
	FriendlyName *string `json:"friendlyName,omitempty" tf:"friendly_name"`
	// +optional
	HostNames []string `json:"hostNames,omitempty" tf:"host_names"`
	// +optional
	IssueDate *string `json:"issueDate,omitempty" tf:"issue_date"`
	// +optional
	Issuer *string `json:"issuer,omitempty" tf:"issuer"`
	// +optional
	SubjectName *string `json:"subjectName,omitempty" tf:"subject_name"`
	// +optional
	Tags *map[string]string `json:"tags,omitempty" tf:"tags"`
	// +optional
	Thumbprint *string `json:"thumbprint,omitempty" tf:"thumbprint"`
}

type ServiceManagedCertificateStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ServiceManagedCertificateList is a list of ServiceManagedCertificates
type ServiceManagedCertificateList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of ServiceManagedCertificate CRD objects
	Items []ServiceManagedCertificate `json:"items,omitempty"`
}
