/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type EventSubscription struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              EventSubscriptionSpec   `json:"spec,omitempty"`
	Status            EventSubscriptionStatus `json:"status,omitempty"`
}

type EventSubscriptionSpec struct {
	EventSubscriptionSpec2 `json:",inline"`
	// +optional
	KubeformOutput EventSubscriptionSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type EventSubscriptionSpecAdvancedFilterBoolEquals struct {
	Key   *string `json:"key" tf:"key"`
	Value *bool   `json:"value" tf:"value"`
}

type EventSubscriptionSpecAdvancedFilterNumberGreaterThan struct {
	Key   *string  `json:"key" tf:"key"`
	Value *float64 `json:"value" tf:"value"`
}

type EventSubscriptionSpecAdvancedFilterNumberGreaterThanOrEquals struct {
	Key   *string  `json:"key" tf:"key"`
	Value *float64 `json:"value" tf:"value"`
}

type EventSubscriptionSpecAdvancedFilterNumberIn struct {
	Key *string `json:"key" tf:"key"`
	// +kubebuilder:validation:MaxItems=25
	Values []float64 `json:"values" tf:"values"`
}

type EventSubscriptionSpecAdvancedFilterNumberLessThan struct {
	Key   *string  `json:"key" tf:"key"`
	Value *float64 `json:"value" tf:"value"`
}

type EventSubscriptionSpecAdvancedFilterNumberLessThanOrEquals struct {
	Key   *string  `json:"key" tf:"key"`
	Value *float64 `json:"value" tf:"value"`
}

type EventSubscriptionSpecAdvancedFilterNumberNotIn struct {
	Key *string `json:"key" tf:"key"`
	// +kubebuilder:validation:MaxItems=25
	Values []float64 `json:"values" tf:"values"`
}

type EventSubscriptionSpecAdvancedFilterStringBeginsWith struct {
	Key *string `json:"key" tf:"key"`
	// +kubebuilder:validation:MaxItems=25
	Values []string `json:"values" tf:"values"`
}

type EventSubscriptionSpecAdvancedFilterStringContains struct {
	Key *string `json:"key" tf:"key"`
	// +kubebuilder:validation:MaxItems=25
	Values []string `json:"values" tf:"values"`
}

type EventSubscriptionSpecAdvancedFilterStringEndsWith struct {
	Key *string `json:"key" tf:"key"`
	// +kubebuilder:validation:MaxItems=25
	Values []string `json:"values" tf:"values"`
}

type EventSubscriptionSpecAdvancedFilterStringIn struct {
	Key *string `json:"key" tf:"key"`
	// +kubebuilder:validation:MaxItems=25
	Values []string `json:"values" tf:"values"`
}

type EventSubscriptionSpecAdvancedFilterStringNotIn struct {
	Key *string `json:"key" tf:"key"`
	// +kubebuilder:validation:MaxItems=25
	Values []string `json:"values" tf:"values"`
}

type EventSubscriptionSpecAdvancedFilter struct {
	// +optional
	BoolEquals []EventSubscriptionSpecAdvancedFilterBoolEquals `json:"boolEquals,omitempty" tf:"bool_equals"`
	// +optional
	NumberGreaterThan []EventSubscriptionSpecAdvancedFilterNumberGreaterThan `json:"numberGreaterThan,omitempty" tf:"number_greater_than"`
	// +optional
	NumberGreaterThanOrEquals []EventSubscriptionSpecAdvancedFilterNumberGreaterThanOrEquals `json:"numberGreaterThanOrEquals,omitempty" tf:"number_greater_than_or_equals"`
	// +optional
	NumberIn []EventSubscriptionSpecAdvancedFilterNumberIn `json:"numberIn,omitempty" tf:"number_in"`
	// +optional
	NumberLessThan []EventSubscriptionSpecAdvancedFilterNumberLessThan `json:"numberLessThan,omitempty" tf:"number_less_than"`
	// +optional
	NumberLessThanOrEquals []EventSubscriptionSpecAdvancedFilterNumberLessThanOrEquals `json:"numberLessThanOrEquals,omitempty" tf:"number_less_than_or_equals"`
	// +optional
	NumberNotIn []EventSubscriptionSpecAdvancedFilterNumberNotIn `json:"numberNotIn,omitempty" tf:"number_not_in"`
	// +optional
	StringBeginsWith []EventSubscriptionSpecAdvancedFilterStringBeginsWith `json:"stringBeginsWith,omitempty" tf:"string_begins_with"`
	// +optional
	StringContains []EventSubscriptionSpecAdvancedFilterStringContains `json:"stringContains,omitempty" tf:"string_contains"`
	// +optional
	StringEndsWith []EventSubscriptionSpecAdvancedFilterStringEndsWith `json:"stringEndsWith,omitempty" tf:"string_ends_with"`
	// +optional
	StringIn []EventSubscriptionSpecAdvancedFilterStringIn `json:"stringIn,omitempty" tf:"string_in"`
	// +optional
	StringNotIn []EventSubscriptionSpecAdvancedFilterStringNotIn `json:"stringNotIn,omitempty" tf:"string_not_in"`
}

type EventSubscriptionSpecAzureFunctionEndpoint struct {
	FunctionID *string `json:"functionID" tf:"function_id"`
	// +optional
	MaxEventsPerBatch *int64 `json:"maxEventsPerBatch,omitempty" tf:"max_events_per_batch"`
	// +optional
	PreferredBatchSizeInKilobytes *int64 `json:"preferredBatchSizeInKilobytes,omitempty" tf:"preferred_batch_size_in_kilobytes"`
}

type EventSubscriptionSpecEventhubEndpoint struct {
	// +optional
	EventhubID *string `json:"eventhubID,omitempty" tf:"eventhub_id"`
}

type EventSubscriptionSpecHybridConnectionEndpoint struct {
	// +optional
	HybridConnectionID *string `json:"hybridConnectionID,omitempty" tf:"hybrid_connection_id"`
}

type EventSubscriptionSpecRetryPolicy struct {
	EventTimeToLive     *int64 `json:"eventTimeToLive" tf:"event_time_to_live"`
	MaxDeliveryAttempts *int64 `json:"maxDeliveryAttempts" tf:"max_delivery_attempts"`
}

type EventSubscriptionSpecStorageBlobDeadLetterDestination struct {
	StorageAccountID         *string `json:"storageAccountID" tf:"storage_account_id"`
	StorageBlobContainerName *string `json:"storageBlobContainerName" tf:"storage_blob_container_name"`
}

type EventSubscriptionSpecStorageQueueEndpoint struct {
	QueueName        *string `json:"queueName" tf:"queue_name"`
	StorageAccountID *string `json:"storageAccountID" tf:"storage_account_id"`
}

type EventSubscriptionSpecSubjectFilter struct {
	// +optional
	CaseSensitive *bool `json:"caseSensitive,omitempty" tf:"case_sensitive"`
	// +optional
	SubjectBeginsWith *string `json:"subjectBeginsWith,omitempty" tf:"subject_begins_with"`
	// +optional
	SubjectEndsWith *string `json:"subjectEndsWith,omitempty" tf:"subject_ends_with"`
}

type EventSubscriptionSpecWebhookEndpoint struct {
	// +optional
	ActiveDirectoryAppIDOrURI *string `json:"activeDirectoryAppIDOrURI,omitempty" tf:"active_directory_app_id_or_uri"`
	// +optional
	ActiveDirectoryTenantID *string `json:"activeDirectoryTenantID,omitempty" tf:"active_directory_tenant_id"`
	// +optional
	BaseURL *string `json:"baseURL,omitempty" tf:"base_url"`
	// +optional
	MaxEventsPerBatch *int64 `json:"maxEventsPerBatch,omitempty" tf:"max_events_per_batch"`
	// +optional
	PreferredBatchSizeInKilobytes *int64  `json:"preferredBatchSizeInKilobytes,omitempty" tf:"preferred_batch_size_in_kilobytes"`
	Url                           *string `json:"url" tf:"url"`
}

type EventSubscriptionSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	AdvancedFilter *EventSubscriptionSpecAdvancedFilter `json:"advancedFilter,omitempty" tf:"advanced_filter"`
	// +optional
	AzureFunctionEndpoint *EventSubscriptionSpecAzureFunctionEndpoint `json:"azureFunctionEndpoint,omitempty" tf:"azure_function_endpoint"`
	// +optional
	EventDeliverySchema *string `json:"eventDeliverySchema,omitempty" tf:"event_delivery_schema"`
	// +optional
	// Deprecated
	EventhubEndpoint *EventSubscriptionSpecEventhubEndpoint `json:"eventhubEndpoint,omitempty" tf:"eventhub_endpoint"`
	// +optional
	EventhubEndpointID *string `json:"eventhubEndpointID,omitempty" tf:"eventhub_endpoint_id"`
	// +optional
	ExpirationTimeUtc *string `json:"expirationTimeUtc,omitempty" tf:"expiration_time_utc"`
	// +optional
	// Deprecated
	HybridConnectionEndpoint *EventSubscriptionSpecHybridConnectionEndpoint `json:"hybridConnectionEndpoint,omitempty" tf:"hybrid_connection_endpoint"`
	// +optional
	HybridConnectionEndpointID *string `json:"hybridConnectionEndpointID,omitempty" tf:"hybrid_connection_endpoint_id"`
	// +optional
	IncludedEventTypes []string `json:"includedEventTypes,omitempty" tf:"included_event_types"`
	// +optional
	Labels []string `json:"labels,omitempty" tf:"labels"`
	Name   *string  `json:"name" tf:"name"`
	// +optional
	RetryPolicy *EventSubscriptionSpecRetryPolicy `json:"retryPolicy,omitempty" tf:"retry_policy"`
	Scope       *string                           `json:"scope" tf:"scope"`
	// +optional
	ServiceBusQueueEndpointID *string `json:"serviceBusQueueEndpointID,omitempty" tf:"service_bus_queue_endpoint_id"`
	// +optional
	ServiceBusTopicEndpointID *string `json:"serviceBusTopicEndpointID,omitempty" tf:"service_bus_topic_endpoint_id"`
	// +optional
	StorageBlobDeadLetterDestination *EventSubscriptionSpecStorageBlobDeadLetterDestination `json:"storageBlobDeadLetterDestination,omitempty" tf:"storage_blob_dead_letter_destination"`
	// +optional
	StorageQueueEndpoint *EventSubscriptionSpecStorageQueueEndpoint `json:"storageQueueEndpoint,omitempty" tf:"storage_queue_endpoint"`
	// +optional
	SubjectFilter *EventSubscriptionSpecSubjectFilter `json:"subjectFilter,omitempty" tf:"subject_filter"`
	// +optional
	// Deprecated
	TopicName *string `json:"topicName,omitempty" tf:"topic_name"`
	// +optional
	WebhookEndpoint *EventSubscriptionSpecWebhookEndpoint `json:"webhookEndpoint,omitempty" tf:"webhook_endpoint"`
}

type EventSubscriptionStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// EventSubscriptionList is a list of EventSubscriptions
type EventSubscriptionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of EventSubscription CRD objects
	Items []EventSubscription `json:"items,omitempty"`
}
