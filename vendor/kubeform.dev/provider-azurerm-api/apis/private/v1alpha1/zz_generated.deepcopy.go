// +build !ignore_autogenerated

/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	apiv1alpha1 "kubeform.dev/apimachinery/api/v1alpha1"

	runtime "k8s.io/apimachinery/pkg/runtime"
	v1 "kmodules.xyz/client-go/api/v1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsARecord) DeepCopyInto(out *DnsARecord) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsARecord.
func (in *DnsARecord) DeepCopy() *DnsARecord {
	if in == nil {
		return nil
	}
	out := new(DnsARecord)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DnsARecord) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsARecordList) DeepCopyInto(out *DnsARecordList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DnsARecord, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsARecordList.
func (in *DnsARecordList) DeepCopy() *DnsARecordList {
	if in == nil {
		return nil
	}
	out := new(DnsARecordList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DnsARecordList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsARecordSpec) DeepCopyInto(out *DnsARecordSpec) {
	*out = *in
	in.DnsARecordSpec2.DeepCopyInto(&out.DnsARecordSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsARecordSpec.
func (in *DnsARecordSpec) DeepCopy() *DnsARecordSpec {
	if in == nil {
		return nil
	}
	out := new(DnsARecordSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsARecordSpec2) DeepCopyInto(out *DnsARecordSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Records != nil {
		in, out := &in.Records, &out.Records
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Ttl != nil {
		in, out := &in.Ttl, &out.Ttl
		*out = new(int64)
		**out = **in
	}
	if in.ZoneName != nil {
		in, out := &in.ZoneName, &out.ZoneName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsARecordSpec2.
func (in *DnsARecordSpec2) DeepCopy() *DnsARecordSpec2 {
	if in == nil {
		return nil
	}
	out := new(DnsARecordSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsARecordStatus) DeepCopyInto(out *DnsARecordStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsARecordStatus.
func (in *DnsARecordStatus) DeepCopy() *DnsARecordStatus {
	if in == nil {
		return nil
	}
	out := new(DnsARecordStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsAaaaRecord) DeepCopyInto(out *DnsAaaaRecord) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsAaaaRecord.
func (in *DnsAaaaRecord) DeepCopy() *DnsAaaaRecord {
	if in == nil {
		return nil
	}
	out := new(DnsAaaaRecord)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DnsAaaaRecord) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsAaaaRecordList) DeepCopyInto(out *DnsAaaaRecordList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DnsAaaaRecord, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsAaaaRecordList.
func (in *DnsAaaaRecordList) DeepCopy() *DnsAaaaRecordList {
	if in == nil {
		return nil
	}
	out := new(DnsAaaaRecordList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DnsAaaaRecordList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsAaaaRecordSpec) DeepCopyInto(out *DnsAaaaRecordSpec) {
	*out = *in
	in.DnsAaaaRecordSpec2.DeepCopyInto(&out.DnsAaaaRecordSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsAaaaRecordSpec.
func (in *DnsAaaaRecordSpec) DeepCopy() *DnsAaaaRecordSpec {
	if in == nil {
		return nil
	}
	out := new(DnsAaaaRecordSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsAaaaRecordSpec2) DeepCopyInto(out *DnsAaaaRecordSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Records != nil {
		in, out := &in.Records, &out.Records
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Ttl != nil {
		in, out := &in.Ttl, &out.Ttl
		*out = new(int64)
		**out = **in
	}
	if in.ZoneName != nil {
		in, out := &in.ZoneName, &out.ZoneName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsAaaaRecordSpec2.
func (in *DnsAaaaRecordSpec2) DeepCopy() *DnsAaaaRecordSpec2 {
	if in == nil {
		return nil
	}
	out := new(DnsAaaaRecordSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsAaaaRecordStatus) DeepCopyInto(out *DnsAaaaRecordStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsAaaaRecordStatus.
func (in *DnsAaaaRecordStatus) DeepCopy() *DnsAaaaRecordStatus {
	if in == nil {
		return nil
	}
	out := new(DnsAaaaRecordStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsCnameRecord) DeepCopyInto(out *DnsCnameRecord) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsCnameRecord.
func (in *DnsCnameRecord) DeepCopy() *DnsCnameRecord {
	if in == nil {
		return nil
	}
	out := new(DnsCnameRecord)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DnsCnameRecord) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsCnameRecordList) DeepCopyInto(out *DnsCnameRecordList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DnsCnameRecord, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsCnameRecordList.
func (in *DnsCnameRecordList) DeepCopy() *DnsCnameRecordList {
	if in == nil {
		return nil
	}
	out := new(DnsCnameRecordList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DnsCnameRecordList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsCnameRecordSpec) DeepCopyInto(out *DnsCnameRecordSpec) {
	*out = *in
	in.DnsCnameRecordSpec2.DeepCopyInto(&out.DnsCnameRecordSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsCnameRecordSpec.
func (in *DnsCnameRecordSpec) DeepCopy() *DnsCnameRecordSpec {
	if in == nil {
		return nil
	}
	out := new(DnsCnameRecordSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsCnameRecordSpec2) DeepCopyInto(out *DnsCnameRecordSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Record != nil {
		in, out := &in.Record, &out.Record
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Ttl != nil {
		in, out := &in.Ttl, &out.Ttl
		*out = new(int64)
		**out = **in
	}
	if in.ZoneName != nil {
		in, out := &in.ZoneName, &out.ZoneName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsCnameRecordSpec2.
func (in *DnsCnameRecordSpec2) DeepCopy() *DnsCnameRecordSpec2 {
	if in == nil {
		return nil
	}
	out := new(DnsCnameRecordSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsCnameRecordStatus) DeepCopyInto(out *DnsCnameRecordStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsCnameRecordStatus.
func (in *DnsCnameRecordStatus) DeepCopy() *DnsCnameRecordStatus {
	if in == nil {
		return nil
	}
	out := new(DnsCnameRecordStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsMxRecord) DeepCopyInto(out *DnsMxRecord) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsMxRecord.
func (in *DnsMxRecord) DeepCopy() *DnsMxRecord {
	if in == nil {
		return nil
	}
	out := new(DnsMxRecord)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DnsMxRecord) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsMxRecordList) DeepCopyInto(out *DnsMxRecordList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DnsMxRecord, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsMxRecordList.
func (in *DnsMxRecordList) DeepCopy() *DnsMxRecordList {
	if in == nil {
		return nil
	}
	out := new(DnsMxRecordList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DnsMxRecordList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsMxRecordSpec) DeepCopyInto(out *DnsMxRecordSpec) {
	*out = *in
	in.DnsMxRecordSpec2.DeepCopyInto(&out.DnsMxRecordSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsMxRecordSpec.
func (in *DnsMxRecordSpec) DeepCopy() *DnsMxRecordSpec {
	if in == nil {
		return nil
	}
	out := new(DnsMxRecordSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsMxRecordSpec2) DeepCopyInto(out *DnsMxRecordSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Record != nil {
		in, out := &in.Record, &out.Record
		*out = make([]DnsMxRecordSpecRecord, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Ttl != nil {
		in, out := &in.Ttl, &out.Ttl
		*out = new(int64)
		**out = **in
	}
	if in.ZoneName != nil {
		in, out := &in.ZoneName, &out.ZoneName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsMxRecordSpec2.
func (in *DnsMxRecordSpec2) DeepCopy() *DnsMxRecordSpec2 {
	if in == nil {
		return nil
	}
	out := new(DnsMxRecordSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsMxRecordSpecRecord) DeepCopyInto(out *DnsMxRecordSpecRecord) {
	*out = *in
	if in.Exchange != nil {
		in, out := &in.Exchange, &out.Exchange
		*out = new(string)
		**out = **in
	}
	if in.Preference != nil {
		in, out := &in.Preference, &out.Preference
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsMxRecordSpecRecord.
func (in *DnsMxRecordSpecRecord) DeepCopy() *DnsMxRecordSpecRecord {
	if in == nil {
		return nil
	}
	out := new(DnsMxRecordSpecRecord)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsMxRecordStatus) DeepCopyInto(out *DnsMxRecordStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsMxRecordStatus.
func (in *DnsMxRecordStatus) DeepCopy() *DnsMxRecordStatus {
	if in == nil {
		return nil
	}
	out := new(DnsMxRecordStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsPtrRecord) DeepCopyInto(out *DnsPtrRecord) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsPtrRecord.
func (in *DnsPtrRecord) DeepCopy() *DnsPtrRecord {
	if in == nil {
		return nil
	}
	out := new(DnsPtrRecord)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DnsPtrRecord) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsPtrRecordList) DeepCopyInto(out *DnsPtrRecordList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DnsPtrRecord, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsPtrRecordList.
func (in *DnsPtrRecordList) DeepCopy() *DnsPtrRecordList {
	if in == nil {
		return nil
	}
	out := new(DnsPtrRecordList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DnsPtrRecordList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsPtrRecordSpec) DeepCopyInto(out *DnsPtrRecordSpec) {
	*out = *in
	in.DnsPtrRecordSpec2.DeepCopyInto(&out.DnsPtrRecordSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsPtrRecordSpec.
func (in *DnsPtrRecordSpec) DeepCopy() *DnsPtrRecordSpec {
	if in == nil {
		return nil
	}
	out := new(DnsPtrRecordSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsPtrRecordSpec2) DeepCopyInto(out *DnsPtrRecordSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Records != nil {
		in, out := &in.Records, &out.Records
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Ttl != nil {
		in, out := &in.Ttl, &out.Ttl
		*out = new(int64)
		**out = **in
	}
	if in.ZoneName != nil {
		in, out := &in.ZoneName, &out.ZoneName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsPtrRecordSpec2.
func (in *DnsPtrRecordSpec2) DeepCopy() *DnsPtrRecordSpec2 {
	if in == nil {
		return nil
	}
	out := new(DnsPtrRecordSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsPtrRecordStatus) DeepCopyInto(out *DnsPtrRecordStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsPtrRecordStatus.
func (in *DnsPtrRecordStatus) DeepCopy() *DnsPtrRecordStatus {
	if in == nil {
		return nil
	}
	out := new(DnsPtrRecordStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsSrvRecord) DeepCopyInto(out *DnsSrvRecord) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsSrvRecord.
func (in *DnsSrvRecord) DeepCopy() *DnsSrvRecord {
	if in == nil {
		return nil
	}
	out := new(DnsSrvRecord)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DnsSrvRecord) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsSrvRecordList) DeepCopyInto(out *DnsSrvRecordList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DnsSrvRecord, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsSrvRecordList.
func (in *DnsSrvRecordList) DeepCopy() *DnsSrvRecordList {
	if in == nil {
		return nil
	}
	out := new(DnsSrvRecordList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DnsSrvRecordList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsSrvRecordSpec) DeepCopyInto(out *DnsSrvRecordSpec) {
	*out = *in
	in.DnsSrvRecordSpec2.DeepCopyInto(&out.DnsSrvRecordSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsSrvRecordSpec.
func (in *DnsSrvRecordSpec) DeepCopy() *DnsSrvRecordSpec {
	if in == nil {
		return nil
	}
	out := new(DnsSrvRecordSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsSrvRecordSpec2) DeepCopyInto(out *DnsSrvRecordSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Record != nil {
		in, out := &in.Record, &out.Record
		*out = make([]DnsSrvRecordSpecRecord, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Ttl != nil {
		in, out := &in.Ttl, &out.Ttl
		*out = new(int64)
		**out = **in
	}
	if in.ZoneName != nil {
		in, out := &in.ZoneName, &out.ZoneName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsSrvRecordSpec2.
func (in *DnsSrvRecordSpec2) DeepCopy() *DnsSrvRecordSpec2 {
	if in == nil {
		return nil
	}
	out := new(DnsSrvRecordSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsSrvRecordSpecRecord) DeepCopyInto(out *DnsSrvRecordSpecRecord) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int64)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsSrvRecordSpecRecord.
func (in *DnsSrvRecordSpecRecord) DeepCopy() *DnsSrvRecordSpecRecord {
	if in == nil {
		return nil
	}
	out := new(DnsSrvRecordSpecRecord)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsSrvRecordStatus) DeepCopyInto(out *DnsSrvRecordStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsSrvRecordStatus.
func (in *DnsSrvRecordStatus) DeepCopy() *DnsSrvRecordStatus {
	if in == nil {
		return nil
	}
	out := new(DnsSrvRecordStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsTxtRecord) DeepCopyInto(out *DnsTxtRecord) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsTxtRecord.
func (in *DnsTxtRecord) DeepCopy() *DnsTxtRecord {
	if in == nil {
		return nil
	}
	out := new(DnsTxtRecord)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DnsTxtRecord) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsTxtRecordList) DeepCopyInto(out *DnsTxtRecordList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DnsTxtRecord, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsTxtRecordList.
func (in *DnsTxtRecordList) DeepCopy() *DnsTxtRecordList {
	if in == nil {
		return nil
	}
	out := new(DnsTxtRecordList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DnsTxtRecordList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsTxtRecordSpec) DeepCopyInto(out *DnsTxtRecordSpec) {
	*out = *in
	in.DnsTxtRecordSpec2.DeepCopyInto(&out.DnsTxtRecordSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsTxtRecordSpec.
func (in *DnsTxtRecordSpec) DeepCopy() *DnsTxtRecordSpec {
	if in == nil {
		return nil
	}
	out := new(DnsTxtRecordSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsTxtRecordSpec2) DeepCopyInto(out *DnsTxtRecordSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Record != nil {
		in, out := &in.Record, &out.Record
		*out = make([]DnsTxtRecordSpecRecord, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Ttl != nil {
		in, out := &in.Ttl, &out.Ttl
		*out = new(int64)
		**out = **in
	}
	if in.ZoneName != nil {
		in, out := &in.ZoneName, &out.ZoneName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsTxtRecordSpec2.
func (in *DnsTxtRecordSpec2) DeepCopy() *DnsTxtRecordSpec2 {
	if in == nil {
		return nil
	}
	out := new(DnsTxtRecordSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsTxtRecordSpecRecord) DeepCopyInto(out *DnsTxtRecordSpecRecord) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsTxtRecordSpecRecord.
func (in *DnsTxtRecordSpecRecord) DeepCopy() *DnsTxtRecordSpecRecord {
	if in == nil {
		return nil
	}
	out := new(DnsTxtRecordSpecRecord)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsTxtRecordStatus) DeepCopyInto(out *DnsTxtRecordStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsTxtRecordStatus.
func (in *DnsTxtRecordStatus) DeepCopy() *DnsTxtRecordStatus {
	if in == nil {
		return nil
	}
	out := new(DnsTxtRecordStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsZone) DeepCopyInto(out *DnsZone) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsZone.
func (in *DnsZone) DeepCopy() *DnsZone {
	if in == nil {
		return nil
	}
	out := new(DnsZone)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DnsZone) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsZoneList) DeepCopyInto(out *DnsZoneList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DnsZone, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsZoneList.
func (in *DnsZoneList) DeepCopy() *DnsZoneList {
	if in == nil {
		return nil
	}
	out := new(DnsZoneList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DnsZoneList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsZoneSpec) DeepCopyInto(out *DnsZoneSpec) {
	*out = *in
	in.DnsZoneSpec2.DeepCopyInto(&out.DnsZoneSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsZoneSpec.
func (in *DnsZoneSpec) DeepCopy() *DnsZoneSpec {
	if in == nil {
		return nil
	}
	out := new(DnsZoneSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsZoneSpec2) DeepCopyInto(out *DnsZoneSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.MaxNumberOfRecordSets != nil {
		in, out := &in.MaxNumberOfRecordSets, &out.MaxNumberOfRecordSets
		*out = new(int64)
		**out = **in
	}
	if in.MaxNumberOfVirtualNetworkLinks != nil {
		in, out := &in.MaxNumberOfVirtualNetworkLinks, &out.MaxNumberOfVirtualNetworkLinks
		*out = new(int64)
		**out = **in
	}
	if in.MaxNumberOfVirtualNetworkLinksWithRegistration != nil {
		in, out := &in.MaxNumberOfVirtualNetworkLinksWithRegistration, &out.MaxNumberOfVirtualNetworkLinksWithRegistration
		*out = new(int64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NumberOfRecordSets != nil {
		in, out := &in.NumberOfRecordSets, &out.NumberOfRecordSets
		*out = new(int64)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.SoaRecord != nil {
		in, out := &in.SoaRecord, &out.SoaRecord
		*out = new(DnsZoneSpecSoaRecord)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsZoneSpec2.
func (in *DnsZoneSpec2) DeepCopy() *DnsZoneSpec2 {
	if in == nil {
		return nil
	}
	out := new(DnsZoneSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsZoneSpecSoaRecord) DeepCopyInto(out *DnsZoneSpecSoaRecord) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.ExpireTime != nil {
		in, out := &in.ExpireTime, &out.ExpireTime
		*out = new(int64)
		**out = **in
	}
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.HostName != nil {
		in, out := &in.HostName, &out.HostName
		*out = new(string)
		**out = **in
	}
	if in.MinimumTtl != nil {
		in, out := &in.MinimumTtl, &out.MinimumTtl
		*out = new(int64)
		**out = **in
	}
	if in.RefreshTime != nil {
		in, out := &in.RefreshTime, &out.RefreshTime
		*out = new(int64)
		**out = **in
	}
	if in.RetryTime != nil {
		in, out := &in.RetryTime, &out.RetryTime
		*out = new(int64)
		**out = **in
	}
	if in.SerialNumber != nil {
		in, out := &in.SerialNumber, &out.SerialNumber
		*out = new(int64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Ttl != nil {
		in, out := &in.Ttl, &out.Ttl
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsZoneSpecSoaRecord.
func (in *DnsZoneSpecSoaRecord) DeepCopy() *DnsZoneSpecSoaRecord {
	if in == nil {
		return nil
	}
	out := new(DnsZoneSpecSoaRecord)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsZoneStatus) DeepCopyInto(out *DnsZoneStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsZoneStatus.
func (in *DnsZoneStatus) DeepCopy() *DnsZoneStatus {
	if in == nil {
		return nil
	}
	out := new(DnsZoneStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsZoneVirtualNetworkLink) DeepCopyInto(out *DnsZoneVirtualNetworkLink) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsZoneVirtualNetworkLink.
func (in *DnsZoneVirtualNetworkLink) DeepCopy() *DnsZoneVirtualNetworkLink {
	if in == nil {
		return nil
	}
	out := new(DnsZoneVirtualNetworkLink)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DnsZoneVirtualNetworkLink) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsZoneVirtualNetworkLinkList) DeepCopyInto(out *DnsZoneVirtualNetworkLinkList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DnsZoneVirtualNetworkLink, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsZoneVirtualNetworkLinkList.
func (in *DnsZoneVirtualNetworkLinkList) DeepCopy() *DnsZoneVirtualNetworkLinkList {
	if in == nil {
		return nil
	}
	out := new(DnsZoneVirtualNetworkLinkList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DnsZoneVirtualNetworkLinkList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsZoneVirtualNetworkLinkSpec) DeepCopyInto(out *DnsZoneVirtualNetworkLinkSpec) {
	*out = *in
	in.DnsZoneVirtualNetworkLinkSpec2.DeepCopyInto(&out.DnsZoneVirtualNetworkLinkSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsZoneVirtualNetworkLinkSpec.
func (in *DnsZoneVirtualNetworkLinkSpec) DeepCopy() *DnsZoneVirtualNetworkLinkSpec {
	if in == nil {
		return nil
	}
	out := new(DnsZoneVirtualNetworkLinkSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsZoneVirtualNetworkLinkSpec2) DeepCopyInto(out *DnsZoneVirtualNetworkLinkSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrivateDNSZoneName != nil {
		in, out := &in.PrivateDNSZoneName, &out.PrivateDNSZoneName
		*out = new(string)
		**out = **in
	}
	if in.RegistrationEnabled != nil {
		in, out := &in.RegistrationEnabled, &out.RegistrationEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.VirtualNetworkID != nil {
		in, out := &in.VirtualNetworkID, &out.VirtualNetworkID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsZoneVirtualNetworkLinkSpec2.
func (in *DnsZoneVirtualNetworkLinkSpec2) DeepCopy() *DnsZoneVirtualNetworkLinkSpec2 {
	if in == nil {
		return nil
	}
	out := new(DnsZoneVirtualNetworkLinkSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DnsZoneVirtualNetworkLinkStatus) DeepCopyInto(out *DnsZoneVirtualNetworkLinkStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DnsZoneVirtualNetworkLinkStatus.
func (in *DnsZoneVirtualNetworkLinkStatus) DeepCopy() *DnsZoneVirtualNetworkLinkStatus {
	if in == nil {
		return nil
	}
	out := new(DnsZoneVirtualNetworkLinkStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Endpoint) DeepCopyInto(out *Endpoint) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Endpoint.
func (in *Endpoint) DeepCopy() *Endpoint {
	if in == nil {
		return nil
	}
	out := new(Endpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Endpoint) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointList) DeepCopyInto(out *EndpointList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Endpoint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointList.
func (in *EndpointList) DeepCopy() *EndpointList {
	if in == nil {
		return nil
	}
	out := new(EndpointList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EndpointList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointSpec) DeepCopyInto(out *EndpointSpec) {
	*out = *in
	in.EndpointSpec2.DeepCopyInto(&out.EndpointSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointSpec.
func (in *EndpointSpec) DeepCopy() *EndpointSpec {
	if in == nil {
		return nil
	}
	out := new(EndpointSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointSpec2) DeepCopyInto(out *EndpointSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.CustomDNSConfigs != nil {
		in, out := &in.CustomDNSConfigs, &out.CustomDNSConfigs
		*out = make([]EndpointSpecCustomDNSConfigs, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrivateDNSZoneConfigs != nil {
		in, out := &in.PrivateDNSZoneConfigs, &out.PrivateDNSZoneConfigs
		*out = make([]EndpointSpecPrivateDNSZoneConfigs, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateDNSZoneGroup != nil {
		in, out := &in.PrivateDNSZoneGroup, &out.PrivateDNSZoneGroup
		*out = new(EndpointSpecPrivateDNSZoneGroup)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivateServiceConnection != nil {
		in, out := &in.PrivateServiceConnection, &out.PrivateServiceConnection
		*out = new(EndpointSpecPrivateServiceConnection)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointSpec2.
func (in *EndpointSpec2) DeepCopy() *EndpointSpec2 {
	if in == nil {
		return nil
	}
	out := new(EndpointSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointSpecCustomDNSConfigs) DeepCopyInto(out *EndpointSpecCustomDNSConfigs) {
	*out = *in
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.IpAddresses != nil {
		in, out := &in.IpAddresses, &out.IpAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointSpecCustomDNSConfigs.
func (in *EndpointSpecCustomDNSConfigs) DeepCopy() *EndpointSpecCustomDNSConfigs {
	if in == nil {
		return nil
	}
	out := new(EndpointSpecCustomDNSConfigs)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointSpecPrivateDNSZoneConfigs) DeepCopyInto(out *EndpointSpecPrivateDNSZoneConfigs) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrivateDNSZoneID != nil {
		in, out := &in.PrivateDNSZoneID, &out.PrivateDNSZoneID
		*out = new(string)
		**out = **in
	}
	if in.RecordSets != nil {
		in, out := &in.RecordSets, &out.RecordSets
		*out = make([]EndpointSpecPrivateDNSZoneConfigsRecordSets, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointSpecPrivateDNSZoneConfigs.
func (in *EndpointSpecPrivateDNSZoneConfigs) DeepCopy() *EndpointSpecPrivateDNSZoneConfigs {
	if in == nil {
		return nil
	}
	out := new(EndpointSpecPrivateDNSZoneConfigs)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointSpecPrivateDNSZoneConfigsRecordSets) DeepCopyInto(out *EndpointSpecPrivateDNSZoneConfigsRecordSets) {
	*out = *in
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.IpAddresses != nil {
		in, out := &in.IpAddresses, &out.IpAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Ttl != nil {
		in, out := &in.Ttl, &out.Ttl
		*out = new(int64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointSpecPrivateDNSZoneConfigsRecordSets.
func (in *EndpointSpecPrivateDNSZoneConfigsRecordSets) DeepCopy() *EndpointSpecPrivateDNSZoneConfigsRecordSets {
	if in == nil {
		return nil
	}
	out := new(EndpointSpecPrivateDNSZoneConfigsRecordSets)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointSpecPrivateDNSZoneGroup) DeepCopyInto(out *EndpointSpecPrivateDNSZoneGroup) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrivateDNSZoneIDS != nil {
		in, out := &in.PrivateDNSZoneIDS, &out.PrivateDNSZoneIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointSpecPrivateDNSZoneGroup.
func (in *EndpointSpecPrivateDNSZoneGroup) DeepCopy() *EndpointSpecPrivateDNSZoneGroup {
	if in == nil {
		return nil
	}
	out := new(EndpointSpecPrivateDNSZoneGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointSpecPrivateServiceConnection) DeepCopyInto(out *EndpointSpecPrivateServiceConnection) {
	*out = *in
	if in.IsManualConnection != nil {
		in, out := &in.IsManualConnection, &out.IsManualConnection
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PrivateConnectionResourceAlias != nil {
		in, out := &in.PrivateConnectionResourceAlias, &out.PrivateConnectionResourceAlias
		*out = new(string)
		**out = **in
	}
	if in.PrivateConnectionResourceID != nil {
		in, out := &in.PrivateConnectionResourceID, &out.PrivateConnectionResourceID
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.RequestMessage != nil {
		in, out := &in.RequestMessage, &out.RequestMessage
		*out = new(string)
		**out = **in
	}
	if in.SubresourceNames != nil {
		in, out := &in.SubresourceNames, &out.SubresourceNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointSpecPrivateServiceConnection.
func (in *EndpointSpecPrivateServiceConnection) DeepCopy() *EndpointSpecPrivateServiceConnection {
	if in == nil {
		return nil
	}
	out := new(EndpointSpecPrivateServiceConnection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointStatus) DeepCopyInto(out *EndpointStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointStatus.
func (in *EndpointStatus) DeepCopy() *EndpointStatus {
	if in == nil {
		return nil
	}
	out := new(EndpointStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinkService) DeepCopyInto(out *LinkService) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinkService.
func (in *LinkService) DeepCopy() *LinkService {
	if in == nil {
		return nil
	}
	out := new(LinkService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LinkService) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinkServiceList) DeepCopyInto(out *LinkServiceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LinkService, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinkServiceList.
func (in *LinkServiceList) DeepCopy() *LinkServiceList {
	if in == nil {
		return nil
	}
	out := new(LinkServiceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LinkServiceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinkServiceSpec) DeepCopyInto(out *LinkServiceSpec) {
	*out = *in
	in.LinkServiceSpec2.DeepCopyInto(&out.LinkServiceSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinkServiceSpec.
func (in *LinkServiceSpec) DeepCopy() *LinkServiceSpec {
	if in == nil {
		return nil
	}
	out := new(LinkServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinkServiceSpec2) DeepCopyInto(out *LinkServiceSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.Alias != nil {
		in, out := &in.Alias, &out.Alias
		*out = new(string)
		**out = **in
	}
	if in.AutoApprovalSubscriptionIDS != nil {
		in, out := &in.AutoApprovalSubscriptionIDS, &out.AutoApprovalSubscriptionIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.EnableProxyProtocol != nil {
		in, out := &in.EnableProxyProtocol, &out.EnableProxyProtocol
		*out = new(bool)
		**out = **in
	}
	if in.LoadBalancerFrontendIPConfigurationIDS != nil {
		in, out := &in.LoadBalancerFrontendIPConfigurationIDS, &out.LoadBalancerFrontendIPConfigurationIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NatIPConfiguration != nil {
		in, out := &in.NatIPConfiguration, &out.NatIPConfiguration
		*out = make([]LinkServiceSpecNatIPConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.VisibilitySubscriptionIDS != nil {
		in, out := &in.VisibilitySubscriptionIDS, &out.VisibilitySubscriptionIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinkServiceSpec2.
func (in *LinkServiceSpec2) DeepCopy() *LinkServiceSpec2 {
	if in == nil {
		return nil
	}
	out := new(LinkServiceSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinkServiceSpecNatIPConfiguration) DeepCopyInto(out *LinkServiceSpecNatIPConfiguration) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Primary != nil {
		in, out := &in.Primary, &out.Primary
		*out = new(bool)
		**out = **in
	}
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddressVersion != nil {
		in, out := &in.PrivateIPAddressVersion, &out.PrivateIPAddressVersion
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinkServiceSpecNatIPConfiguration.
func (in *LinkServiceSpecNatIPConfiguration) DeepCopy() *LinkServiceSpecNatIPConfiguration {
	if in == nil {
		return nil
	}
	out := new(LinkServiceSpecNatIPConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinkServiceStatus) DeepCopyInto(out *LinkServiceStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinkServiceStatus.
func (in *LinkServiceStatus) DeepCopy() *LinkServiceStatus {
	if in == nil {
		return nil
	}
	out := new(LinkServiceStatus)
	in.DeepCopyInto(out)
	return out
}
