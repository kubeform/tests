/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type AlertRuleScheduled struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AlertRuleScheduledSpec   `json:"spec,omitempty"`
	Status            AlertRuleScheduledStatus `json:"status,omitempty"`
}

type AlertRuleScheduledSpec struct {
	AlertRuleScheduledSpec2 `json:",inline"`
	// +optional
	KubeformOutput AlertRuleScheduledSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type AlertRuleScheduledSpecEventGrouping struct {
	AggregationMethod *string `json:"aggregationMethod" tf:"aggregation_method"`
}

type AlertRuleScheduledSpecIncidentConfigurationGrouping struct {
	// +optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled"`
	// +optional
	EntityMatchingMethod *string `json:"entityMatchingMethod,omitempty" tf:"entity_matching_method"`
	// +optional
	GroupBy []string `json:"groupBy,omitempty" tf:"group_by"`
	// +optional
	LookbackDuration *string `json:"lookbackDuration,omitempty" tf:"lookback_duration"`
	// +optional
	ReopenClosedIncidents *bool `json:"reopenClosedIncidents,omitempty" tf:"reopen_closed_incidents"`
}

type AlertRuleScheduledSpecIncidentConfiguration struct {
	CreateIncident *bool                                                `json:"createIncident" tf:"create_incident"`
	Grouping       *AlertRuleScheduledSpecIncidentConfigurationGrouping `json:"grouping" tf:"grouping"`
}

type AlertRuleScheduledSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	AlertRuleTemplateGuid *string `json:"alertRuleTemplateGuid,omitempty" tf:"alert_rule_template_guid"`
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	DisplayName *string `json:"displayName" tf:"display_name"`
	// +optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled"`
	// +optional
	EventGrouping *AlertRuleScheduledSpecEventGrouping `json:"eventGrouping,omitempty" tf:"event_grouping"`
	// +optional
	IncidentConfiguration   *AlertRuleScheduledSpecIncidentConfiguration `json:"incidentConfiguration,omitempty" tf:"incident_configuration"`
	LogAnalyticsWorkspaceID *string                                      `json:"logAnalyticsWorkspaceID" tf:"log_analytics_workspace_id"`
	Name                    *string                                      `json:"name" tf:"name"`
	Query                   *string                                      `json:"query" tf:"query"`
	// +optional
	QueryFrequency *string `json:"queryFrequency,omitempty" tf:"query_frequency"`
	// +optional
	QueryPeriod *string `json:"queryPeriod,omitempty" tf:"query_period"`
	Severity    *string `json:"severity" tf:"severity"`
	// +optional
	SuppressionDuration *string `json:"suppressionDuration,omitempty" tf:"suppression_duration"`
	// +optional
	SuppressionEnabled *bool `json:"suppressionEnabled,omitempty" tf:"suppression_enabled"`
	// +optional
	Tactics []string `json:"tactics,omitempty" tf:"tactics"`
	// +optional
	TriggerOperator *string `json:"triggerOperator,omitempty" tf:"trigger_operator"`
	// +optional
	TriggerThreshold *int64 `json:"triggerThreshold,omitempty" tf:"trigger_threshold"`
}

type AlertRuleScheduledStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// AlertRuleScheduledList is a list of AlertRuleScheduleds
type AlertRuleScheduledList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of AlertRuleScheduled CRD objects
	Items []AlertRuleScheduled `json:"items,omitempty"`
}
