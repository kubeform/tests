/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type FailoverGroup struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              FailoverGroupSpec   `json:"spec,omitempty"`
	Status            FailoverGroupStatus `json:"status,omitempty"`
}

type FailoverGroupSpec struct {
	FailoverGroupSpec2 `json:",inline"`
	// +optional
	KubeformOutput FailoverGroupSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type FailoverGroupSpecPartnerServers struct {
	ID *string `json:"ID" tf:"id"`
	// +optional
	Location *string `json:"location,omitempty" tf:"location"`
	// +optional
	Role *string `json:"role,omitempty" tf:"role"`
}

type FailoverGroupSpecReadWriteEndpointFailoverPolicy struct {
	// +optional
	GraceMinutes *int64  `json:"graceMinutes,omitempty" tf:"grace_minutes"`
	Mode         *string `json:"mode" tf:"mode"`
}

type FailoverGroupSpecReadonlyEndpointFailoverPolicy struct {
	Mode *string `json:"mode" tf:"mode"`
}

type FailoverGroupSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	Databases []string `json:"databases,omitempty" tf:"databases"`
	// +optional
	Location                        *string                                           `json:"location,omitempty" tf:"location"`
	Name                            *string                                           `json:"name" tf:"name"`
	PartnerServers                  []FailoverGroupSpecPartnerServers                 `json:"partnerServers" tf:"partner_servers"`
	ReadWriteEndpointFailoverPolicy *FailoverGroupSpecReadWriteEndpointFailoverPolicy `json:"readWriteEndpointFailoverPolicy" tf:"read_write_endpoint_failover_policy"`
	// +optional
	ReadonlyEndpointFailoverPolicy *FailoverGroupSpecReadonlyEndpointFailoverPolicy `json:"readonlyEndpointFailoverPolicy,omitempty" tf:"readonly_endpoint_failover_policy"`
	ResourceGroupName              *string                                          `json:"resourceGroupName" tf:"resource_group_name"`
	// +optional
	Role       *string `json:"role,omitempty" tf:"role"`
	ServerName *string `json:"serverName" tf:"server_name"`
	// +optional
	Tags *map[string]string `json:"tags,omitempty" tf:"tags"`
}

type FailoverGroupStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// FailoverGroupList is a list of FailoverGroups
type FailoverGroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of FailoverGroup CRD objects
	Items []FailoverGroup `json:"items,omitempty"`
}
