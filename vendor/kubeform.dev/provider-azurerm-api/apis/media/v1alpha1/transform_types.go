/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Transform struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              TransformSpec   `json:"spec,omitempty"`
	Status            TransformStatus `json:"status,omitempty"`
}

type TransformSpec struct {
	TransformSpec2 `json:",inline"`
	// +optional
	KubeformOutput TransformSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type TransformSpecOutputAudioAnalyzerPreset struct {
	// +optional
	AudioAnalysisMode *string `json:"audioAnalysisMode,omitempty" tf:"audio_analysis_mode"`
	// +optional
	AudioLanguage *string `json:"audioLanguage,omitempty" tf:"audio_language"`
}

type TransformSpecOutputBuiltinPreset struct {
	// +optional
	PresetName *string `json:"presetName,omitempty" tf:"preset_name"`
}

type TransformSpecOutputFaceDetectorPreset struct {
	// +optional
	AnalysisResolution *string `json:"analysisResolution,omitempty" tf:"analysis_resolution"`
}

type TransformSpecOutputVideoAnalyzerPreset struct {
	// +optional
	AudioAnalysisMode *string `json:"audioAnalysisMode,omitempty" tf:"audio_analysis_mode"`
	// +optional
	AudioLanguage *string `json:"audioLanguage,omitempty" tf:"audio_language"`
	// +optional
	InsightsType *string `json:"insightsType,omitempty" tf:"insights_type"`
}

type TransformSpecOutput struct {
	// +optional
	AudioAnalyzerPreset *TransformSpecOutputAudioAnalyzerPreset `json:"audioAnalyzerPreset,omitempty" tf:"audio_analyzer_preset"`
	// +optional
	BuiltinPreset *TransformSpecOutputBuiltinPreset `json:"builtinPreset,omitempty" tf:"builtin_preset"`
	// +optional
	FaceDetectorPreset *TransformSpecOutputFaceDetectorPreset `json:"faceDetectorPreset,omitempty" tf:"face_detector_preset"`
	// +optional
	OnErrorAction *string `json:"onErrorAction,omitempty" tf:"on_error_action"`
	// +optional
	RelativePriority *string `json:"relativePriority,omitempty" tf:"relative_priority"`
	// +optional
	VideoAnalyzerPreset *TransformSpecOutputVideoAnalyzerPreset `json:"videoAnalyzerPreset,omitempty" tf:"video_analyzer_preset"`
}

type TransformSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	Description              *string `json:"description,omitempty" tf:"description"`
	MediaServicesAccountName *string `json:"mediaServicesAccountName" tf:"media_services_account_name"`
	Name                     *string `json:"name" tf:"name"`
	// +optional
	// +kubebuilder:validation:MinItems=1
	Output            []TransformSpecOutput `json:"output,omitempty" tf:"output"`
	ResourceGroupName *string               `json:"resourceGroupName" tf:"resource_group_name"`
}

type TransformStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// TransformList is a list of Transforms
type TransformList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Transform CRD objects
	Items []Transform `json:"items,omitempty"`
}
