/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type BudgetSubscription struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              BudgetSubscriptionSpec   `json:"spec,omitempty"`
	Status            BudgetSubscriptionStatus `json:"status,omitempty"`
}

type BudgetSubscriptionSpec struct {
	BudgetSubscriptionSpec2 `json:",inline"`
	// +optional
	KubeformOutput BudgetSubscriptionSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type BudgetSubscriptionSpecFilterDimension struct {
	Name *string `json:"name" tf:"name"`
	// +optional
	Operator *string `json:"operator,omitempty" tf:"operator"`
	// +kubebuilder:validation:MinItems=1
	Values []string `json:"values" tf:"values"`
}

type BudgetSubscriptionSpecFilterNotDimension struct {
	Name *string `json:"name" tf:"name"`
	// +optional
	Operator *string `json:"operator,omitempty" tf:"operator"`
	// +kubebuilder:validation:MinItems=1
	Values []string `json:"values" tf:"values"`
}

type BudgetSubscriptionSpecFilterNotTag struct {
	Name *string `json:"name" tf:"name"`
	// +optional
	Operator *string  `json:"operator,omitempty" tf:"operator"`
	Values   []string `json:"values" tf:"values"`
}

type BudgetSubscriptionSpecFilterNot struct {
	// +optional
	Dimension *BudgetSubscriptionSpecFilterNotDimension `json:"dimension,omitempty" tf:"dimension"`
	// +optional
	Tag *BudgetSubscriptionSpecFilterNotTag `json:"tag,omitempty" tf:"tag"`
}

type BudgetSubscriptionSpecFilterTag struct {
	Name *string `json:"name" tf:"name"`
	// +optional
	Operator *string  `json:"operator,omitempty" tf:"operator"`
	Values   []string `json:"values" tf:"values"`
}

type BudgetSubscriptionSpecFilter struct {
	// +optional
	Dimension []BudgetSubscriptionSpecFilterDimension `json:"dimension,omitempty" tf:"dimension"`
	// +optional
	Not *BudgetSubscriptionSpecFilterNot `json:"not,omitempty" tf:"not"`
	// +optional
	Tag []BudgetSubscriptionSpecFilterTag `json:"tag,omitempty" tf:"tag"`
}

type BudgetSubscriptionSpecNotification struct {
	// +optional
	ContactEmails []string `json:"contactEmails,omitempty" tf:"contact_emails"`
	// +optional
	ContactGroups []string `json:"contactGroups,omitempty" tf:"contact_groups"`
	// +optional
	ContactRoles []string `json:"contactRoles,omitempty" tf:"contact_roles"`
	// +optional
	Enabled   *bool   `json:"enabled,omitempty" tf:"enabled"`
	Operator  *string `json:"operator" tf:"operator"`
	Threshold *int64  `json:"threshold" tf:"threshold"`
}

type BudgetSubscriptionSpecTimePeriod struct {
	// +optional
	EndDate   *string `json:"endDate,omitempty" tf:"end_date"`
	StartDate *string `json:"startDate" tf:"start_date"`
}

type BudgetSubscriptionSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	Amount *float64 `json:"amount" tf:"amount"`
	// +optional
	Filter *BudgetSubscriptionSpecFilter `json:"filter,omitempty" tf:"filter"`
	Name   *string                       `json:"name" tf:"name"`
	// +kubebuilder:validation:MaxItems=5
	// +kubebuilder:validation:MinItems=1
	Notification   []BudgetSubscriptionSpecNotification `json:"notification" tf:"notification"`
	SubscriptionID *string                              `json:"subscriptionID" tf:"subscription_id"`
	// +optional
	TimeGrain  *string                           `json:"timeGrain,omitempty" tf:"time_grain"`
	TimePeriod *BudgetSubscriptionSpecTimePeriod `json:"timePeriod" tf:"time_period"`
}

type BudgetSubscriptionStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// BudgetSubscriptionList is a list of BudgetSubscriptions
type BudgetSubscriptionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of BudgetSubscription CRD objects
	Items []BudgetSubscription `json:"items,omitempty"`
}
