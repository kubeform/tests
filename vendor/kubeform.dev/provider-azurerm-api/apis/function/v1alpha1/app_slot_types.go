/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type AppSlot struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AppSlotSpec   `json:"spec,omitempty"`
	Status            AppSlotStatus `json:"status,omitempty"`
}

type AppSlotSpec struct {
	AppSlotSpec2 `json:",inline"`
	// +optional
	KubeformOutput AppSlotSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type AppSlotSpecAuthSettingsActiveDirectory struct {
	// +optional
	AllowedAudiences []string `json:"allowedAudiences,omitempty" tf:"allowed_audiences"`
	ClientID         *string  `json:"clientID" tf:"client_id"`
	// +optional
	ClientSecret *string `json:"-" sensitive:"true" tf:"client_secret"`
}

type AppSlotSpecAuthSettingsFacebook struct {
	AppID     *string `json:"appID" tf:"app_id"`
	AppSecret *string `json:"-" sensitive:"true" tf:"app_secret"`
	// +optional
	OauthScopes []string `json:"oauthScopes,omitempty" tf:"oauth_scopes"`
}

type AppSlotSpecAuthSettingsGoogle struct {
	ClientID     *string `json:"clientID" tf:"client_id"`
	ClientSecret *string `json:"-" sensitive:"true" tf:"client_secret"`
	// +optional
	OauthScopes []string `json:"oauthScopes,omitempty" tf:"oauth_scopes"`
}

type AppSlotSpecAuthSettingsMicrosoft struct {
	ClientID     *string `json:"clientID" tf:"client_id"`
	ClientSecret *string `json:"-" sensitive:"true" tf:"client_secret"`
	// +optional
	OauthScopes []string `json:"oauthScopes,omitempty" tf:"oauth_scopes"`
}

type AppSlotSpecAuthSettingsTwitter struct {
	ConsumerKey    *string `json:"consumerKey" tf:"consumer_key"`
	ConsumerSecret *string `json:"-" sensitive:"true" tf:"consumer_secret"`
}

type AppSlotSpecAuthSettings struct {
	// +optional
	ActiveDirectory *AppSlotSpecAuthSettingsActiveDirectory `json:"activeDirectory,omitempty" tf:"active_directory"`
	// +optional
	AdditionalLoginParams *map[string]string `json:"additionalLoginParams,omitempty" tf:"additional_login_params"`
	// +optional
	AllowedExternalRedirectUrls []string `json:"allowedExternalRedirectUrls,omitempty" tf:"allowed_external_redirect_urls"`
	// +optional
	DefaultProvider *string `json:"defaultProvider,omitempty" tf:"default_provider"`
	Enabled         *bool   `json:"enabled" tf:"enabled"`
	// +optional
	Facebook *AppSlotSpecAuthSettingsFacebook `json:"facebook,omitempty" tf:"facebook"`
	// +optional
	Google *AppSlotSpecAuthSettingsGoogle `json:"google,omitempty" tf:"google"`
	// +optional
	Issuer *string `json:"issuer,omitempty" tf:"issuer"`
	// +optional
	Microsoft *AppSlotSpecAuthSettingsMicrosoft `json:"microsoft,omitempty" tf:"microsoft"`
	// +optional
	RuntimeVersion *string `json:"runtimeVersion,omitempty" tf:"runtime_version"`
	// +optional
	TokenRefreshExtensionHours *float64 `json:"tokenRefreshExtensionHours,omitempty" tf:"token_refresh_extension_hours"`
	// +optional
	TokenStoreEnabled *bool `json:"tokenStoreEnabled,omitempty" tf:"token_store_enabled"`
	// +optional
	Twitter *AppSlotSpecAuthSettingsTwitter `json:"twitter,omitempty" tf:"twitter"`
	// +optional
	UnauthenticatedClientAction *string `json:"unauthenticatedClientAction,omitempty" tf:"unauthenticated_client_action"`
}

type AppSlotSpecConnectionString struct {
	Name  *string `json:"name" tf:"name"`
	Type  *string `json:"type" tf:"type"`
	Value *string `json:"-" sensitive:"true" tf:"value"`
}

type AppSlotSpecIdentity struct {
	// +optional
	// +kubebuilder:validation:MinItems=1
	IdentityIDS []string `json:"identityIDS,omitempty" tf:"identity_ids"`
	// +optional
	PrincipalID *string `json:"principalID,omitempty" tf:"principal_id"`
	// +optional
	TenantID *string `json:"tenantID,omitempty" tf:"tenant_id"`
	Type     *string `json:"type" tf:"type"`
}

type AppSlotSpecSiteConfigCors struct {
	AllowedOrigins []string `json:"allowedOrigins" tf:"allowed_origins"`
	// +optional
	SupportCredentials *bool `json:"supportCredentials,omitempty" tf:"support_credentials"`
}

type AppSlotSpecSiteConfigIpRestrictionHeaders struct {
	// +optional
	// +kubebuilder:validation:MaxItems=8
	XAzureFdid []string `json:"xAzureFdid,omitempty" tf:"x_azure_fdid"`
	// +optional
	XFdHealthProbe []string `json:"xFdHealthProbe,omitempty" tf:"x_fd_health_probe"`
	// +optional
	// +kubebuilder:validation:MaxItems=8
	XForwardedFor []string `json:"xForwardedFor,omitempty" tf:"x_forwarded_for"`
	// +optional
	// +kubebuilder:validation:MaxItems=8
	XForwardedHost []string `json:"xForwardedHost,omitempty" tf:"x_forwarded_host"`
}

type AppSlotSpecSiteConfigIpRestriction struct {
	// +optional
	Action *string `json:"action,omitempty" tf:"action"`
	// +optional
	Headers *AppSlotSpecSiteConfigIpRestrictionHeaders `json:"headers,omitempty" tf:"headers"`
	// +optional
	IpAddress *string `json:"ipAddress,omitempty" tf:"ip_address"`
	// +optional
	Name *string `json:"name,omitempty" tf:"name"`
	// +optional
	Priority *int64 `json:"priority,omitempty" tf:"priority"`
	// +optional
	ServiceTag *string `json:"serviceTag,omitempty" tf:"service_tag"`
	// +optional
	VirtualNetworkSubnetID *string `json:"virtualNetworkSubnetID,omitempty" tf:"virtual_network_subnet_id"`
}

type AppSlotSpecSiteConfigScmIPRestrictionHeaders struct {
	// +optional
	// +kubebuilder:validation:MaxItems=8
	XAzureFdid []string `json:"xAzureFdid,omitempty" tf:"x_azure_fdid"`
	// +optional
	XFdHealthProbe []string `json:"xFdHealthProbe,omitempty" tf:"x_fd_health_probe"`
	// +optional
	// +kubebuilder:validation:MaxItems=8
	XForwardedFor []string `json:"xForwardedFor,omitempty" tf:"x_forwarded_for"`
	// +optional
	// +kubebuilder:validation:MaxItems=8
	XForwardedHost []string `json:"xForwardedHost,omitempty" tf:"x_forwarded_host"`
}

type AppSlotSpecSiteConfigScmIPRestriction struct {
	// +optional
	Action *string `json:"action,omitempty" tf:"action"`
	// +optional
	Headers *AppSlotSpecSiteConfigScmIPRestrictionHeaders `json:"headers,omitempty" tf:"headers"`
	// +optional
	IpAddress *string `json:"ipAddress,omitempty" tf:"ip_address"`
	// +optional
	Name *string `json:"name,omitempty" tf:"name"`
	// +optional
	Priority *int64 `json:"priority,omitempty" tf:"priority"`
	// +optional
	ServiceTag *string `json:"serviceTag,omitempty" tf:"service_tag"`
	// +optional
	VirtualNetworkSubnetID *string `json:"virtualNetworkSubnetID,omitempty" tf:"virtual_network_subnet_id"`
}

type AppSlotSpecSiteConfig struct {
	// +optional
	AlwaysOn *bool `json:"alwaysOn,omitempty" tf:"always_on"`
	// +optional
	AutoSwapSlotName *string `json:"autoSwapSlotName,omitempty" tf:"auto_swap_slot_name"`
	// +optional
	Cors *AppSlotSpecSiteConfigCors `json:"cors,omitempty" tf:"cors"`
	// +optional
	FtpsState *string `json:"ftpsState,omitempty" tf:"ftps_state"`
	// +optional
	HealthCheckPath *string `json:"healthCheckPath,omitempty" tf:"health_check_path"`
	// +optional
	Http2Enabled *bool `json:"http2Enabled,omitempty" tf:"http2_enabled"`
	// +optional
	IpRestriction []AppSlotSpecSiteConfigIpRestriction `json:"ipRestriction,omitempty" tf:"ip_restriction"`
	// +optional
	JavaVersion *string `json:"javaVersion,omitempty" tf:"java_version"`
	// +optional
	LinuxFxVersion *string `json:"linuxFxVersion,omitempty" tf:"linux_fx_version"`
	// +optional
	MinTLSVersion *string `json:"minTLSVersion,omitempty" tf:"min_tls_version"`
	// +optional
	PreWarmedInstanceCount *int64 `json:"preWarmedInstanceCount,omitempty" tf:"pre_warmed_instance_count"`
	// +optional
	ScmIPRestriction []AppSlotSpecSiteConfigScmIPRestriction `json:"scmIPRestriction,omitempty" tf:"scm_ip_restriction"`
	// +optional
	ScmType *string `json:"scmType,omitempty" tf:"scm_type"`
	// +optional
	ScmUseMainIPRestriction *bool `json:"scmUseMainIPRestriction,omitempty" tf:"scm_use_main_ip_restriction"`
	// +optional
	Use32BitWorkerProcess *bool `json:"use32BitWorkerProcess,omitempty" tf:"use_32_bit_worker_process"`
	// +optional
	WebsocketsEnabled *bool `json:"websocketsEnabled,omitempty" tf:"websockets_enabled"`
}

type AppSlotSpecSiteCredential struct {
	// +optional
	Password *string `json:"-" sensitive:"true" tf:"password"`
	// +optional
	Username *string `json:"username,omitempty" tf:"username"`
}

type AppSlotSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`

	AppServicePlanID *string `json:"appServicePlanID" tf:"app_service_plan_id"`
	// +optional
	AppSettings *map[string]string `json:"appSettings,omitempty" tf:"app_settings"`
	// +optional
	AuthSettings *AppSlotSpecAuthSettings `json:"authSettings,omitempty" tf:"auth_settings"`
	// +optional
	ClientAffinityEnabled *bool `json:"clientAffinityEnabled,omitempty" tf:"client_affinity_enabled"`
	// +optional
	ConnectionString []AppSlotSpecConnectionString `json:"connectionString,omitempty" tf:"connection_string"`
	// +optional
	DailyMemoryTimeQuota *int64 `json:"dailyMemoryTimeQuota,omitempty" tf:"daily_memory_time_quota"`
	// +optional
	DefaultHostname *string `json:"defaultHostname,omitempty" tf:"default_hostname"`
	// +optional
	EnableBuiltinLogging *bool `json:"enableBuiltinLogging,omitempty" tf:"enable_builtin_logging"`
	// +optional
	Enabled         *bool   `json:"enabled,omitempty" tf:"enabled"`
	FunctionAppName *string `json:"functionAppName" tf:"function_app_name"`
	// +optional
	HttpsOnly *bool `json:"httpsOnly,omitempty" tf:"https_only"`
	// +optional
	Identity *AppSlotSpecIdentity `json:"identity,omitempty" tf:"identity"`
	// +optional
	Kind     *string `json:"kind,omitempty" tf:"kind"`
	Location *string `json:"location" tf:"location"`
	Name     *string `json:"name" tf:"name"`
	// +optional
	OsType *string `json:"osType,omitempty" tf:"os_type"`
	// +optional
	OutboundIPAddresses *string `json:"outboundIPAddresses,omitempty" tf:"outbound_ip_addresses"`
	// +optional
	PossibleOutboundIPAddresses *string `json:"possibleOutboundIPAddresses,omitempty" tf:"possible_outbound_ip_addresses"`
	ResourceGroupName           *string `json:"resourceGroupName" tf:"resource_group_name"`
	// +optional
	SiteConfig *AppSlotSpecSiteConfig `json:"siteConfig,omitempty" tf:"site_config"`
	// +optional
	SiteCredential          []AppSlotSpecSiteCredential `json:"siteCredential,omitempty" tf:"site_credential"`
	StorageAccountAccessKey *string                     `json:"-" sensitive:"true" tf:"storage_account_access_key"`
	StorageAccountName      *string                     `json:"storageAccountName" tf:"storage_account_name"`
	// +optional
	Tags *map[string]string `json:"tags,omitempty" tf:"tags"`
	// +optional
	Version *string `json:"version,omitempty" tf:"version"`
}

type AppSlotStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// AppSlotList is a list of AppSlots
type AppSlotList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of AppSlot CRD objects
	Items []AppSlot `json:"items,omitempty"`
}
