/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type DeviceGroup struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              DeviceGroupSpec   `json:"spec,omitempty"`
	Status            DeviceGroupStatus `json:"status,omitempty"`
}

type DeviceGroupSpec struct {
	DeviceGroupSpec2 `json:",inline"`
	// +optional
	KubeformOutput DeviceGroupSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type DeviceGroupSpecAllowRule struct {
	// +optional
	ConnectionToIPNotAllowed []string `json:"connectionToIPNotAllowed,omitempty" tf:"connection_to_ip_not_allowed"`
	// +optional
	LocalUserNotAllowed []string `json:"localUserNotAllowed,omitempty" tf:"local_user_not_allowed"`
	// +optional
	ProcessNotAllowed []string `json:"processNotAllowed,omitempty" tf:"process_not_allowed"`
}

type DeviceGroupSpecRangeRule struct {
	Duration *string `json:"duration" tf:"duration"`
	Max      *int64  `json:"max" tf:"max"`
	Min      *int64  `json:"min" tf:"min"`
	Type     *string `json:"type" tf:"type"`
}

type DeviceGroupSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	AllowRule *DeviceGroupSpecAllowRule `json:"allowRule,omitempty" tf:"allow_rule"`
	IothubID  *string                   `json:"iothubID" tf:"iothub_id"`
	Name      *string                   `json:"name" tf:"name"`
	// +optional
	RangeRule []DeviceGroupSpecRangeRule `json:"rangeRule,omitempty" tf:"range_rule"`
}

type DeviceGroupStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// DeviceGroupList is a list of DeviceGroups
type DeviceGroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of DeviceGroup CRD objects
	Items []DeviceGroup `json:"items,omitempty"`
}
