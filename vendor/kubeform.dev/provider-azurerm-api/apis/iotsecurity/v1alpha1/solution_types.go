/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Solution struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SolutionSpec   `json:"spec,omitempty"`
	Status            SolutionStatus `json:"status,omitempty"`
}

type SolutionSpec struct {
	SolutionSpec2 `json:",inline"`
	// +optional
	KubeformOutput SolutionSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type SolutionSpecRecommendationsEnabled struct {
	// +optional
	AcrAuthentication *bool `json:"acrAuthentication,omitempty" tf:"acr_authentication"`
	// +optional
	AgentSendUnutilizedMsg *bool `json:"agentSendUnutilizedMsg,omitempty" tf:"agent_send_unutilized_msg"`
	// +optional
	Baseline *bool `json:"baseline,omitempty" tf:"baseline"`
	// +optional
	EdgeHubMemOptimize *bool `json:"edgeHubMemOptimize,omitempty" tf:"edge_hub_mem_optimize"`
	// +optional
	EdgeLoggingOption *bool `json:"edgeLoggingOption,omitempty" tf:"edge_logging_option"`
	// +optional
	InconsistentModuleSettings *bool `json:"inconsistentModuleSettings,omitempty" tf:"inconsistent_module_settings"`
	// +optional
	InstallAgent *bool `json:"installAgent,omitempty" tf:"install_agent"`
	// +optional
	IpFilterDenyAll *bool `json:"ipFilterDenyAll,omitempty" tf:"ip_filter_deny_all"`
	// +optional
	IpFilterPermissiveRule *bool `json:"ipFilterPermissiveRule,omitempty" tf:"ip_filter_permissive_rule"`
	// +optional
	OpenPorts *bool `json:"openPorts,omitempty" tf:"open_ports"`
	// +optional
	PermissiveFirewallPolicy *bool `json:"permissiveFirewallPolicy,omitempty" tf:"permissive_firewall_policy"`
	// +optional
	PermissiveInputFirewallRules *bool `json:"permissiveInputFirewallRules,omitempty" tf:"permissive_input_firewall_rules"`
	// +optional
	PermissiveOutputFirewallRules *bool `json:"permissiveOutputFirewallRules,omitempty" tf:"permissive_output_firewall_rules"`
	// +optional
	PrivilegedDockerOptions *bool `json:"privilegedDockerOptions,omitempty" tf:"privileged_docker_options"`
	// +optional
	SharedCredentials *bool `json:"sharedCredentials,omitempty" tf:"shared_credentials"`
	// +optional
	VulnerableTLSCipherSuite *bool `json:"vulnerableTLSCipherSuite,omitempty" tf:"vulnerable_tls_cipher_suite"`
}

type SolutionSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	DisplayName *string `json:"displayName" tf:"display_name"`
	// +optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled"`
	// +optional
	EventsToExport []string `json:"eventsToExport,omitempty" tf:"events_to_export"`
	IothubIDS      []string `json:"iothubIDS" tf:"iothub_ids"`
	Location       *string  `json:"location" tf:"location"`
	// +optional
	LogAnalyticsWorkspaceID *string `json:"logAnalyticsWorkspaceID,omitempty" tf:"log_analytics_workspace_id"`
	// +optional
	LogUnmaskedIPSEnabled *bool   `json:"logUnmaskedIPSEnabled,omitempty" tf:"log_unmasked_ips_enabled"`
	Name                  *string `json:"name" tf:"name"`
	// +optional
	QueryForResources *string `json:"queryForResources,omitempty" tf:"query_for_resources"`
	// +optional
	QuerySubscriptionIDS []string `json:"querySubscriptionIDS,omitempty" tf:"query_subscription_ids"`
	// +optional
	RecommendationsEnabled *SolutionSpecRecommendationsEnabled `json:"recommendationsEnabled,omitempty" tf:"recommendations_enabled"`
	ResourceGroupName      *string                             `json:"resourceGroupName" tf:"resource_group_name"`
	// +optional
	Tags *map[string]string `json:"tags,omitempty" tf:"tags"`
}

type SolutionStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// SolutionList is a list of Solutions
type SolutionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Solution CRD objects
	Items []Solution `json:"items,omitempty"`
}
