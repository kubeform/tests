// +build !ignore_autogenerated

/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	apiv1alpha1 "kubeform.dev/apimachinery/api/v1alpha1"

	v1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	apiv1 "kmodules.xyz/client-go/api/v1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesCluster) DeepCopyInto(out *KubernetesCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesCluster.
func (in *KubernetesCluster) DeepCopy() *KubernetesCluster {
	if in == nil {
		return nil
	}
	out := new(KubernetesCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KubernetesCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterList) DeepCopyInto(out *KubernetesClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]KubernetesCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterList.
func (in *KubernetesClusterList) DeepCopy() *KubernetesClusterList {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KubernetesClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterSpec) DeepCopyInto(out *KubernetesClusterSpec) {
	*out = *in
	in.KubernetesClusterSpec2.DeepCopyInto(&out.KubernetesClusterSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterSpec.
func (in *KubernetesClusterSpec) DeepCopy() *KubernetesClusterSpec {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterSpec2) DeepCopyInto(out *KubernetesClusterSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	if in.AddonProfile != nil {
		in, out := &in.AddonProfile, &out.AddonProfile
		*out = new(KubernetesClusterSpecAddonProfile)
		(*in).DeepCopyInto(*out)
	}
	if in.ApiServerAuthorizedIPRanges != nil {
		in, out := &in.ApiServerAuthorizedIPRanges, &out.ApiServerAuthorizedIPRanges
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AutoScalerProfile != nil {
		in, out := &in.AutoScalerProfile, &out.AutoScalerProfile
		*out = new(KubernetesClusterSpecAutoScalerProfile)
		(*in).DeepCopyInto(*out)
	}
	if in.AutomaticChannelUpgrade != nil {
		in, out := &in.AutomaticChannelUpgrade, &out.AutomaticChannelUpgrade
		*out = new(string)
		**out = **in
	}
	if in.DefaultNodePool != nil {
		in, out := &in.DefaultNodePool, &out.DefaultNodePool
		*out = new(KubernetesClusterSpecDefaultNodePool)
		(*in).DeepCopyInto(*out)
	}
	if in.DiskEncryptionSetID != nil {
		in, out := &in.DiskEncryptionSetID, &out.DiskEncryptionSetID
		*out = new(string)
		**out = **in
	}
	if in.DnsPrefix != nil {
		in, out := &in.DnsPrefix, &out.DnsPrefix
		*out = new(string)
		**out = **in
	}
	if in.DnsPrefixPrivateCluster != nil {
		in, out := &in.DnsPrefixPrivateCluster, &out.DnsPrefixPrivateCluster
		*out = new(string)
		**out = **in
	}
	if in.EnablePodSecurityPolicy != nil {
		in, out := &in.EnablePodSecurityPolicy, &out.EnablePodSecurityPolicy
		*out = new(bool)
		**out = **in
	}
	if in.Fqdn != nil {
		in, out := &in.Fqdn, &out.Fqdn
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(KubernetesClusterSpecIdentity)
		(*in).DeepCopyInto(*out)
	}
	if in.KubeAdminConfig != nil {
		in, out := &in.KubeAdminConfig, &out.KubeAdminConfig
		*out = make([]KubernetesClusterSpecKubeAdminConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KubeAdminConfigRaw != nil {
		in, out := &in.KubeAdminConfigRaw, &out.KubeAdminConfigRaw
		*out = new(string)
		**out = **in
	}
	if in.KubeConfig != nil {
		in, out := &in.KubeConfig, &out.KubeConfig
		*out = make([]KubernetesClusterSpecKubeConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KubeConfigRaw != nil {
		in, out := &in.KubeConfigRaw, &out.KubeConfigRaw
		*out = new(string)
		**out = **in
	}
	if in.KubeletIdentity != nil {
		in, out := &in.KubeletIdentity, &out.KubeletIdentity
		*out = make([]KubernetesClusterSpecKubeletIdentity, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KubernetesVersion != nil {
		in, out := &in.KubernetesVersion, &out.KubernetesVersion
		*out = new(string)
		**out = **in
	}
	if in.LinuxProfile != nil {
		in, out := &in.LinuxProfile, &out.LinuxProfile
		*out = new(KubernetesClusterSpecLinuxProfile)
		(*in).DeepCopyInto(*out)
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkProfile != nil {
		in, out := &in.NetworkProfile, &out.NetworkProfile
		*out = new(KubernetesClusterSpecNetworkProfile)
		(*in).DeepCopyInto(*out)
	}
	if in.NodeResourceGroup != nil {
		in, out := &in.NodeResourceGroup, &out.NodeResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.PrivateClusterEnabled != nil {
		in, out := &in.PrivateClusterEnabled, &out.PrivateClusterEnabled
		*out = new(bool)
		**out = **in
	}
	if in.PrivateDNSZoneID != nil {
		in, out := &in.PrivateDNSZoneID, &out.PrivateDNSZoneID
		*out = new(string)
		**out = **in
	}
	if in.PrivateFqdn != nil {
		in, out := &in.PrivateFqdn, &out.PrivateFqdn
		*out = new(string)
		**out = **in
	}
	if in.PrivateLinkEnabled != nil {
		in, out := &in.PrivateLinkEnabled, &out.PrivateLinkEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.RoleBasedAccessControl != nil {
		in, out := &in.RoleBasedAccessControl, &out.RoleBasedAccessControl
		*out = new(KubernetesClusterSpecRoleBasedAccessControl)
		(*in).DeepCopyInto(*out)
	}
	if in.ServicePrincipal != nil {
		in, out := &in.ServicePrincipal, &out.ServicePrincipal
		*out = new(KubernetesClusterSpecServicePrincipal)
		(*in).DeepCopyInto(*out)
	}
	if in.SkuTier != nil {
		in, out := &in.SkuTier, &out.SkuTier
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.WindowsProfile != nil {
		in, out := &in.WindowsProfile, &out.WindowsProfile
		*out = new(KubernetesClusterSpecWindowsProfile)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterSpec2.
func (in *KubernetesClusterSpec2) DeepCopy() *KubernetesClusterSpec2 {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterSpecAddonProfile) DeepCopyInto(out *KubernetesClusterSpecAddonProfile) {
	*out = *in
	if in.AciConnectorLinux != nil {
		in, out := &in.AciConnectorLinux, &out.AciConnectorLinux
		*out = new(KubernetesClusterSpecAddonProfileAciConnectorLinux)
		(*in).DeepCopyInto(*out)
	}
	if in.AzurePolicy != nil {
		in, out := &in.AzurePolicy, &out.AzurePolicy
		*out = new(KubernetesClusterSpecAddonProfileAzurePolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.HttpApplicationRouting != nil {
		in, out := &in.HttpApplicationRouting, &out.HttpApplicationRouting
		*out = new(KubernetesClusterSpecAddonProfileHttpApplicationRouting)
		(*in).DeepCopyInto(*out)
	}
	if in.IngressApplicationGateway != nil {
		in, out := &in.IngressApplicationGateway, &out.IngressApplicationGateway
		*out = new(KubernetesClusterSpecAddonProfileIngressApplicationGateway)
		(*in).DeepCopyInto(*out)
	}
	if in.KubeDashboard != nil {
		in, out := &in.KubeDashboard, &out.KubeDashboard
		*out = new(KubernetesClusterSpecAddonProfileKubeDashboard)
		(*in).DeepCopyInto(*out)
	}
	if in.OmsAgent != nil {
		in, out := &in.OmsAgent, &out.OmsAgent
		*out = new(KubernetesClusterSpecAddonProfileOmsAgent)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterSpecAddonProfile.
func (in *KubernetesClusterSpecAddonProfile) DeepCopy() *KubernetesClusterSpecAddonProfile {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterSpecAddonProfile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterSpecAddonProfileAciConnectorLinux) DeepCopyInto(out *KubernetesClusterSpecAddonProfileAciConnectorLinux) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.SubnetName != nil {
		in, out := &in.SubnetName, &out.SubnetName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterSpecAddonProfileAciConnectorLinux.
func (in *KubernetesClusterSpecAddonProfileAciConnectorLinux) DeepCopy() *KubernetesClusterSpecAddonProfileAciConnectorLinux {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterSpecAddonProfileAciConnectorLinux)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterSpecAddonProfileAzurePolicy) DeepCopyInto(out *KubernetesClusterSpecAddonProfileAzurePolicy) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterSpecAddonProfileAzurePolicy.
func (in *KubernetesClusterSpecAddonProfileAzurePolicy) DeepCopy() *KubernetesClusterSpecAddonProfileAzurePolicy {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterSpecAddonProfileAzurePolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterSpecAddonProfileHttpApplicationRouting) DeepCopyInto(out *KubernetesClusterSpecAddonProfileHttpApplicationRouting) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.HttpApplicationRoutingZoneName != nil {
		in, out := &in.HttpApplicationRoutingZoneName, &out.HttpApplicationRoutingZoneName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterSpecAddonProfileHttpApplicationRouting.
func (in *KubernetesClusterSpecAddonProfileHttpApplicationRouting) DeepCopy() *KubernetesClusterSpecAddonProfileHttpApplicationRouting {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterSpecAddonProfileHttpApplicationRouting)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterSpecAddonProfileIngressApplicationGateway) DeepCopyInto(out *KubernetesClusterSpecAddonProfileIngressApplicationGateway) {
	*out = *in
	if in.EffectiveGatewayID != nil {
		in, out := &in.EffectiveGatewayID, &out.EffectiveGatewayID
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.GatewayID != nil {
		in, out := &in.GatewayID, &out.GatewayID
		*out = new(string)
		**out = **in
	}
	if in.IngressApplicationGatewayIdentity != nil {
		in, out := &in.IngressApplicationGatewayIdentity, &out.IngressApplicationGatewayIdentity
		*out = make([]KubernetesClusterSpecAddonProfileIngressApplicationGatewayIngressApplicationGatewayIdentity, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetCIDR != nil {
		in, out := &in.SubnetCIDR, &out.SubnetCIDR
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterSpecAddonProfileIngressApplicationGateway.
func (in *KubernetesClusterSpecAddonProfileIngressApplicationGateway) DeepCopy() *KubernetesClusterSpecAddonProfileIngressApplicationGateway {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterSpecAddonProfileIngressApplicationGateway)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterSpecAddonProfileIngressApplicationGatewayIngressApplicationGatewayIdentity) DeepCopyInto(out *KubernetesClusterSpecAddonProfileIngressApplicationGatewayIngressApplicationGatewayIdentity) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ObjectID != nil {
		in, out := &in.ObjectID, &out.ObjectID
		*out = new(string)
		**out = **in
	}
	if in.UserAssignedIdentityID != nil {
		in, out := &in.UserAssignedIdentityID, &out.UserAssignedIdentityID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterSpecAddonProfileIngressApplicationGatewayIngressApplicationGatewayIdentity.
func (in *KubernetesClusterSpecAddonProfileIngressApplicationGatewayIngressApplicationGatewayIdentity) DeepCopy() *KubernetesClusterSpecAddonProfileIngressApplicationGatewayIngressApplicationGatewayIdentity {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterSpecAddonProfileIngressApplicationGatewayIngressApplicationGatewayIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterSpecAddonProfileKubeDashboard) DeepCopyInto(out *KubernetesClusterSpecAddonProfileKubeDashboard) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterSpecAddonProfileKubeDashboard.
func (in *KubernetesClusterSpecAddonProfileKubeDashboard) DeepCopy() *KubernetesClusterSpecAddonProfileKubeDashboard {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterSpecAddonProfileKubeDashboard)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterSpecAddonProfileOmsAgent) DeepCopyInto(out *KubernetesClusterSpecAddonProfileOmsAgent) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogAnalyticsWorkspaceID != nil {
		in, out := &in.LogAnalyticsWorkspaceID, &out.LogAnalyticsWorkspaceID
		*out = new(string)
		**out = **in
	}
	if in.OmsAgentIdentity != nil {
		in, out := &in.OmsAgentIdentity, &out.OmsAgentIdentity
		*out = make([]KubernetesClusterSpecAddonProfileOmsAgentOmsAgentIdentity, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterSpecAddonProfileOmsAgent.
func (in *KubernetesClusterSpecAddonProfileOmsAgent) DeepCopy() *KubernetesClusterSpecAddonProfileOmsAgent {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterSpecAddonProfileOmsAgent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterSpecAddonProfileOmsAgentOmsAgentIdentity) DeepCopyInto(out *KubernetesClusterSpecAddonProfileOmsAgentOmsAgentIdentity) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ObjectID != nil {
		in, out := &in.ObjectID, &out.ObjectID
		*out = new(string)
		**out = **in
	}
	if in.UserAssignedIdentityID != nil {
		in, out := &in.UserAssignedIdentityID, &out.UserAssignedIdentityID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterSpecAddonProfileOmsAgentOmsAgentIdentity.
func (in *KubernetesClusterSpecAddonProfileOmsAgentOmsAgentIdentity) DeepCopy() *KubernetesClusterSpecAddonProfileOmsAgentOmsAgentIdentity {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterSpecAddonProfileOmsAgentOmsAgentIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterSpecAutoScalerProfile) DeepCopyInto(out *KubernetesClusterSpecAutoScalerProfile) {
	*out = *in
	if in.BalanceSimilarNodeGroups != nil {
		in, out := &in.BalanceSimilarNodeGroups, &out.BalanceSimilarNodeGroups
		*out = new(bool)
		**out = **in
	}
	if in.EmptyBulkDeleteMax != nil {
		in, out := &in.EmptyBulkDeleteMax, &out.EmptyBulkDeleteMax
		*out = new(string)
		**out = **in
	}
	if in.Expander != nil {
		in, out := &in.Expander, &out.Expander
		*out = new(string)
		**out = **in
	}
	if in.MaxGracefulTerminationSec != nil {
		in, out := &in.MaxGracefulTerminationSec, &out.MaxGracefulTerminationSec
		*out = new(string)
		**out = **in
	}
	if in.MaxNodeProvisioningTime != nil {
		in, out := &in.MaxNodeProvisioningTime, &out.MaxNodeProvisioningTime
		*out = new(string)
		**out = **in
	}
	if in.MaxUnreadyNodes != nil {
		in, out := &in.MaxUnreadyNodes, &out.MaxUnreadyNodes
		*out = new(int64)
		**out = **in
	}
	if in.MaxUnreadyPercentage != nil {
		in, out := &in.MaxUnreadyPercentage, &out.MaxUnreadyPercentage
		*out = new(float64)
		**out = **in
	}
	if in.NewPodScaleUpDelay != nil {
		in, out := &in.NewPodScaleUpDelay, &out.NewPodScaleUpDelay
		*out = new(string)
		**out = **in
	}
	if in.ScaleDownDelayAfterAdd != nil {
		in, out := &in.ScaleDownDelayAfterAdd, &out.ScaleDownDelayAfterAdd
		*out = new(string)
		**out = **in
	}
	if in.ScaleDownDelayAfterDelete != nil {
		in, out := &in.ScaleDownDelayAfterDelete, &out.ScaleDownDelayAfterDelete
		*out = new(string)
		**out = **in
	}
	if in.ScaleDownDelayAfterFailure != nil {
		in, out := &in.ScaleDownDelayAfterFailure, &out.ScaleDownDelayAfterFailure
		*out = new(string)
		**out = **in
	}
	if in.ScaleDownUnneeded != nil {
		in, out := &in.ScaleDownUnneeded, &out.ScaleDownUnneeded
		*out = new(string)
		**out = **in
	}
	if in.ScaleDownUnready != nil {
		in, out := &in.ScaleDownUnready, &out.ScaleDownUnready
		*out = new(string)
		**out = **in
	}
	if in.ScaleDownUtilizationThreshold != nil {
		in, out := &in.ScaleDownUtilizationThreshold, &out.ScaleDownUtilizationThreshold
		*out = new(string)
		**out = **in
	}
	if in.ScanInterval != nil {
		in, out := &in.ScanInterval, &out.ScanInterval
		*out = new(string)
		**out = **in
	}
	if in.SkipNodesWithLocalStorage != nil {
		in, out := &in.SkipNodesWithLocalStorage, &out.SkipNodesWithLocalStorage
		*out = new(bool)
		**out = **in
	}
	if in.SkipNodesWithSystemPods != nil {
		in, out := &in.SkipNodesWithSystemPods, &out.SkipNodesWithSystemPods
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterSpecAutoScalerProfile.
func (in *KubernetesClusterSpecAutoScalerProfile) DeepCopy() *KubernetesClusterSpecAutoScalerProfile {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterSpecAutoScalerProfile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterSpecDefaultNodePool) DeepCopyInto(out *KubernetesClusterSpecDefaultNodePool) {
	*out = *in
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.EnableAutoScaling != nil {
		in, out := &in.EnableAutoScaling, &out.EnableAutoScaling
		*out = new(bool)
		**out = **in
	}
	if in.EnableHostEncryption != nil {
		in, out := &in.EnableHostEncryption, &out.EnableHostEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EnableNodePublicIP != nil {
		in, out := &in.EnableNodePublicIP, &out.EnableNodePublicIP
		*out = new(bool)
		**out = **in
	}
	if in.MaxCount != nil {
		in, out := &in.MaxCount, &out.MaxCount
		*out = new(int64)
		**out = **in
	}
	if in.MaxPods != nil {
		in, out := &in.MaxPods, &out.MaxPods
		*out = new(int64)
		**out = **in
	}
	if in.MinCount != nil {
		in, out := &in.MinCount, &out.MinCount
		*out = new(int64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NodeCount != nil {
		in, out := &in.NodeCount, &out.NodeCount
		*out = new(int64)
		**out = **in
	}
	if in.NodeLabels != nil {
		in, out := &in.NodeLabels, &out.NodeLabels
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.NodeTaints != nil {
		in, out := &in.NodeTaints, &out.NodeTaints
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.OnlyCriticalAddonsEnabled != nil {
		in, out := &in.OnlyCriticalAddonsEnabled, &out.OnlyCriticalAddonsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.OrchestratorVersion != nil {
		in, out := &in.OrchestratorVersion, &out.OrchestratorVersion
		*out = new(string)
		**out = **in
	}
	if in.OsDiskSizeGb != nil {
		in, out := &in.OsDiskSizeGb, &out.OsDiskSizeGb
		*out = new(int64)
		**out = **in
	}
	if in.OsDiskType != nil {
		in, out := &in.OsDiskType, &out.OsDiskType
		*out = new(string)
		**out = **in
	}
	if in.ProximityPlacementGroupID != nil {
		in, out := &in.ProximityPlacementGroupID, &out.ProximityPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UpgradeSettings != nil {
		in, out := &in.UpgradeSettings, &out.UpgradeSettings
		*out = new(KubernetesClusterSpecDefaultNodePoolUpgradeSettings)
		(*in).DeepCopyInto(*out)
	}
	if in.VmSize != nil {
		in, out := &in.VmSize, &out.VmSize
		*out = new(string)
		**out = **in
	}
	if in.VnetSubnetID != nil {
		in, out := &in.VnetSubnetID, &out.VnetSubnetID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterSpecDefaultNodePool.
func (in *KubernetesClusterSpecDefaultNodePool) DeepCopy() *KubernetesClusterSpecDefaultNodePool {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterSpecDefaultNodePool)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterSpecDefaultNodePoolUpgradeSettings) DeepCopyInto(out *KubernetesClusterSpecDefaultNodePoolUpgradeSettings) {
	*out = *in
	if in.MaxSurge != nil {
		in, out := &in.MaxSurge, &out.MaxSurge
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterSpecDefaultNodePoolUpgradeSettings.
func (in *KubernetesClusterSpecDefaultNodePoolUpgradeSettings) DeepCopy() *KubernetesClusterSpecDefaultNodePoolUpgradeSettings {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterSpecDefaultNodePoolUpgradeSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterSpecIdentity) DeepCopyInto(out *KubernetesClusterSpecIdentity) {
	*out = *in
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UserAssignedIdentityID != nil {
		in, out := &in.UserAssignedIdentityID, &out.UserAssignedIdentityID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterSpecIdentity.
func (in *KubernetesClusterSpecIdentity) DeepCopy() *KubernetesClusterSpecIdentity {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterSpecIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterSpecKubeAdminConfig) DeepCopyInto(out *KubernetesClusterSpecKubeAdminConfig) {
	*out = *in
	if in.ClientCertificate != nil {
		in, out := &in.ClientCertificate, &out.ClientCertificate
		*out = new(string)
		**out = **in
	}
	if in.ClientKey != nil {
		in, out := &in.ClientKey, &out.ClientKey
		*out = new(string)
		**out = **in
	}
	if in.ClusterCaCertificate != nil {
		in, out := &in.ClusterCaCertificate, &out.ClusterCaCertificate
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterSpecKubeAdminConfig.
func (in *KubernetesClusterSpecKubeAdminConfig) DeepCopy() *KubernetesClusterSpecKubeAdminConfig {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterSpecKubeAdminConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterSpecKubeConfig) DeepCopyInto(out *KubernetesClusterSpecKubeConfig) {
	*out = *in
	if in.ClientCertificate != nil {
		in, out := &in.ClientCertificate, &out.ClientCertificate
		*out = new(string)
		**out = **in
	}
	if in.ClientKey != nil {
		in, out := &in.ClientKey, &out.ClientKey
		*out = new(string)
		**out = **in
	}
	if in.ClusterCaCertificate != nil {
		in, out := &in.ClusterCaCertificate, &out.ClusterCaCertificate
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterSpecKubeConfig.
func (in *KubernetesClusterSpecKubeConfig) DeepCopy() *KubernetesClusterSpecKubeConfig {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterSpecKubeConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterSpecKubeletIdentity) DeepCopyInto(out *KubernetesClusterSpecKubeletIdentity) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ObjectID != nil {
		in, out := &in.ObjectID, &out.ObjectID
		*out = new(string)
		**out = **in
	}
	if in.UserAssignedIdentityID != nil {
		in, out := &in.UserAssignedIdentityID, &out.UserAssignedIdentityID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterSpecKubeletIdentity.
func (in *KubernetesClusterSpecKubeletIdentity) DeepCopy() *KubernetesClusterSpecKubeletIdentity {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterSpecKubeletIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterSpecLinuxProfile) DeepCopyInto(out *KubernetesClusterSpecLinuxProfile) {
	*out = *in
	if in.AdminUsername != nil {
		in, out := &in.AdminUsername, &out.AdminUsername
		*out = new(string)
		**out = **in
	}
	if in.SshKey != nil {
		in, out := &in.SshKey, &out.SshKey
		*out = new(KubernetesClusterSpecLinuxProfileSshKey)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterSpecLinuxProfile.
func (in *KubernetesClusterSpecLinuxProfile) DeepCopy() *KubernetesClusterSpecLinuxProfile {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterSpecLinuxProfile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterSpecLinuxProfileSshKey) DeepCopyInto(out *KubernetesClusterSpecLinuxProfileSshKey) {
	*out = *in
	if in.KeyData != nil {
		in, out := &in.KeyData, &out.KeyData
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterSpecLinuxProfileSshKey.
func (in *KubernetesClusterSpecLinuxProfileSshKey) DeepCopy() *KubernetesClusterSpecLinuxProfileSshKey {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterSpecLinuxProfileSshKey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterSpecNetworkProfile) DeepCopyInto(out *KubernetesClusterSpecNetworkProfile) {
	*out = *in
	if in.DnsServiceIP != nil {
		in, out := &in.DnsServiceIP, &out.DnsServiceIP
		*out = new(string)
		**out = **in
	}
	if in.DockerBridgeCIDR != nil {
		in, out := &in.DockerBridgeCIDR, &out.DockerBridgeCIDR
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerProfile != nil {
		in, out := &in.LoadBalancerProfile, &out.LoadBalancerProfile
		*out = new(KubernetesClusterSpecNetworkProfileLoadBalancerProfile)
		(*in).DeepCopyInto(*out)
	}
	if in.LoadBalancerSku != nil {
		in, out := &in.LoadBalancerSku, &out.LoadBalancerSku
		*out = new(string)
		**out = **in
	}
	if in.NetworkMode != nil {
		in, out := &in.NetworkMode, &out.NetworkMode
		*out = new(string)
		**out = **in
	}
	if in.NetworkPlugin != nil {
		in, out := &in.NetworkPlugin, &out.NetworkPlugin
		*out = new(string)
		**out = **in
	}
	if in.NetworkPolicy != nil {
		in, out := &in.NetworkPolicy, &out.NetworkPolicy
		*out = new(string)
		**out = **in
	}
	if in.OutboundType != nil {
		in, out := &in.OutboundType, &out.OutboundType
		*out = new(string)
		**out = **in
	}
	if in.PodCIDR != nil {
		in, out := &in.PodCIDR, &out.PodCIDR
		*out = new(string)
		**out = **in
	}
	if in.ServiceCIDR != nil {
		in, out := &in.ServiceCIDR, &out.ServiceCIDR
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterSpecNetworkProfile.
func (in *KubernetesClusterSpecNetworkProfile) DeepCopy() *KubernetesClusterSpecNetworkProfile {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterSpecNetworkProfile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterSpecNetworkProfileLoadBalancerProfile) DeepCopyInto(out *KubernetesClusterSpecNetworkProfileLoadBalancerProfile) {
	*out = *in
	if in.EffectiveOutboundIPS != nil {
		in, out := &in.EffectiveOutboundIPS, &out.EffectiveOutboundIPS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.IdleTimeoutInMinutes != nil {
		in, out := &in.IdleTimeoutInMinutes, &out.IdleTimeoutInMinutes
		*out = new(int64)
		**out = **in
	}
	if in.ManagedOutboundIPCount != nil {
		in, out := &in.ManagedOutboundIPCount, &out.ManagedOutboundIPCount
		*out = new(int64)
		**out = **in
	}
	if in.OutboundIPAddressIDS != nil {
		in, out := &in.OutboundIPAddressIDS, &out.OutboundIPAddressIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.OutboundIPPrefixIDS != nil {
		in, out := &in.OutboundIPPrefixIDS, &out.OutboundIPPrefixIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.OutboundPortsAllocated != nil {
		in, out := &in.OutboundPortsAllocated, &out.OutboundPortsAllocated
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterSpecNetworkProfileLoadBalancerProfile.
func (in *KubernetesClusterSpecNetworkProfileLoadBalancerProfile) DeepCopy() *KubernetesClusterSpecNetworkProfileLoadBalancerProfile {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterSpecNetworkProfileLoadBalancerProfile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterSpecRoleBasedAccessControl) DeepCopyInto(out *KubernetesClusterSpecRoleBasedAccessControl) {
	*out = *in
	if in.AzureActiveDirectory != nil {
		in, out := &in.AzureActiveDirectory, &out.AzureActiveDirectory
		*out = new(KubernetesClusterSpecRoleBasedAccessControlAzureActiveDirectory)
		(*in).DeepCopyInto(*out)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterSpecRoleBasedAccessControl.
func (in *KubernetesClusterSpecRoleBasedAccessControl) DeepCopy() *KubernetesClusterSpecRoleBasedAccessControl {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterSpecRoleBasedAccessControl)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterSpecRoleBasedAccessControlAzureActiveDirectory) DeepCopyInto(out *KubernetesClusterSpecRoleBasedAccessControlAzureActiveDirectory) {
	*out = *in
	if in.AdminGroupObjectIDS != nil {
		in, out := &in.AdminGroupObjectIDS, &out.AdminGroupObjectIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AzureRbacEnabled != nil {
		in, out := &in.AzureRbacEnabled, &out.AzureRbacEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ClientAppID != nil {
		in, out := &in.ClientAppID, &out.ClientAppID
		*out = new(string)
		**out = **in
	}
	if in.Managed != nil {
		in, out := &in.Managed, &out.Managed
		*out = new(bool)
		**out = **in
	}
	if in.ServerAppID != nil {
		in, out := &in.ServerAppID, &out.ServerAppID
		*out = new(string)
		**out = **in
	}
	if in.ServerAppSecret != nil {
		in, out := &in.ServerAppSecret, &out.ServerAppSecret
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterSpecRoleBasedAccessControlAzureActiveDirectory.
func (in *KubernetesClusterSpecRoleBasedAccessControlAzureActiveDirectory) DeepCopy() *KubernetesClusterSpecRoleBasedAccessControlAzureActiveDirectory {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterSpecRoleBasedAccessControlAzureActiveDirectory)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterSpecServicePrincipal) DeepCopyInto(out *KubernetesClusterSpecServicePrincipal) {
	*out = *in
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecret != nil {
		in, out := &in.ClientSecret, &out.ClientSecret
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterSpecServicePrincipal.
func (in *KubernetesClusterSpecServicePrincipal) DeepCopy() *KubernetesClusterSpecServicePrincipal {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterSpecServicePrincipal)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterSpecWindowsProfile) DeepCopyInto(out *KubernetesClusterSpecWindowsProfile) {
	*out = *in
	if in.AdminPassword != nil {
		in, out := &in.AdminPassword, &out.AdminPassword
		*out = new(string)
		**out = **in
	}
	if in.AdminUsername != nil {
		in, out := &in.AdminUsername, &out.AdminUsername
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterSpecWindowsProfile.
func (in *KubernetesClusterSpecWindowsProfile) DeepCopy() *KubernetesClusterSpecWindowsProfile {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterSpecWindowsProfile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubernetesClusterStatus) DeepCopyInto(out *KubernetesClusterStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubernetesClusterStatus.
func (in *KubernetesClusterStatus) DeepCopy() *KubernetesClusterStatus {
	if in == nil {
		return nil
	}
	out := new(KubernetesClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodePool) DeepCopyInto(out *NodePool) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodePool.
func (in *NodePool) DeepCopy() *NodePool {
	if in == nil {
		return nil
	}
	out := new(NodePool)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NodePool) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodePoolList) DeepCopyInto(out *NodePoolList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NodePool, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodePoolList.
func (in *NodePoolList) DeepCopy() *NodePoolList {
	if in == nil {
		return nil
	}
	out := new(NodePoolList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NodePoolList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodePoolSpec) DeepCopyInto(out *NodePoolSpec) {
	*out = *in
	in.NodePoolSpec2.DeepCopyInto(&out.NodePoolSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodePoolSpec.
func (in *NodePoolSpec) DeepCopy() *NodePoolSpec {
	if in == nil {
		return nil
	}
	out := new(NodePoolSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodePoolSpec2) DeepCopyInto(out *NodePoolSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.EnableAutoScaling != nil {
		in, out := &in.EnableAutoScaling, &out.EnableAutoScaling
		*out = new(bool)
		**out = **in
	}
	if in.EnableHostEncryption != nil {
		in, out := &in.EnableHostEncryption, &out.EnableHostEncryption
		*out = new(bool)
		**out = **in
	}
	if in.EnableNodePublicIP != nil {
		in, out := &in.EnableNodePublicIP, &out.EnableNodePublicIP
		*out = new(bool)
		**out = **in
	}
	if in.EvictionPolicy != nil {
		in, out := &in.EvictionPolicy, &out.EvictionPolicy
		*out = new(string)
		**out = **in
	}
	if in.KubernetesClusterID != nil {
		in, out := &in.KubernetesClusterID, &out.KubernetesClusterID
		*out = new(string)
		**out = **in
	}
	if in.MaxCount != nil {
		in, out := &in.MaxCount, &out.MaxCount
		*out = new(int64)
		**out = **in
	}
	if in.MaxPods != nil {
		in, out := &in.MaxPods, &out.MaxPods
		*out = new(int64)
		**out = **in
	}
	if in.MinCount != nil {
		in, out := &in.MinCount, &out.MinCount
		*out = new(int64)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NodeCount != nil {
		in, out := &in.NodeCount, &out.NodeCount
		*out = new(int64)
		**out = **in
	}
	if in.NodeLabels != nil {
		in, out := &in.NodeLabels, &out.NodeLabels
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.NodeTaints != nil {
		in, out := &in.NodeTaints, &out.NodeTaints
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.OrchestratorVersion != nil {
		in, out := &in.OrchestratorVersion, &out.OrchestratorVersion
		*out = new(string)
		**out = **in
	}
	if in.OsDiskSizeGb != nil {
		in, out := &in.OsDiskSizeGb, &out.OsDiskSizeGb
		*out = new(int64)
		**out = **in
	}
	if in.OsDiskType != nil {
		in, out := &in.OsDiskType, &out.OsDiskType
		*out = new(string)
		**out = **in
	}
	if in.OsType != nil {
		in, out := &in.OsType, &out.OsType
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(string)
		**out = **in
	}
	if in.ProximityPlacementGroupID != nil {
		in, out := &in.ProximityPlacementGroupID, &out.ProximityPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.SpotMaxPrice != nil {
		in, out := &in.SpotMaxPrice, &out.SpotMaxPrice
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.UpgradeSettings != nil {
		in, out := &in.UpgradeSettings, &out.UpgradeSettings
		*out = new(NodePoolSpecUpgradeSettings)
		(*in).DeepCopyInto(*out)
	}
	if in.VmSize != nil {
		in, out := &in.VmSize, &out.VmSize
		*out = new(string)
		**out = **in
	}
	if in.VnetSubnetID != nil {
		in, out := &in.VnetSubnetID, &out.VnetSubnetID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodePoolSpec2.
func (in *NodePoolSpec2) DeepCopy() *NodePoolSpec2 {
	if in == nil {
		return nil
	}
	out := new(NodePoolSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodePoolSpecUpgradeSettings) DeepCopyInto(out *NodePoolSpecUpgradeSettings) {
	*out = *in
	if in.MaxSurge != nil {
		in, out := &in.MaxSurge, &out.MaxSurge
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodePoolSpecUpgradeSettings.
func (in *NodePoolSpecUpgradeSettings) DeepCopy() *NodePoolSpecUpgradeSettings {
	if in == nil {
		return nil
	}
	out := new(NodePoolSpecUpgradeSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodePoolStatus) DeepCopyInto(out *NodePoolStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodePoolStatus.
func (in *NodePoolStatus) DeepCopy() *NodePoolStatus {
	if in == nil {
		return nil
	}
	out := new(NodePoolStatus)
	in.DeepCopyInto(out)
	return out
}
