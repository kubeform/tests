/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Provider struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ProviderSpec   `json:"spec,omitempty"`
	Status            ProviderStatus `json:"status,omitempty"`
}

type ProviderSpec struct {
	ProviderSpec2 `json:",inline"`
	// +optional
	KubeformOutput ProviderSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type ProviderSpecAction struct {
	Endpoint *string `json:"endpoint" tf:"endpoint"`
	Name     *string `json:"name" tf:"name"`
}

type ProviderSpecResourceType struct {
	Endpoint *string `json:"endpoint" tf:"endpoint"`
	Name     *string `json:"name" tf:"name"`
	// +optional
	RoutingType *string `json:"routingType,omitempty" tf:"routing_type"`
}

type ProviderSpecValidation struct {
	Specification *string `json:"specification" tf:"specification"`
}

type ProviderSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	Action            []ProviderSpecAction `json:"action,omitempty" tf:"action"`
	Location          *string              `json:"location" tf:"location"`
	Name              *string              `json:"name" tf:"name"`
	ResourceGroupName *string              `json:"resourceGroupName" tf:"resource_group_name"`
	// +optional
	ResourceType []ProviderSpecResourceType `json:"resourceType,omitempty" tf:"resource_type"`
	// +optional
	Tags *map[string]string `json:"tags,omitempty" tf:"tags"`
	// +optional
	Validation []ProviderSpecValidation `json:"validation,omitempty" tf:"validation"`
}

type ProviderStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ProviderList is a list of Providers
type ProviderList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Provider CRD objects
	Items []Provider `json:"items,omitempty"`
}
