/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type AutoscaleSetting struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AutoscaleSettingSpec   `json:"spec,omitempty"`
	Status            AutoscaleSettingStatus `json:"status,omitempty"`
}

type AutoscaleSettingSpec struct {
	AutoscaleSettingSpec2 `json:",inline"`
	// +optional
	KubeformOutput AutoscaleSettingSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type AutoscaleSettingSpecNotificationEmail struct {
	// +optional
	CustomEmails []string `json:"customEmails,omitempty" tf:"custom_emails"`
	// +optional
	SendToSubscriptionAdministrator *bool `json:"sendToSubscriptionAdministrator,omitempty" tf:"send_to_subscription_administrator"`
	// +optional
	SendToSubscriptionCoAdministrator *bool `json:"sendToSubscriptionCoAdministrator,omitempty" tf:"send_to_subscription_co_administrator"`
}

type AutoscaleSettingSpecNotificationWebhook struct {
	// +optional
	Properties *map[string]string `json:"properties,omitempty" tf:"properties"`
	ServiceURI *string            `json:"serviceURI" tf:"service_uri"`
}

type AutoscaleSettingSpecNotification struct {
	// +optional
	Email *AutoscaleSettingSpecNotificationEmail `json:"email,omitempty" tf:"email"`
	// +optional
	Webhook []AutoscaleSettingSpecNotificationWebhook `json:"webhook,omitempty" tf:"webhook"`
}

type AutoscaleSettingSpecProfileCapacity struct {
	Default *int64 `json:"default" tf:"default"`
	Maximum *int64 `json:"maximum" tf:"maximum"`
	Minimum *int64 `json:"minimum" tf:"minimum"`
}

type AutoscaleSettingSpecProfileFixedDate struct {
	End   *string `json:"end" tf:"end"`
	Start *string `json:"start" tf:"start"`
	// +optional
	Timezone *string `json:"timezone,omitempty" tf:"timezone"`
}

type AutoscaleSettingSpecProfileRecurrence struct {
	Days    []string `json:"days" tf:"days"`
	Hours   []int64  `json:"hours" tf:"hours"`
	Minutes []int64  `json:"minutes" tf:"minutes"`
	// +optional
	Timezone *string `json:"timezone,omitempty" tf:"timezone"`
}

type AutoscaleSettingSpecProfileRuleMetricTriggerDimensions struct {
	Name     *string  `json:"name" tf:"name"`
	Operator *string  `json:"operator" tf:"operator"`
	Values   []string `json:"values" tf:"values"`
}

type AutoscaleSettingSpecProfileRuleMetricTrigger struct {
	// +optional
	Dimensions []AutoscaleSettingSpecProfileRuleMetricTriggerDimensions `json:"dimensions,omitempty" tf:"dimensions"`
	MetricName *string                                                  `json:"metricName" tf:"metric_name"`
	// +optional
	MetricNamespace  *string  `json:"metricNamespace,omitempty" tf:"metric_namespace"`
	MetricResourceID *string  `json:"metricResourceID" tf:"metric_resource_id"`
	Operator         *string  `json:"operator" tf:"operator"`
	Statistic        *string  `json:"statistic" tf:"statistic"`
	Threshold        *float64 `json:"threshold" tf:"threshold"`
	TimeAggregation  *string  `json:"timeAggregation" tf:"time_aggregation"`
	TimeGrain        *string  `json:"timeGrain" tf:"time_grain"`
	TimeWindow       *string  `json:"timeWindow" tf:"time_window"`
}

type AutoscaleSettingSpecProfileRuleScaleAction struct {
	Cooldown  *string `json:"cooldown" tf:"cooldown"`
	Direction *string `json:"direction" tf:"direction"`
	Type      *string `json:"type" tf:"type"`
	Value     *int64  `json:"value" tf:"value"`
}

type AutoscaleSettingSpecProfileRule struct {
	MetricTrigger *AutoscaleSettingSpecProfileRuleMetricTrigger `json:"metricTrigger" tf:"metric_trigger"`
	ScaleAction   *AutoscaleSettingSpecProfileRuleScaleAction   `json:"scaleAction" tf:"scale_action"`
}

type AutoscaleSettingSpecProfile struct {
	Capacity *AutoscaleSettingSpecProfileCapacity `json:"capacity" tf:"capacity"`
	// +optional
	FixedDate *AutoscaleSettingSpecProfileFixedDate `json:"fixedDate,omitempty" tf:"fixed_date"`
	Name      *string                               `json:"name" tf:"name"`
	// +optional
	Recurrence *AutoscaleSettingSpecProfileRecurrence `json:"recurrence,omitempty" tf:"recurrence"`
	// +optional
	// +kubebuilder:validation:MaxItems=10
	Rule []AutoscaleSettingSpecProfileRule `json:"rule,omitempty" tf:"rule"`
}

type AutoscaleSettingSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	Enabled  *bool   `json:"enabled,omitempty" tf:"enabled"`
	Location *string `json:"location" tf:"location"`
	Name     *string `json:"name" tf:"name"`
	// +optional
	Notification *AutoscaleSettingSpecNotification `json:"notification,omitempty" tf:"notification"`
	// +kubebuilder:validation:MaxItems=20
	Profile           []AutoscaleSettingSpecProfile `json:"profile" tf:"profile"`
	ResourceGroupName *string                       `json:"resourceGroupName" tf:"resource_group_name"`
	// +optional
	Tags             *map[string]string `json:"tags,omitempty" tf:"tags"`
	TargetResourceID *string            `json:"targetResourceID" tf:"target_resource_id"`
}

type AutoscaleSettingStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// AutoscaleSettingList is a list of AutoscaleSettings
type AutoscaleSettingList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of AutoscaleSetting CRD objects
	Items []AutoscaleSetting `json:"items,omitempty"`
}
