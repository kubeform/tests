/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type ScheduledQueryRulesAlert struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ScheduledQueryRulesAlertSpec   `json:"spec,omitempty"`
	Status            ScheduledQueryRulesAlertStatus `json:"status,omitempty"`
}

type ScheduledQueryRulesAlertSpec struct {
	ScheduledQueryRulesAlertSpec2 `json:",inline"`
	// +optional
	KubeformOutput ScheduledQueryRulesAlertSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type ScheduledQueryRulesAlertSpecAction struct {
	ActionGroup []string `json:"actionGroup" tf:"action_group"`
	// +optional
	CustomWebhookPayload *string `json:"customWebhookPayload,omitempty" tf:"custom_webhook_payload"`
	// +optional
	EmailSubject *string `json:"emailSubject,omitempty" tf:"email_subject"`
}

type ScheduledQueryRulesAlertSpecTriggerMetricTrigger struct {
	MetricColumn      *string  `json:"metricColumn" tf:"metric_column"`
	MetricTriggerType *string  `json:"metricTriggerType" tf:"metric_trigger_type"`
	Operator          *string  `json:"operator" tf:"operator"`
	Threshold         *float64 `json:"threshold" tf:"threshold"`
}

type ScheduledQueryRulesAlertSpecTrigger struct {
	// +optional
	MetricTrigger *ScheduledQueryRulesAlertSpecTriggerMetricTrigger `json:"metricTrigger,omitempty" tf:"metric_trigger"`
	Operator      *string                                           `json:"operator" tf:"operator"`
	Threshold     *float64                                          `json:"threshold" tf:"threshold"`
}

type ScheduledQueryRulesAlertSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	Action *ScheduledQueryRulesAlertSpecAction `json:"action" tf:"action"`
	// +optional
	// +kubebuilder:validation:MaxItems=100
	AuthorizedResourceIDS []string `json:"authorizedResourceIDS,omitempty" tf:"authorized_resource_ids"`
	DataSourceID          *string  `json:"dataSourceID" tf:"data_source_id"`
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// +optional
	Enabled   *bool   `json:"enabled,omitempty" tf:"enabled"`
	Frequency *int64  `json:"frequency" tf:"frequency"`
	Location  *string `json:"location" tf:"location"`
	Name      *string `json:"name" tf:"name"`
	Query     *string `json:"query" tf:"query"`
	// +optional
	QueryType         *string `json:"queryType,omitempty" tf:"query_type"`
	ResourceGroupName *string `json:"resourceGroupName" tf:"resource_group_name"`
	// +optional
	Severity *int64 `json:"severity,omitempty" tf:"severity"`
	// +optional
	Tags *map[string]string `json:"tags,omitempty" tf:"tags"`
	// +optional
	Throttling *int64                               `json:"throttling,omitempty" tf:"throttling"`
	TimeWindow *int64                               `json:"timeWindow" tf:"time_window"`
	Trigger    *ScheduledQueryRulesAlertSpecTrigger `json:"trigger" tf:"trigger"`
}

type ScheduledQueryRulesAlertStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ScheduledQueryRulesAlertList is a list of ScheduledQueryRulesAlerts
type ScheduledQueryRulesAlertList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of ScheduledQueryRulesAlert CRD objects
	Items []ScheduledQueryRulesAlert `json:"items,omitempty"`
}
