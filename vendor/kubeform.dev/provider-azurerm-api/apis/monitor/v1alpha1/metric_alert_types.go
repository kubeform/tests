/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type MetricAlert struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              MetricAlertSpec   `json:"spec,omitempty"`
	Status            MetricAlertStatus `json:"status,omitempty"`
}

type MetricAlertSpec struct {
	MetricAlertSpec2 `json:",inline"`
	// +optional
	KubeformOutput MetricAlertSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type MetricAlertSpecAction struct {
	ActionGroupID *string `json:"actionGroupID" tf:"action_group_id"`
	// +optional
	WebhookProperties *map[string]string `json:"webhookProperties,omitempty" tf:"webhook_properties"`
}

type MetricAlertSpecApplicationInsightsWebTestLocationAvailabilityCriteria struct {
	ComponentID         *string `json:"componentID" tf:"component_id"`
	FailedLocationCount *int64  `json:"failedLocationCount" tf:"failed_location_count"`
	WebTestID           *string `json:"webTestID" tf:"web_test_id"`
}

type MetricAlertSpecCriteriaDimension struct {
	Name     *string `json:"name" tf:"name"`
	Operator *string `json:"operator" tf:"operator"`
	// +kubebuilder:validation:MinItems=1
	Values []string `json:"values" tf:"values"`
}

type MetricAlertSpecCriteria struct {
	Aggregation *string `json:"aggregation" tf:"aggregation"`
	// +optional
	Dimension       []MetricAlertSpecCriteriaDimension `json:"dimension,omitempty" tf:"dimension"`
	MetricName      *string                            `json:"metricName" tf:"metric_name"`
	MetricNamespace *string                            `json:"metricNamespace" tf:"metric_namespace"`
	Operator        *string                            `json:"operator" tf:"operator"`
	// +optional
	SkipMetricValidation *bool    `json:"skipMetricValidation,omitempty" tf:"skip_metric_validation"`
	Threshold            *float64 `json:"threshold" tf:"threshold"`
}

type MetricAlertSpecDynamicCriteriaDimension struct {
	Name     *string `json:"name" tf:"name"`
	Operator *string `json:"operator" tf:"operator"`
	// +kubebuilder:validation:MinItems=1
	Values []string `json:"values" tf:"values"`
}

type MetricAlertSpecDynamicCriteria struct {
	Aggregation      *string `json:"aggregation" tf:"aggregation"`
	AlertSensitivity *string `json:"alertSensitivity" tf:"alert_sensitivity"`
	// +optional
	Dimension []MetricAlertSpecDynamicCriteriaDimension `json:"dimension,omitempty" tf:"dimension"`
	// +optional
	EvaluationFailureCount *int64 `json:"evaluationFailureCount,omitempty" tf:"evaluation_failure_count"`
	// +optional
	EvaluationTotalCount *int64 `json:"evaluationTotalCount,omitempty" tf:"evaluation_total_count"`
	// +optional
	IgnoreDataBefore *string `json:"ignoreDataBefore,omitempty" tf:"ignore_data_before"`
	MetricName       *string `json:"metricName" tf:"metric_name"`
	MetricNamespace  *string `json:"metricNamespace" tf:"metric_namespace"`
	Operator         *string `json:"operator" tf:"operator"`
	// +optional
	SkipMetricValidation *bool `json:"skipMetricValidation,omitempty" tf:"skip_metric_validation"`
}

type MetricAlertSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	Action []MetricAlertSpecAction `json:"action,omitempty" tf:"action"`
	// +optional
	ApplicationInsightsWebTestLocationAvailabilityCriteria *MetricAlertSpecApplicationInsightsWebTestLocationAvailabilityCriteria `json:"applicationInsightsWebTestLocationAvailabilityCriteria,omitempty" tf:"application_insights_web_test_location_availability_criteria"`
	// +optional
	AutoMitigate *bool `json:"autoMitigate,omitempty" tf:"auto_mitigate"`
	// +optional
	// +kubebuilder:validation:MinItems=1
	Criteria []MetricAlertSpecCriteria `json:"criteria,omitempty" tf:"criteria"`
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// +optional
	DynamicCriteria *MetricAlertSpecDynamicCriteria `json:"dynamicCriteria,omitempty" tf:"dynamic_criteria"`
	// +optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled"`
	// +optional
	Frequency         *string `json:"frequency,omitempty" tf:"frequency"`
	Name              *string `json:"name" tf:"name"`
	ResourceGroupName *string `json:"resourceGroupName" tf:"resource_group_name"`
	// +kubebuilder:validation:MinItems=1
	Scopes []string `json:"scopes" tf:"scopes"`
	// +optional
	Severity *int64 `json:"severity,omitempty" tf:"severity"`
	// +optional
	Tags *map[string]string `json:"tags,omitempty" tf:"tags"`
	// The location of the target resource. Required when using subscription, resource group scope or multiple scopes.
	// +optional
	TargetResourceLocation *string `json:"targetResourceLocation,omitempty" tf:"target_resource_location"`
	// The resource type (e.g. Microsoft.Compute/virtualMachines) of the target resource. Required when using subscription, resource group scope or multiple scopes.
	// +optional
	TargetResourceType *string `json:"targetResourceType,omitempty" tf:"target_resource_type"`
	// +optional
	WindowSize *string `json:"windowSize,omitempty" tf:"window_size"`
}

type MetricAlertStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// MetricAlertList is a list of MetricAlerts
type MetricAlertList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of MetricAlert CRD objects
	Items []MetricAlert `json:"items,omitempty"`
}
