// +build !ignore_autogenerated

/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	apiv1alpha1 "kubeform.dev/apimachinery/api/v1alpha1"

	runtime "k8s.io/apimachinery/pkg/runtime"
	v1 "kmodules.xyz/client-go/api/v1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomHTTPSConfiguration) DeepCopyInto(out *CustomHTTPSConfiguration) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomHTTPSConfiguration.
func (in *CustomHTTPSConfiguration) DeepCopy() *CustomHTTPSConfiguration {
	if in == nil {
		return nil
	}
	out := new(CustomHTTPSConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CustomHTTPSConfiguration) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomHTTPSConfigurationList) DeepCopyInto(out *CustomHTTPSConfigurationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CustomHTTPSConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomHTTPSConfigurationList.
func (in *CustomHTTPSConfigurationList) DeepCopy() *CustomHTTPSConfigurationList {
	if in == nil {
		return nil
	}
	out := new(CustomHTTPSConfigurationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CustomHTTPSConfigurationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomHTTPSConfigurationSpec) DeepCopyInto(out *CustomHTTPSConfigurationSpec) {
	*out = *in
	in.CustomHTTPSConfigurationSpec2.DeepCopyInto(&out.CustomHTTPSConfigurationSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomHTTPSConfigurationSpec.
func (in *CustomHTTPSConfigurationSpec) DeepCopy() *CustomHTTPSConfigurationSpec {
	if in == nil {
		return nil
	}
	out := new(CustomHTTPSConfigurationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomHTTPSConfigurationSpec2) DeepCopyInto(out *CustomHTTPSConfigurationSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.CustomHTTPSConfiguration != nil {
		in, out := &in.CustomHTTPSConfiguration, &out.CustomHTTPSConfiguration
		*out = new(CustomHTTPSConfigurationSpecCustomHTTPSConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomHTTPSProvisioningEnabled != nil {
		in, out := &in.CustomHTTPSProvisioningEnabled, &out.CustomHTTPSProvisioningEnabled
		*out = new(bool)
		**out = **in
	}
	if in.FrontendEndpointID != nil {
		in, out := &in.FrontendEndpointID, &out.FrontendEndpointID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomHTTPSConfigurationSpec2.
func (in *CustomHTTPSConfigurationSpec2) DeepCopy() *CustomHTTPSConfigurationSpec2 {
	if in == nil {
		return nil
	}
	out := new(CustomHTTPSConfigurationSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomHTTPSConfigurationSpecCustomHTTPSConfiguration) DeepCopyInto(out *CustomHTTPSConfigurationSpecCustomHTTPSConfiguration) {
	*out = *in
	if in.AzureKeyVaultCertificateSecretName != nil {
		in, out := &in.AzureKeyVaultCertificateSecretName, &out.AzureKeyVaultCertificateSecretName
		*out = new(string)
		**out = **in
	}
	if in.AzureKeyVaultCertificateSecretVersion != nil {
		in, out := &in.AzureKeyVaultCertificateSecretVersion, &out.AzureKeyVaultCertificateSecretVersion
		*out = new(string)
		**out = **in
	}
	if in.AzureKeyVaultCertificateVaultID != nil {
		in, out := &in.AzureKeyVaultCertificateVaultID, &out.AzureKeyVaultCertificateVaultID
		*out = new(string)
		**out = **in
	}
	if in.CertificateSource != nil {
		in, out := &in.CertificateSource, &out.CertificateSource
		*out = new(string)
		**out = **in
	}
	if in.MinimumTLSVersion != nil {
		in, out := &in.MinimumTLSVersion, &out.MinimumTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.ProvisioningState != nil {
		in, out := &in.ProvisioningState, &out.ProvisioningState
		*out = new(string)
		**out = **in
	}
	if in.ProvisioningSubstate != nil {
		in, out := &in.ProvisioningSubstate, &out.ProvisioningSubstate
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomHTTPSConfigurationSpecCustomHTTPSConfiguration.
func (in *CustomHTTPSConfigurationSpecCustomHTTPSConfiguration) DeepCopy() *CustomHTTPSConfigurationSpecCustomHTTPSConfiguration {
	if in == nil {
		return nil
	}
	out := new(CustomHTTPSConfigurationSpecCustomHTTPSConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomHTTPSConfigurationStatus) DeepCopyInto(out *CustomHTTPSConfigurationStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomHTTPSConfigurationStatus.
func (in *CustomHTTPSConfigurationStatus) DeepCopy() *CustomHTTPSConfigurationStatus {
	if in == nil {
		return nil
	}
	out := new(CustomHTTPSConfigurationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicy) DeepCopyInto(out *FirewallPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicy.
func (in *FirewallPolicy) DeepCopy() *FirewallPolicy {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FirewallPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyList) DeepCopyInto(out *FirewallPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FirewallPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyList.
func (in *FirewallPolicyList) DeepCopy() *FirewallPolicyList {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FirewallPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicySpec) DeepCopyInto(out *FirewallPolicySpec) {
	*out = *in
	in.FirewallPolicySpec2.DeepCopyInto(&out.FirewallPolicySpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicySpec.
func (in *FirewallPolicySpec) DeepCopy() *FirewallPolicySpec {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicySpec2) DeepCopyInto(out *FirewallPolicySpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.CustomBlockResponseBody != nil {
		in, out := &in.CustomBlockResponseBody, &out.CustomBlockResponseBody
		*out = new(string)
		**out = **in
	}
	if in.CustomBlockResponseStatusCode != nil {
		in, out := &in.CustomBlockResponseStatusCode, &out.CustomBlockResponseStatusCode
		*out = new(int64)
		**out = **in
	}
	if in.CustomRule != nil {
		in, out := &in.CustomRule, &out.CustomRule
		*out = make([]FirewallPolicySpecCustomRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.FrontendEndpointIDS != nil {
		in, out := &in.FrontendEndpointIDS, &out.FrontendEndpointIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.ManagedRule != nil {
		in, out := &in.ManagedRule, &out.ManagedRule
		*out = make([]FirewallPolicySpecManagedRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RedirectURL != nil {
		in, out := &in.RedirectURL, &out.RedirectURL
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicySpec2.
func (in *FirewallPolicySpec2) DeepCopy() *FirewallPolicySpec2 {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicySpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicySpecCustomRule) DeepCopyInto(out *FirewallPolicySpecCustomRule) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.MatchCondition != nil {
		in, out := &in.MatchCondition, &out.MatchCondition
		*out = make([]FirewallPolicySpecCustomRuleMatchCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int64)
		**out = **in
	}
	if in.RateLimitDurationInMinutes != nil {
		in, out := &in.RateLimitDurationInMinutes, &out.RateLimitDurationInMinutes
		*out = new(int64)
		**out = **in
	}
	if in.RateLimitThreshold != nil {
		in, out := &in.RateLimitThreshold, &out.RateLimitThreshold
		*out = new(int64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicySpecCustomRule.
func (in *FirewallPolicySpecCustomRule) DeepCopy() *FirewallPolicySpecCustomRule {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicySpecCustomRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicySpecCustomRuleMatchCondition) DeepCopyInto(out *FirewallPolicySpecCustomRuleMatchCondition) {
	*out = *in
	if in.MatchValues != nil {
		in, out := &in.MatchValues, &out.MatchValues
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.MatchVariable != nil {
		in, out := &in.MatchVariable, &out.MatchVariable
		*out = new(string)
		**out = **in
	}
	if in.NegationCondition != nil {
		in, out := &in.NegationCondition, &out.NegationCondition
		*out = new(bool)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(string)
		**out = **in
	}
	if in.Transforms != nil {
		in, out := &in.Transforms, &out.Transforms
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicySpecCustomRuleMatchCondition.
func (in *FirewallPolicySpecCustomRuleMatchCondition) DeepCopy() *FirewallPolicySpecCustomRuleMatchCondition {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicySpecCustomRuleMatchCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicySpecManagedRule) DeepCopyInto(out *FirewallPolicySpecManagedRule) {
	*out = *in
	if in.Exclusion != nil {
		in, out := &in.Exclusion, &out.Exclusion
		*out = make([]FirewallPolicySpecManagedRuleExclusion, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Override != nil {
		in, out := &in.Override, &out.Override
		*out = make([]FirewallPolicySpecManagedRuleOverride, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicySpecManagedRule.
func (in *FirewallPolicySpecManagedRule) DeepCopy() *FirewallPolicySpecManagedRule {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicySpecManagedRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicySpecManagedRuleExclusion) DeepCopyInto(out *FirewallPolicySpecManagedRuleExclusion) {
	*out = *in
	if in.MatchVariable != nil {
		in, out := &in.MatchVariable, &out.MatchVariable
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicySpecManagedRuleExclusion.
func (in *FirewallPolicySpecManagedRuleExclusion) DeepCopy() *FirewallPolicySpecManagedRuleExclusion {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicySpecManagedRuleExclusion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicySpecManagedRuleOverride) DeepCopyInto(out *FirewallPolicySpecManagedRuleOverride) {
	*out = *in
	if in.Exclusion != nil {
		in, out := &in.Exclusion, &out.Exclusion
		*out = make([]FirewallPolicySpecManagedRuleOverrideExclusion, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = make([]FirewallPolicySpecManagedRuleOverrideRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuleGroupName != nil {
		in, out := &in.RuleGroupName, &out.RuleGroupName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicySpecManagedRuleOverride.
func (in *FirewallPolicySpecManagedRuleOverride) DeepCopy() *FirewallPolicySpecManagedRuleOverride {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicySpecManagedRuleOverride)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicySpecManagedRuleOverrideExclusion) DeepCopyInto(out *FirewallPolicySpecManagedRuleOverrideExclusion) {
	*out = *in
	if in.MatchVariable != nil {
		in, out := &in.MatchVariable, &out.MatchVariable
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicySpecManagedRuleOverrideExclusion.
func (in *FirewallPolicySpecManagedRuleOverrideExclusion) DeepCopy() *FirewallPolicySpecManagedRuleOverrideExclusion {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicySpecManagedRuleOverrideExclusion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicySpecManagedRuleOverrideRule) DeepCopyInto(out *FirewallPolicySpecManagedRuleOverrideRule) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Exclusion != nil {
		in, out := &in.Exclusion, &out.Exclusion
		*out = make([]FirewallPolicySpecManagedRuleOverrideRuleExclusion, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RuleID != nil {
		in, out := &in.RuleID, &out.RuleID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicySpecManagedRuleOverrideRule.
func (in *FirewallPolicySpecManagedRuleOverrideRule) DeepCopy() *FirewallPolicySpecManagedRuleOverrideRule {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicySpecManagedRuleOverrideRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicySpecManagedRuleOverrideRuleExclusion) DeepCopyInto(out *FirewallPolicySpecManagedRuleOverrideRuleExclusion) {
	*out = *in
	if in.MatchVariable != nil {
		in, out := &in.MatchVariable, &out.MatchVariable
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicySpecManagedRuleOverrideRuleExclusion.
func (in *FirewallPolicySpecManagedRuleOverrideRuleExclusion) DeepCopy() *FirewallPolicySpecManagedRuleOverrideRuleExclusion {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicySpecManagedRuleOverrideRuleExclusion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallPolicyStatus) DeepCopyInto(out *FirewallPolicyStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallPolicyStatus.
func (in *FirewallPolicyStatus) DeepCopy() *FirewallPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(FirewallPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Frontdoor) DeepCopyInto(out *Frontdoor) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Frontdoor.
func (in *Frontdoor) DeepCopy() *Frontdoor {
	if in == nil {
		return nil
	}
	out := new(Frontdoor)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Frontdoor) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorList) DeepCopyInto(out *FrontdoorList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Frontdoor, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorList.
func (in *FrontdoorList) DeepCopy() *FrontdoorList {
	if in == nil {
		return nil
	}
	out := new(FrontdoorList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FrontdoorList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorSpec) DeepCopyInto(out *FrontdoorSpec) {
	*out = *in
	in.FrontdoorSpec2.DeepCopyInto(&out.FrontdoorSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorSpec.
func (in *FrontdoorSpec) DeepCopy() *FrontdoorSpec {
	if in == nil {
		return nil
	}
	out := new(FrontdoorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorSpec2) DeepCopyInto(out *FrontdoorSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.BackendPool != nil {
		in, out := &in.BackendPool, &out.BackendPool
		*out = make([]FrontdoorSpecBackendPool, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BackendPoolHealthProbe != nil {
		in, out := &in.BackendPoolHealthProbe, &out.BackendPoolHealthProbe
		*out = make([]FrontdoorSpecBackendPoolHealthProbe, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BackendPoolHealthProbes != nil {
		in, out := &in.BackendPoolHealthProbes, &out.BackendPoolHealthProbes
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.BackendPoolLoadBalancing != nil {
		in, out := &in.BackendPoolLoadBalancing, &out.BackendPoolLoadBalancing
		*out = make([]FrontdoorSpecBackendPoolLoadBalancing, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BackendPoolLoadBalancingSettings != nil {
		in, out := &in.BackendPoolLoadBalancingSettings, &out.BackendPoolLoadBalancingSettings
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.BackendPools != nil {
		in, out := &in.BackendPools, &out.BackendPools
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.BackendPoolsSendReceiveTimeoutSeconds != nil {
		in, out := &in.BackendPoolsSendReceiveTimeoutSeconds, &out.BackendPoolsSendReceiveTimeoutSeconds
		*out = new(int64)
		**out = **in
	}
	if in.Cname != nil {
		in, out := &in.Cname, &out.Cname
		*out = new(string)
		**out = **in
	}
	if in.EnforceBackendPoolsCertificateNameCheck != nil {
		in, out := &in.EnforceBackendPoolsCertificateNameCheck, &out.EnforceBackendPoolsCertificateNameCheck
		*out = new(bool)
		**out = **in
	}
	if in.ExplicitResourceOrder != nil {
		in, out := &in.ExplicitResourceOrder, &out.ExplicitResourceOrder
		*out = make([]FrontdoorSpecExplicitResourceOrder, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.FrontendEndpoint != nil {
		in, out := &in.FrontendEndpoint, &out.FrontendEndpoint
		*out = make([]FrontdoorSpecFrontendEndpoint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FrontendEndpoints != nil {
		in, out := &in.FrontendEndpoints, &out.FrontendEndpoints
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.HeaderFrontdoorID != nil {
		in, out := &in.HeaderFrontdoorID, &out.HeaderFrontdoorID
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerEnabled != nil {
		in, out := &in.LoadBalancerEnabled, &out.LoadBalancerEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.RoutingRule != nil {
		in, out := &in.RoutingRule, &out.RoutingRule
		*out = make([]FrontdoorSpecRoutingRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RoutingRules != nil {
		in, out := &in.RoutingRules, &out.RoutingRules
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorSpec2.
func (in *FrontdoorSpec2) DeepCopy() *FrontdoorSpec2 {
	if in == nil {
		return nil
	}
	out := new(FrontdoorSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorSpecBackendPool) DeepCopyInto(out *FrontdoorSpecBackendPool) {
	*out = *in
	if in.Backend != nil {
		in, out := &in.Backend, &out.Backend
		*out = make([]FrontdoorSpecBackendPoolBackend, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HealthProbeName != nil {
		in, out := &in.HealthProbeName, &out.HealthProbeName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancingName != nil {
		in, out := &in.LoadBalancingName, &out.LoadBalancingName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorSpecBackendPool.
func (in *FrontdoorSpecBackendPool) DeepCopy() *FrontdoorSpecBackendPool {
	if in == nil {
		return nil
	}
	out := new(FrontdoorSpecBackendPool)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorSpecBackendPoolBackend) DeepCopyInto(out *FrontdoorSpecBackendPoolBackend) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.HostHeader != nil {
		in, out := &in.HostHeader, &out.HostHeader
		*out = new(string)
		**out = **in
	}
	if in.HttpPort != nil {
		in, out := &in.HttpPort, &out.HttpPort
		*out = new(int64)
		**out = **in
	}
	if in.HttpsPort != nil {
		in, out := &in.HttpsPort, &out.HttpsPort
		*out = new(int64)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int64)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorSpecBackendPoolBackend.
func (in *FrontdoorSpecBackendPoolBackend) DeepCopy() *FrontdoorSpecBackendPoolBackend {
	if in == nil {
		return nil
	}
	out := new(FrontdoorSpecBackendPoolBackend)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorSpecBackendPoolHealthProbe) DeepCopyInto(out *FrontdoorSpecBackendPoolHealthProbe) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IntervalInSeconds != nil {
		in, out := &in.IntervalInSeconds, &out.IntervalInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.ProbeMethod != nil {
		in, out := &in.ProbeMethod, &out.ProbeMethod
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorSpecBackendPoolHealthProbe.
func (in *FrontdoorSpecBackendPoolHealthProbe) DeepCopy() *FrontdoorSpecBackendPoolHealthProbe {
	if in == nil {
		return nil
	}
	out := new(FrontdoorSpecBackendPoolHealthProbe)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorSpecBackendPoolLoadBalancing) DeepCopyInto(out *FrontdoorSpecBackendPoolLoadBalancing) {
	*out = *in
	if in.AdditionalLatencyMilliseconds != nil {
		in, out := &in.AdditionalLatencyMilliseconds, &out.AdditionalLatencyMilliseconds
		*out = new(int64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SampleSize != nil {
		in, out := &in.SampleSize, &out.SampleSize
		*out = new(int64)
		**out = **in
	}
	if in.SuccessfulSamplesRequired != nil {
		in, out := &in.SuccessfulSamplesRequired, &out.SuccessfulSamplesRequired
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorSpecBackendPoolLoadBalancing.
func (in *FrontdoorSpecBackendPoolLoadBalancing) DeepCopy() *FrontdoorSpecBackendPoolLoadBalancing {
	if in == nil {
		return nil
	}
	out := new(FrontdoorSpecBackendPoolLoadBalancing)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorSpecExplicitResourceOrder) DeepCopyInto(out *FrontdoorSpecExplicitResourceOrder) {
	*out = *in
	if in.BackendPoolHealthProbeIDS != nil {
		in, out := &in.BackendPoolHealthProbeIDS, &out.BackendPoolHealthProbeIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.BackendPoolIDS != nil {
		in, out := &in.BackendPoolIDS, &out.BackendPoolIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.BackendPoolLoadBalancingIDS != nil {
		in, out := &in.BackendPoolLoadBalancingIDS, &out.BackendPoolLoadBalancingIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.FrontendEndpointIDS != nil {
		in, out := &in.FrontendEndpointIDS, &out.FrontendEndpointIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.RoutingRuleIDS != nil {
		in, out := &in.RoutingRuleIDS, &out.RoutingRuleIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorSpecExplicitResourceOrder.
func (in *FrontdoorSpecExplicitResourceOrder) DeepCopy() *FrontdoorSpecExplicitResourceOrder {
	if in == nil {
		return nil
	}
	out := new(FrontdoorSpecExplicitResourceOrder)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorSpecFrontendEndpoint) DeepCopyInto(out *FrontdoorSpecFrontendEndpoint) {
	*out = *in
	if in.HostName != nil {
		in, out := &in.HostName, &out.HostName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SessionAffinityEnabled != nil {
		in, out := &in.SessionAffinityEnabled, &out.SessionAffinityEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SessionAffinityTtlSeconds != nil {
		in, out := &in.SessionAffinityTtlSeconds, &out.SessionAffinityTtlSeconds
		*out = new(int64)
		**out = **in
	}
	if in.WebApplicationFirewallPolicyLinkID != nil {
		in, out := &in.WebApplicationFirewallPolicyLinkID, &out.WebApplicationFirewallPolicyLinkID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorSpecFrontendEndpoint.
func (in *FrontdoorSpecFrontendEndpoint) DeepCopy() *FrontdoorSpecFrontendEndpoint {
	if in == nil {
		return nil
	}
	out := new(FrontdoorSpecFrontendEndpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorSpecRoutingRule) DeepCopyInto(out *FrontdoorSpecRoutingRule) {
	*out = *in
	if in.AcceptedProtocols != nil {
		in, out := &in.AcceptedProtocols, &out.AcceptedProtocols
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ForwardingConfiguration != nil {
		in, out := &in.ForwardingConfiguration, &out.ForwardingConfiguration
		*out = new(FrontdoorSpecRoutingRuleForwardingConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.FrontendEndpoints != nil {
		in, out := &in.FrontendEndpoints, &out.FrontendEndpoints
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PatternsToMatch != nil {
		in, out := &in.PatternsToMatch, &out.PatternsToMatch
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.RedirectConfiguration != nil {
		in, out := &in.RedirectConfiguration, &out.RedirectConfiguration
		*out = new(FrontdoorSpecRoutingRuleRedirectConfiguration)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorSpecRoutingRule.
func (in *FrontdoorSpecRoutingRule) DeepCopy() *FrontdoorSpecRoutingRule {
	if in == nil {
		return nil
	}
	out := new(FrontdoorSpecRoutingRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorSpecRoutingRuleForwardingConfiguration) DeepCopyInto(out *FrontdoorSpecRoutingRuleForwardingConfiguration) {
	*out = *in
	if in.BackendPoolName != nil {
		in, out := &in.BackendPoolName, &out.BackendPoolName
		*out = new(string)
		**out = **in
	}
	if in.CacheEnabled != nil {
		in, out := &in.CacheEnabled, &out.CacheEnabled
		*out = new(bool)
		**out = **in
	}
	if in.CacheQueryParameterStripDirective != nil {
		in, out := &in.CacheQueryParameterStripDirective, &out.CacheQueryParameterStripDirective
		*out = new(string)
		**out = **in
	}
	if in.CacheUseDynamicCompression != nil {
		in, out := &in.CacheUseDynamicCompression, &out.CacheUseDynamicCompression
		*out = new(bool)
		**out = **in
	}
	if in.CustomForwardingPath != nil {
		in, out := &in.CustomForwardingPath, &out.CustomForwardingPath
		*out = new(string)
		**out = **in
	}
	if in.ForwardingProtocol != nil {
		in, out := &in.ForwardingProtocol, &out.ForwardingProtocol
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorSpecRoutingRuleForwardingConfiguration.
func (in *FrontdoorSpecRoutingRuleForwardingConfiguration) DeepCopy() *FrontdoorSpecRoutingRuleForwardingConfiguration {
	if in == nil {
		return nil
	}
	out := new(FrontdoorSpecRoutingRuleForwardingConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorSpecRoutingRuleRedirectConfiguration) DeepCopyInto(out *FrontdoorSpecRoutingRuleRedirectConfiguration) {
	*out = *in
	if in.CustomFragment != nil {
		in, out := &in.CustomFragment, &out.CustomFragment
		*out = new(string)
		**out = **in
	}
	if in.CustomHost != nil {
		in, out := &in.CustomHost, &out.CustomHost
		*out = new(string)
		**out = **in
	}
	if in.CustomPath != nil {
		in, out := &in.CustomPath, &out.CustomPath
		*out = new(string)
		**out = **in
	}
	if in.CustomQueryString != nil {
		in, out := &in.CustomQueryString, &out.CustomQueryString
		*out = new(string)
		**out = **in
	}
	if in.RedirectProtocol != nil {
		in, out := &in.RedirectProtocol, &out.RedirectProtocol
		*out = new(string)
		**out = **in
	}
	if in.RedirectType != nil {
		in, out := &in.RedirectType, &out.RedirectType
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorSpecRoutingRuleRedirectConfiguration.
func (in *FrontdoorSpecRoutingRuleRedirectConfiguration) DeepCopy() *FrontdoorSpecRoutingRuleRedirectConfiguration {
	if in == nil {
		return nil
	}
	out := new(FrontdoorSpecRoutingRuleRedirectConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrontdoorStatus) DeepCopyInto(out *FrontdoorStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrontdoorStatus.
func (in *FrontdoorStatus) DeepCopy() *FrontdoorStatus {
	if in == nil {
		return nil
	}
	out := new(FrontdoorStatus)
	in.DeepCopyInto(out)
	return out
}
