/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Server struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ServerSpec   `json:"spec,omitempty"`
	Status            ServerStatus `json:"status,omitempty"`
}

type ServerSpec struct {
	ServerSpec2 `json:",inline"`
	// +optional
	KubeformOutput ServerSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type ServerSpecIdentity struct {
	// +optional
	PrincipalID *string `json:"principalID,omitempty" tf:"principal_id"`
	// +optional
	TenantID *string `json:"tenantID,omitempty" tf:"tenant_id"`
	Type     *string `json:"type" tf:"type"`
}

type ServerSpecStorageProfile struct {
	// +optional
	// Deprecated
	AutoGrow *string `json:"autoGrow,omitempty" tf:"auto_grow"`
	// +optional
	// Deprecated
	BackupRetentionDays *int64 `json:"backupRetentionDays,omitempty" tf:"backup_retention_days"`
	// +optional
	// Deprecated
	GeoRedundantBackup *string `json:"geoRedundantBackup,omitempty" tf:"geo_redundant_backup"`
	// +optional
	// Deprecated
	StorageMb *int64 `json:"storageMb,omitempty" tf:"storage_mb"`
}

type ServerSpecThreatDetectionPolicy struct {
	// +optional
	DisabledAlerts []string `json:"disabledAlerts,omitempty" tf:"disabled_alerts"`
	// +optional
	EmailAccountAdmins *bool `json:"emailAccountAdmins,omitempty" tf:"email_account_admins"`
	// +optional
	EmailAddresses []string `json:"emailAddresses,omitempty" tf:"email_addresses"`
	// +optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled"`
	// +optional
	RetentionDays *int64 `json:"retentionDays,omitempty" tf:"retention_days"`
	// +optional
	StorageAccountAccessKey *string `json:"-" sensitive:"true" tf:"storage_account_access_key"`
	// +optional
	StorageEndpoint *string `json:"storageEndpoint,omitempty" tf:"storage_endpoint"`
}

type ServerSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`

	// +optional
	AdministratorLogin *string `json:"administratorLogin,omitempty" tf:"administrator_login"`
	// +optional
	AdministratorLoginPassword *string `json:"-" sensitive:"true" tf:"administrator_login_password"`
	// +optional
	AutoGrowEnabled *bool `json:"autoGrowEnabled,omitempty" tf:"auto_grow_enabled"`
	// +optional
	BackupRetentionDays *int64 `json:"backupRetentionDays,omitempty" tf:"backup_retention_days"`
	// +optional
	CreateMode *string `json:"createMode,omitempty" tf:"create_mode"`
	// +optional
	CreationSourceServerID *string `json:"creationSourceServerID,omitempty" tf:"creation_source_server_id"`
	// +optional
	Fqdn *string `json:"fqdn,omitempty" tf:"fqdn"`
	// +optional
	GeoRedundantBackupEnabled *bool `json:"geoRedundantBackupEnabled,omitempty" tf:"geo_redundant_backup_enabled"`
	// +optional
	Identity *ServerSpecIdentity `json:"identity,omitempty" tf:"identity"`
	// +optional
	InfrastructureEncryptionEnabled *bool   `json:"infrastructureEncryptionEnabled,omitempty" tf:"infrastructure_encryption_enabled"`
	Location                        *string `json:"location" tf:"location"`
	Name                            *string `json:"name" tf:"name"`
	// +optional
	PublicNetworkAccessEnabled *bool   `json:"publicNetworkAccessEnabled,omitempty" tf:"public_network_access_enabled"`
	ResourceGroupName          *string `json:"resourceGroupName" tf:"resource_group_name"`
	// +optional
	RestorePointInTime *string `json:"restorePointInTime,omitempty" tf:"restore_point_in_time"`
	SkuName            *string `json:"skuName" tf:"sku_name"`
	// +optional
	// Deprecated
	SslEnforcement *string `json:"sslEnforcement,omitempty" tf:"ssl_enforcement"`
	// +optional
	SslEnforcementEnabled *bool `json:"sslEnforcementEnabled,omitempty" tf:"ssl_enforcement_enabled"`
	// +optional
	SslMinimalTLSVersionEnforced *string `json:"sslMinimalTLSVersionEnforced,omitempty" tf:"ssl_minimal_tls_version_enforced"`
	// +optional
	StorageMb *int64 `json:"storageMb,omitempty" tf:"storage_mb"`
	// +optional
	// Deprecated
	StorageProfile *ServerSpecStorageProfile `json:"storageProfile,omitempty" tf:"storage_profile"`
	// +optional
	Tags *map[string]string `json:"tags,omitempty" tf:"tags"`
	// +optional
	ThreatDetectionPolicy *ServerSpecThreatDetectionPolicy `json:"threatDetectionPolicy,omitempty" tf:"threat_detection_policy"`
	Version               *string                          `json:"version" tf:"version"`
}

type ServerStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ServerList is a list of Servers
type ServerList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Server CRD objects
	Items []Server `json:"items,omitempty"`
}
