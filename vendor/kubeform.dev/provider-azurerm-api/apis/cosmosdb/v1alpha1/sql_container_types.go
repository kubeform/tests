/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type SqlContainer struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SqlContainerSpec   `json:"spec,omitempty"`
	Status            SqlContainerStatus `json:"status,omitempty"`
}

type SqlContainerSpec struct {
	SqlContainerSpec2 `json:",inline"`
	// +optional
	KubeformOutput SqlContainerSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type SqlContainerSpecAutoscaleSettings struct {
	// +optional
	MaxThroughput *int64 `json:"maxThroughput,omitempty" tf:"max_throughput"`
}

type SqlContainerSpecConflictResolutionPolicy struct {
	// +optional
	ConflictResolutionPath *string `json:"conflictResolutionPath,omitempty" tf:"conflict_resolution_path"`
	// +optional
	ConflictResolutionProcedure *string `json:"conflictResolutionProcedure,omitempty" tf:"conflict_resolution_procedure"`
	Mode                        *string `json:"mode" tf:"mode"`
}

type SqlContainerSpecIndexingPolicyCompositeIndexIndex struct {
	Order *string `json:"order" tf:"order"`
	Path  *string `json:"path" tf:"path"`
}

type SqlContainerSpecIndexingPolicyCompositeIndex struct {
	// +kubebuilder:validation:MinItems=1
	Index []SqlContainerSpecIndexingPolicyCompositeIndexIndex `json:"index" tf:"index"`
}

type SqlContainerSpecIndexingPolicyExcludedPath struct {
	Path *string `json:"path" tf:"path"`
}

type SqlContainerSpecIndexingPolicyIncludedPath struct {
	Path *string `json:"path" tf:"path"`
}

type SqlContainerSpecIndexingPolicy struct {
	// +optional
	CompositeIndex []SqlContainerSpecIndexingPolicyCompositeIndex `json:"compositeIndex,omitempty" tf:"composite_index"`
	// +optional
	ExcludedPath []SqlContainerSpecIndexingPolicyExcludedPath `json:"excludedPath,omitempty" tf:"excluded_path"`
	// +optional
	IncludedPath []SqlContainerSpecIndexingPolicyIncludedPath `json:"includedPath,omitempty" tf:"included_path"`
	// +optional
	IndexingMode *string `json:"indexingMode,omitempty" tf:"indexing_mode"`
}

type SqlContainerSpecUniqueKey struct {
	Paths []string `json:"paths" tf:"paths"`
}

type SqlContainerSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	AccountName *string `json:"accountName" tf:"account_name"`
	// +optional
	AnalyticalStorageTtl *int64 `json:"analyticalStorageTtl,omitempty" tf:"analytical_storage_ttl"`
	// +optional
	AutoscaleSettings *SqlContainerSpecAutoscaleSettings `json:"autoscaleSettings,omitempty" tf:"autoscale_settings"`
	// +optional
	ConflictResolutionPolicy *SqlContainerSpecConflictResolutionPolicy `json:"conflictResolutionPolicy,omitempty" tf:"conflict_resolution_policy"`
	DatabaseName             *string                                   `json:"databaseName" tf:"database_name"`
	// +optional
	DefaultTtl *int64 `json:"defaultTtl,omitempty" tf:"default_ttl"`
	// +optional
	IndexingPolicy   *SqlContainerSpecIndexingPolicy `json:"indexingPolicy,omitempty" tf:"indexing_policy"`
	Name             *string                         `json:"name" tf:"name"`
	PartitionKeyPath *string                         `json:"partitionKeyPath" tf:"partition_key_path"`
	// +optional
	PartitionKeyVersion *int64  `json:"partitionKeyVersion,omitempty" tf:"partition_key_version"`
	ResourceGroupName   *string `json:"resourceGroupName" tf:"resource_group_name"`
	// +optional
	Throughput *int64 `json:"throughput,omitempty" tf:"throughput"`
	// +optional
	UniqueKey []SqlContainerSpecUniqueKey `json:"uniqueKey,omitempty" tf:"unique_key"`
}

type SqlContainerStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// SqlContainerList is a list of SqlContainers
type SqlContainerList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of SqlContainer CRD objects
	Items []SqlContainer `json:"items,omitempty"`
}
