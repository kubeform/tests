// +build !ignore_autogenerated

/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	apiv1alpha1 "kubeform.dev/apimachinery/api/v1alpha1"

	v1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	apiv1 "kmodules.xyz/client-go/api/v1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Account) DeepCopyInto(out *Account) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Account.
func (in *Account) DeepCopy() *Account {
	if in == nil {
		return nil
	}
	out := new(Account)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Account) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountList) DeepCopyInto(out *AccountList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Account, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountList.
func (in *AccountList) DeepCopy() *AccountList {
	if in == nil {
		return nil
	}
	out := new(AccountList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AccountList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountSpec) DeepCopyInto(out *AccountSpec) {
	*out = *in
	in.AccountSpec2.DeepCopyInto(&out.AccountSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountSpec.
func (in *AccountSpec) DeepCopy() *AccountSpec {
	if in == nil {
		return nil
	}
	out := new(AccountSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountSpec2) DeepCopyInto(out *AccountSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	if in.AccessKeyMetadataWritesEnabled != nil {
		in, out := &in.AccessKeyMetadataWritesEnabled, &out.AccessKeyMetadataWritesEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AnalyticalStorageEnabled != nil {
		in, out := &in.AnalyticalStorageEnabled, &out.AnalyticalStorageEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(AccountSpecBackup)
		(*in).DeepCopyInto(*out)
	}
	if in.Capabilities != nil {
		in, out := &in.Capabilities, &out.Capabilities
		*out = make([]AccountSpecCapabilities, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConsistencyPolicy != nil {
		in, out := &in.ConsistencyPolicy, &out.ConsistencyPolicy
		*out = new(AccountSpecConsistencyPolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.CorsRule != nil {
		in, out := &in.CorsRule, &out.CorsRule
		*out = new(AccountSpecCorsRule)
		(*in).DeepCopyInto(*out)
	}
	if in.EnableAutomaticFailover != nil {
		in, out := &in.EnableAutomaticFailover, &out.EnableAutomaticFailover
		*out = new(bool)
		**out = **in
	}
	if in.EnableFreeTier != nil {
		in, out := &in.EnableFreeTier, &out.EnableFreeTier
		*out = new(bool)
		**out = **in
	}
	if in.EnableMultipleWriteLocations != nil {
		in, out := &in.EnableMultipleWriteLocations, &out.EnableMultipleWriteLocations
		*out = new(bool)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.GeoLocation != nil {
		in, out := &in.GeoLocation, &out.GeoLocation
		*out = make([]AccountSpecGeoLocation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(AccountSpecIdentity)
		(*in).DeepCopyInto(*out)
	}
	if in.IpRangeFilter != nil {
		in, out := &in.IpRangeFilter, &out.IpRangeFilter
		*out = new(string)
		**out = **in
	}
	if in.IsVirtualNetworkFilterEnabled != nil {
		in, out := &in.IsVirtualNetworkFilterEnabled, &out.IsVirtualNetworkFilterEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KeyVaultKeyID != nil {
		in, out := &in.KeyVaultKeyID, &out.KeyVaultKeyID
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MongoServerVersion != nil {
		in, out := &in.MongoServerVersion, &out.MongoServerVersion
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkACLBypassForAzureServices != nil {
		in, out := &in.NetworkACLBypassForAzureServices, &out.NetworkACLBypassForAzureServices
		*out = new(bool)
		**out = **in
	}
	if in.NetworkACLBypassIDS != nil {
		in, out := &in.NetworkACLBypassIDS, &out.NetworkACLBypassIDS
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.OfferType != nil {
		in, out := &in.OfferType, &out.OfferType
		*out = new(string)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.PrimaryMasterKey != nil {
		in, out := &in.PrimaryMasterKey, &out.PrimaryMasterKey
		*out = new(string)
		**out = **in
	}
	if in.PrimaryReadonlyKey != nil {
		in, out := &in.PrimaryReadonlyKey, &out.PrimaryReadonlyKey
		*out = new(string)
		**out = **in
	}
	if in.PrimaryReadonlyMasterKey != nil {
		in, out := &in.PrimaryReadonlyMasterKey, &out.PrimaryReadonlyMasterKey
		*out = new(string)
		**out = **in
	}
	if in.PublicNetworkAccessEnabled != nil {
		in, out := &in.PublicNetworkAccessEnabled, &out.PublicNetworkAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ReadEndpoints != nil {
		in, out := &in.ReadEndpoints, &out.ReadEndpoints
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.SecondaryKey != nil {
		in, out := &in.SecondaryKey, &out.SecondaryKey
		*out = new(string)
		**out = **in
	}
	if in.SecondaryMasterKey != nil {
		in, out := &in.SecondaryMasterKey, &out.SecondaryMasterKey
		*out = new(string)
		**out = **in
	}
	if in.SecondaryReadonlyKey != nil {
		in, out := &in.SecondaryReadonlyKey, &out.SecondaryReadonlyKey
		*out = new(string)
		**out = **in
	}
	if in.SecondaryReadonlyMasterKey != nil {
		in, out := &in.SecondaryReadonlyMasterKey, &out.SecondaryReadonlyMasterKey
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.VirtualNetworkRule != nil {
		in, out := &in.VirtualNetworkRule, &out.VirtualNetworkRule
		*out = make([]AccountSpecVirtualNetworkRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WriteEndpoints != nil {
		in, out := &in.WriteEndpoints, &out.WriteEndpoints
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountSpec2.
func (in *AccountSpec2) DeepCopy() *AccountSpec2 {
	if in == nil {
		return nil
	}
	out := new(AccountSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountSpecBackup) DeepCopyInto(out *AccountSpecBackup) {
	*out = *in
	if in.IntervalInMinutes != nil {
		in, out := &in.IntervalInMinutes, &out.IntervalInMinutes
		*out = new(int64)
		**out = **in
	}
	if in.RetentionInHours != nil {
		in, out := &in.RetentionInHours, &out.RetentionInHours
		*out = new(int64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountSpecBackup.
func (in *AccountSpecBackup) DeepCopy() *AccountSpecBackup {
	if in == nil {
		return nil
	}
	out := new(AccountSpecBackup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountSpecCapabilities) DeepCopyInto(out *AccountSpecCapabilities) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountSpecCapabilities.
func (in *AccountSpecCapabilities) DeepCopy() *AccountSpecCapabilities {
	if in == nil {
		return nil
	}
	out := new(AccountSpecCapabilities)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountSpecConsistencyPolicy) DeepCopyInto(out *AccountSpecConsistencyPolicy) {
	*out = *in
	if in.ConsistencyLevel != nil {
		in, out := &in.ConsistencyLevel, &out.ConsistencyLevel
		*out = new(string)
		**out = **in
	}
	if in.MaxIntervalInSeconds != nil {
		in, out := &in.MaxIntervalInSeconds, &out.MaxIntervalInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.MaxStalenessPrefix != nil {
		in, out := &in.MaxStalenessPrefix, &out.MaxStalenessPrefix
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountSpecConsistencyPolicy.
func (in *AccountSpecConsistencyPolicy) DeepCopy() *AccountSpecConsistencyPolicy {
	if in == nil {
		return nil
	}
	out := new(AccountSpecConsistencyPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountSpecCorsRule) DeepCopyInto(out *AccountSpecCorsRule) {
	*out = *in
	if in.AllowedHeaders != nil {
		in, out := &in.AllowedHeaders, &out.AllowedHeaders
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AllowedMethods != nil {
		in, out := &in.AllowedMethods, &out.AllowedMethods
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AllowedOrigins != nil {
		in, out := &in.AllowedOrigins, &out.AllowedOrigins
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExposedHeaders != nil {
		in, out := &in.ExposedHeaders, &out.ExposedHeaders
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.MaxAgeInSeconds != nil {
		in, out := &in.MaxAgeInSeconds, &out.MaxAgeInSeconds
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountSpecCorsRule.
func (in *AccountSpecCorsRule) DeepCopy() *AccountSpecCorsRule {
	if in == nil {
		return nil
	}
	out := new(AccountSpecCorsRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountSpecGeoLocation) DeepCopyInto(out *AccountSpecGeoLocation) {
	*out = *in
	if in.FailoverPriority != nil {
		in, out := &in.FailoverPriority, &out.FailoverPriority
		*out = new(int64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(string)
		**out = **in
	}
	if in.ZoneRedundant != nil {
		in, out := &in.ZoneRedundant, &out.ZoneRedundant
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountSpecGeoLocation.
func (in *AccountSpecGeoLocation) DeepCopy() *AccountSpecGeoLocation {
	if in == nil {
		return nil
	}
	out := new(AccountSpecGeoLocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountSpecIdentity) DeepCopyInto(out *AccountSpecIdentity) {
	*out = *in
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountSpecIdentity.
func (in *AccountSpecIdentity) DeepCopy() *AccountSpecIdentity {
	if in == nil {
		return nil
	}
	out := new(AccountSpecIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountSpecVirtualNetworkRule) DeepCopyInto(out *AccountSpecVirtualNetworkRule) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IgnoreMissingVnetServiceEndpoint != nil {
		in, out := &in.IgnoreMissingVnetServiceEndpoint, &out.IgnoreMissingVnetServiceEndpoint
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountSpecVirtualNetworkRule.
func (in *AccountSpecVirtualNetworkRule) DeepCopy() *AccountSpecVirtualNetworkRule {
	if in == nil {
		return nil
	}
	out := new(AccountSpecVirtualNetworkRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountStatus) DeepCopyInto(out *AccountStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountStatus.
func (in *AccountStatus) DeepCopy() *AccountStatus {
	if in == nil {
		return nil
	}
	out := new(AccountStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraKeyspace) DeepCopyInto(out *CassandraKeyspace) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraKeyspace.
func (in *CassandraKeyspace) DeepCopy() *CassandraKeyspace {
	if in == nil {
		return nil
	}
	out := new(CassandraKeyspace)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CassandraKeyspace) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraKeyspaceList) DeepCopyInto(out *CassandraKeyspaceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CassandraKeyspace, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraKeyspaceList.
func (in *CassandraKeyspaceList) DeepCopy() *CassandraKeyspaceList {
	if in == nil {
		return nil
	}
	out := new(CassandraKeyspaceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CassandraKeyspaceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraKeyspaceSpec) DeepCopyInto(out *CassandraKeyspaceSpec) {
	*out = *in
	in.CassandraKeyspaceSpec2.DeepCopyInto(&out.CassandraKeyspaceSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraKeyspaceSpec.
func (in *CassandraKeyspaceSpec) DeepCopy() *CassandraKeyspaceSpec {
	if in == nil {
		return nil
	}
	out := new(CassandraKeyspaceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraKeyspaceSpec2) DeepCopyInto(out *CassandraKeyspaceSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.AutoscaleSettings != nil {
		in, out := &in.AutoscaleSettings, &out.AutoscaleSettings
		*out = new(CassandraKeyspaceSpecAutoscaleSettings)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraKeyspaceSpec2.
func (in *CassandraKeyspaceSpec2) DeepCopy() *CassandraKeyspaceSpec2 {
	if in == nil {
		return nil
	}
	out := new(CassandraKeyspaceSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraKeyspaceSpecAutoscaleSettings) DeepCopyInto(out *CassandraKeyspaceSpecAutoscaleSettings) {
	*out = *in
	if in.MaxThroughput != nil {
		in, out := &in.MaxThroughput, &out.MaxThroughput
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraKeyspaceSpecAutoscaleSettings.
func (in *CassandraKeyspaceSpecAutoscaleSettings) DeepCopy() *CassandraKeyspaceSpecAutoscaleSettings {
	if in == nil {
		return nil
	}
	out := new(CassandraKeyspaceSpecAutoscaleSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraKeyspaceStatus) DeepCopyInto(out *CassandraKeyspaceStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraKeyspaceStatus.
func (in *CassandraKeyspaceStatus) DeepCopy() *CassandraKeyspaceStatus {
	if in == nil {
		return nil
	}
	out := new(CassandraKeyspaceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraTable) DeepCopyInto(out *CassandraTable) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraTable.
func (in *CassandraTable) DeepCopy() *CassandraTable {
	if in == nil {
		return nil
	}
	out := new(CassandraTable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CassandraTable) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraTableList) DeepCopyInto(out *CassandraTableList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CassandraTable, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraTableList.
func (in *CassandraTableList) DeepCopy() *CassandraTableList {
	if in == nil {
		return nil
	}
	out := new(CassandraTableList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CassandraTableList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraTableSpec) DeepCopyInto(out *CassandraTableSpec) {
	*out = *in
	in.CassandraTableSpec2.DeepCopyInto(&out.CassandraTableSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraTableSpec.
func (in *CassandraTableSpec) DeepCopy() *CassandraTableSpec {
	if in == nil {
		return nil
	}
	out := new(CassandraTableSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraTableSpec2) DeepCopyInto(out *CassandraTableSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.AnalyticalStorageTtl != nil {
		in, out := &in.AnalyticalStorageTtl, &out.AnalyticalStorageTtl
		*out = new(int64)
		**out = **in
	}
	if in.AutoscaleSettings != nil {
		in, out := &in.AutoscaleSettings, &out.AutoscaleSettings
		*out = new(CassandraTableSpecAutoscaleSettings)
		(*in).DeepCopyInto(*out)
	}
	if in.CassandraKeyspaceID != nil {
		in, out := &in.CassandraKeyspaceID, &out.CassandraKeyspaceID
		*out = new(string)
		**out = **in
	}
	if in.DefaultTtl != nil {
		in, out := &in.DefaultTtl, &out.DefaultTtl
		*out = new(int64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(CassandraTableSpecSchema)
		(*in).DeepCopyInto(*out)
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraTableSpec2.
func (in *CassandraTableSpec2) DeepCopy() *CassandraTableSpec2 {
	if in == nil {
		return nil
	}
	out := new(CassandraTableSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraTableSpecAutoscaleSettings) DeepCopyInto(out *CassandraTableSpecAutoscaleSettings) {
	*out = *in
	if in.MaxThroughput != nil {
		in, out := &in.MaxThroughput, &out.MaxThroughput
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraTableSpecAutoscaleSettings.
func (in *CassandraTableSpecAutoscaleSettings) DeepCopy() *CassandraTableSpecAutoscaleSettings {
	if in == nil {
		return nil
	}
	out := new(CassandraTableSpecAutoscaleSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraTableSpecSchema) DeepCopyInto(out *CassandraTableSpecSchema) {
	*out = *in
	if in.ClusterKey != nil {
		in, out := &in.ClusterKey, &out.ClusterKey
		*out = make([]CassandraTableSpecSchemaClusterKey, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Column != nil {
		in, out := &in.Column, &out.Column
		*out = make([]CassandraTableSpecSchemaColumn, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PartitionKey != nil {
		in, out := &in.PartitionKey, &out.PartitionKey
		*out = make([]CassandraTableSpecSchemaPartitionKey, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraTableSpecSchema.
func (in *CassandraTableSpecSchema) DeepCopy() *CassandraTableSpecSchema {
	if in == nil {
		return nil
	}
	out := new(CassandraTableSpecSchema)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraTableSpecSchemaClusterKey) DeepCopyInto(out *CassandraTableSpecSchemaClusterKey) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrderBy != nil {
		in, out := &in.OrderBy, &out.OrderBy
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraTableSpecSchemaClusterKey.
func (in *CassandraTableSpecSchemaClusterKey) DeepCopy() *CassandraTableSpecSchemaClusterKey {
	if in == nil {
		return nil
	}
	out := new(CassandraTableSpecSchemaClusterKey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraTableSpecSchemaColumn) DeepCopyInto(out *CassandraTableSpecSchemaColumn) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraTableSpecSchemaColumn.
func (in *CassandraTableSpecSchemaColumn) DeepCopy() *CassandraTableSpecSchemaColumn {
	if in == nil {
		return nil
	}
	out := new(CassandraTableSpecSchemaColumn)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraTableSpecSchemaPartitionKey) DeepCopyInto(out *CassandraTableSpecSchemaPartitionKey) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraTableSpecSchemaPartitionKey.
func (in *CassandraTableSpecSchemaPartitionKey) DeepCopy() *CassandraTableSpecSchemaPartitionKey {
	if in == nil {
		return nil
	}
	out := new(CassandraTableSpecSchemaPartitionKey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CassandraTableStatus) DeepCopyInto(out *CassandraTableStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CassandraTableStatus.
func (in *CassandraTableStatus) DeepCopy() *CassandraTableStatus {
	if in == nil {
		return nil
	}
	out := new(CassandraTableStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GremlinDatabase) DeepCopyInto(out *GremlinDatabase) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GremlinDatabase.
func (in *GremlinDatabase) DeepCopy() *GremlinDatabase {
	if in == nil {
		return nil
	}
	out := new(GremlinDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GremlinDatabase) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GremlinDatabaseList) DeepCopyInto(out *GremlinDatabaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GremlinDatabase, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GremlinDatabaseList.
func (in *GremlinDatabaseList) DeepCopy() *GremlinDatabaseList {
	if in == nil {
		return nil
	}
	out := new(GremlinDatabaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GremlinDatabaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GremlinDatabaseSpec) DeepCopyInto(out *GremlinDatabaseSpec) {
	*out = *in
	in.GremlinDatabaseSpec2.DeepCopyInto(&out.GremlinDatabaseSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GremlinDatabaseSpec.
func (in *GremlinDatabaseSpec) DeepCopy() *GremlinDatabaseSpec {
	if in == nil {
		return nil
	}
	out := new(GremlinDatabaseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GremlinDatabaseSpec2) DeepCopyInto(out *GremlinDatabaseSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.AutoscaleSettings != nil {
		in, out := &in.AutoscaleSettings, &out.AutoscaleSettings
		*out = new(GremlinDatabaseSpecAutoscaleSettings)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GremlinDatabaseSpec2.
func (in *GremlinDatabaseSpec2) DeepCopy() *GremlinDatabaseSpec2 {
	if in == nil {
		return nil
	}
	out := new(GremlinDatabaseSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GremlinDatabaseSpecAutoscaleSettings) DeepCopyInto(out *GremlinDatabaseSpecAutoscaleSettings) {
	*out = *in
	if in.MaxThroughput != nil {
		in, out := &in.MaxThroughput, &out.MaxThroughput
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GremlinDatabaseSpecAutoscaleSettings.
func (in *GremlinDatabaseSpecAutoscaleSettings) DeepCopy() *GremlinDatabaseSpecAutoscaleSettings {
	if in == nil {
		return nil
	}
	out := new(GremlinDatabaseSpecAutoscaleSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GremlinDatabaseStatus) DeepCopyInto(out *GremlinDatabaseStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GremlinDatabaseStatus.
func (in *GremlinDatabaseStatus) DeepCopy() *GremlinDatabaseStatus {
	if in == nil {
		return nil
	}
	out := new(GremlinDatabaseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GremlinGraph) DeepCopyInto(out *GremlinGraph) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GremlinGraph.
func (in *GremlinGraph) DeepCopy() *GremlinGraph {
	if in == nil {
		return nil
	}
	out := new(GremlinGraph)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GremlinGraph) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GremlinGraphList) DeepCopyInto(out *GremlinGraphList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GremlinGraph, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GremlinGraphList.
func (in *GremlinGraphList) DeepCopy() *GremlinGraphList {
	if in == nil {
		return nil
	}
	out := new(GremlinGraphList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GremlinGraphList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GremlinGraphSpec) DeepCopyInto(out *GremlinGraphSpec) {
	*out = *in
	in.GremlinGraphSpec2.DeepCopyInto(&out.GremlinGraphSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GremlinGraphSpec.
func (in *GremlinGraphSpec) DeepCopy() *GremlinGraphSpec {
	if in == nil {
		return nil
	}
	out := new(GremlinGraphSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GremlinGraphSpec2) DeepCopyInto(out *GremlinGraphSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.AutoscaleSettings != nil {
		in, out := &in.AutoscaleSettings, &out.AutoscaleSettings
		*out = new(GremlinGraphSpecAutoscaleSettings)
		(*in).DeepCopyInto(*out)
	}
	if in.ConflictResolutionPolicy != nil {
		in, out := &in.ConflictResolutionPolicy, &out.ConflictResolutionPolicy
		*out = new(GremlinGraphSpecConflictResolutionPolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.DefaultTtl != nil {
		in, out := &in.DefaultTtl, &out.DefaultTtl
		*out = new(int64)
		**out = **in
	}
	if in.IndexPolicy != nil {
		in, out := &in.IndexPolicy, &out.IndexPolicy
		*out = make([]GremlinGraphSpecIndexPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PartitionKeyPath != nil {
		in, out := &in.PartitionKeyPath, &out.PartitionKeyPath
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(int64)
		**out = **in
	}
	if in.UniqueKey != nil {
		in, out := &in.UniqueKey, &out.UniqueKey
		*out = make([]GremlinGraphSpecUniqueKey, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GremlinGraphSpec2.
func (in *GremlinGraphSpec2) DeepCopy() *GremlinGraphSpec2 {
	if in == nil {
		return nil
	}
	out := new(GremlinGraphSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GremlinGraphSpecAutoscaleSettings) DeepCopyInto(out *GremlinGraphSpecAutoscaleSettings) {
	*out = *in
	if in.MaxThroughput != nil {
		in, out := &in.MaxThroughput, &out.MaxThroughput
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GremlinGraphSpecAutoscaleSettings.
func (in *GremlinGraphSpecAutoscaleSettings) DeepCopy() *GremlinGraphSpecAutoscaleSettings {
	if in == nil {
		return nil
	}
	out := new(GremlinGraphSpecAutoscaleSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GremlinGraphSpecConflictResolutionPolicy) DeepCopyInto(out *GremlinGraphSpecConflictResolutionPolicy) {
	*out = *in
	if in.ConflictResolutionPath != nil {
		in, out := &in.ConflictResolutionPath, &out.ConflictResolutionPath
		*out = new(string)
		**out = **in
	}
	if in.ConflictResolutionProcedure != nil {
		in, out := &in.ConflictResolutionProcedure, &out.ConflictResolutionProcedure
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GremlinGraphSpecConflictResolutionPolicy.
func (in *GremlinGraphSpecConflictResolutionPolicy) DeepCopy() *GremlinGraphSpecConflictResolutionPolicy {
	if in == nil {
		return nil
	}
	out := new(GremlinGraphSpecConflictResolutionPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GremlinGraphSpecIndexPolicy) DeepCopyInto(out *GremlinGraphSpecIndexPolicy) {
	*out = *in
	if in.Automatic != nil {
		in, out := &in.Automatic, &out.Automatic
		*out = new(bool)
		**out = **in
	}
	if in.ExcludedPaths != nil {
		in, out := &in.ExcludedPaths, &out.ExcludedPaths
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.IncludedPaths != nil {
		in, out := &in.IncludedPaths, &out.IncludedPaths
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.IndexingMode != nil {
		in, out := &in.IndexingMode, &out.IndexingMode
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GremlinGraphSpecIndexPolicy.
func (in *GremlinGraphSpecIndexPolicy) DeepCopy() *GremlinGraphSpecIndexPolicy {
	if in == nil {
		return nil
	}
	out := new(GremlinGraphSpecIndexPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GremlinGraphSpecUniqueKey) DeepCopyInto(out *GremlinGraphSpecUniqueKey) {
	*out = *in
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GremlinGraphSpecUniqueKey.
func (in *GremlinGraphSpecUniqueKey) DeepCopy() *GremlinGraphSpecUniqueKey {
	if in == nil {
		return nil
	}
	out := new(GremlinGraphSpecUniqueKey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GremlinGraphStatus) DeepCopyInto(out *GremlinGraphStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GremlinGraphStatus.
func (in *GremlinGraphStatus) DeepCopy() *GremlinGraphStatus {
	if in == nil {
		return nil
	}
	out := new(GremlinGraphStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoCollection) DeepCopyInto(out *MongoCollection) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoCollection.
func (in *MongoCollection) DeepCopy() *MongoCollection {
	if in == nil {
		return nil
	}
	out := new(MongoCollection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MongoCollection) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoCollectionList) DeepCopyInto(out *MongoCollectionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MongoCollection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoCollectionList.
func (in *MongoCollectionList) DeepCopy() *MongoCollectionList {
	if in == nil {
		return nil
	}
	out := new(MongoCollectionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MongoCollectionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoCollectionSpec) DeepCopyInto(out *MongoCollectionSpec) {
	*out = *in
	in.MongoCollectionSpec2.DeepCopyInto(&out.MongoCollectionSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoCollectionSpec.
func (in *MongoCollectionSpec) DeepCopy() *MongoCollectionSpec {
	if in == nil {
		return nil
	}
	out := new(MongoCollectionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoCollectionSpec2) DeepCopyInto(out *MongoCollectionSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.AnalyticalStorageTtl != nil {
		in, out := &in.AnalyticalStorageTtl, &out.AnalyticalStorageTtl
		*out = new(int64)
		**out = **in
	}
	if in.AutoscaleSettings != nil {
		in, out := &in.AutoscaleSettings, &out.AutoscaleSettings
		*out = new(MongoCollectionSpecAutoscaleSettings)
		(*in).DeepCopyInto(*out)
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.DefaultTtlSeconds != nil {
		in, out := &in.DefaultTtlSeconds, &out.DefaultTtlSeconds
		*out = new(int64)
		**out = **in
	}
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = make([]MongoCollectionSpecIndex, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ShardKey != nil {
		in, out := &in.ShardKey, &out.ShardKey
		*out = new(string)
		**out = **in
	}
	if in.SystemIndexes != nil {
		in, out := &in.SystemIndexes, &out.SystemIndexes
		*out = make([]MongoCollectionSpecSystemIndexes, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoCollectionSpec2.
func (in *MongoCollectionSpec2) DeepCopy() *MongoCollectionSpec2 {
	if in == nil {
		return nil
	}
	out := new(MongoCollectionSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoCollectionSpecAutoscaleSettings) DeepCopyInto(out *MongoCollectionSpecAutoscaleSettings) {
	*out = *in
	if in.MaxThroughput != nil {
		in, out := &in.MaxThroughput, &out.MaxThroughput
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoCollectionSpecAutoscaleSettings.
func (in *MongoCollectionSpecAutoscaleSettings) DeepCopy() *MongoCollectionSpecAutoscaleSettings {
	if in == nil {
		return nil
	}
	out := new(MongoCollectionSpecAutoscaleSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoCollectionSpecIndex) DeepCopyInto(out *MongoCollectionSpecIndex) {
	*out = *in
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Unique != nil {
		in, out := &in.Unique, &out.Unique
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoCollectionSpecIndex.
func (in *MongoCollectionSpecIndex) DeepCopy() *MongoCollectionSpecIndex {
	if in == nil {
		return nil
	}
	out := new(MongoCollectionSpecIndex)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoCollectionSpecSystemIndexes) DeepCopyInto(out *MongoCollectionSpecSystemIndexes) {
	*out = *in
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Unique != nil {
		in, out := &in.Unique, &out.Unique
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoCollectionSpecSystemIndexes.
func (in *MongoCollectionSpecSystemIndexes) DeepCopy() *MongoCollectionSpecSystemIndexes {
	if in == nil {
		return nil
	}
	out := new(MongoCollectionSpecSystemIndexes)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoCollectionStatus) DeepCopyInto(out *MongoCollectionStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoCollectionStatus.
func (in *MongoCollectionStatus) DeepCopy() *MongoCollectionStatus {
	if in == nil {
		return nil
	}
	out := new(MongoCollectionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDatabase) DeepCopyInto(out *MongoDatabase) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDatabase.
func (in *MongoDatabase) DeepCopy() *MongoDatabase {
	if in == nil {
		return nil
	}
	out := new(MongoDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MongoDatabase) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDatabaseList) DeepCopyInto(out *MongoDatabaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MongoDatabase, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDatabaseList.
func (in *MongoDatabaseList) DeepCopy() *MongoDatabaseList {
	if in == nil {
		return nil
	}
	out := new(MongoDatabaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MongoDatabaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDatabaseSpec) DeepCopyInto(out *MongoDatabaseSpec) {
	*out = *in
	in.MongoDatabaseSpec2.DeepCopyInto(&out.MongoDatabaseSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDatabaseSpec.
func (in *MongoDatabaseSpec) DeepCopy() *MongoDatabaseSpec {
	if in == nil {
		return nil
	}
	out := new(MongoDatabaseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDatabaseSpec2) DeepCopyInto(out *MongoDatabaseSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.AutoscaleSettings != nil {
		in, out := &in.AutoscaleSettings, &out.AutoscaleSettings
		*out = new(MongoDatabaseSpecAutoscaleSettings)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDatabaseSpec2.
func (in *MongoDatabaseSpec2) DeepCopy() *MongoDatabaseSpec2 {
	if in == nil {
		return nil
	}
	out := new(MongoDatabaseSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDatabaseSpecAutoscaleSettings) DeepCopyInto(out *MongoDatabaseSpecAutoscaleSettings) {
	*out = *in
	if in.MaxThroughput != nil {
		in, out := &in.MaxThroughput, &out.MaxThroughput
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDatabaseSpecAutoscaleSettings.
func (in *MongoDatabaseSpecAutoscaleSettings) DeepCopy() *MongoDatabaseSpecAutoscaleSettings {
	if in == nil {
		return nil
	}
	out := new(MongoDatabaseSpecAutoscaleSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoDatabaseStatus) DeepCopyInto(out *MongoDatabaseStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoDatabaseStatus.
func (in *MongoDatabaseStatus) DeepCopy() *MongoDatabaseStatus {
	if in == nil {
		return nil
	}
	out := new(MongoDatabaseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookWorkspace) DeepCopyInto(out *NotebookWorkspace) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookWorkspace.
func (in *NotebookWorkspace) DeepCopy() *NotebookWorkspace {
	if in == nil {
		return nil
	}
	out := new(NotebookWorkspace)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NotebookWorkspace) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookWorkspaceList) DeepCopyInto(out *NotebookWorkspaceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NotebookWorkspace, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookWorkspaceList.
func (in *NotebookWorkspaceList) DeepCopy() *NotebookWorkspaceList {
	if in == nil {
		return nil
	}
	out := new(NotebookWorkspaceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NotebookWorkspaceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookWorkspaceSpec) DeepCopyInto(out *NotebookWorkspaceSpec) {
	*out = *in
	in.NotebookWorkspaceSpec2.DeepCopyInto(&out.NotebookWorkspaceSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookWorkspaceSpec.
func (in *NotebookWorkspaceSpec) DeepCopy() *NotebookWorkspaceSpec {
	if in == nil {
		return nil
	}
	out := new(NotebookWorkspaceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookWorkspaceSpec2) DeepCopyInto(out *NotebookWorkspaceSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ServerEndpoint != nil {
		in, out := &in.ServerEndpoint, &out.ServerEndpoint
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookWorkspaceSpec2.
func (in *NotebookWorkspaceSpec2) DeepCopy() *NotebookWorkspaceSpec2 {
	if in == nil {
		return nil
	}
	out := new(NotebookWorkspaceSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotebookWorkspaceStatus) DeepCopyInto(out *NotebookWorkspaceStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotebookWorkspaceStatus.
func (in *NotebookWorkspaceStatus) DeepCopy() *NotebookWorkspaceStatus {
	if in == nil {
		return nil
	}
	out := new(NotebookWorkspaceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlContainer) DeepCopyInto(out *SqlContainer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlContainer.
func (in *SqlContainer) DeepCopy() *SqlContainer {
	if in == nil {
		return nil
	}
	out := new(SqlContainer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SqlContainer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlContainerList) DeepCopyInto(out *SqlContainerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SqlContainer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlContainerList.
func (in *SqlContainerList) DeepCopy() *SqlContainerList {
	if in == nil {
		return nil
	}
	out := new(SqlContainerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SqlContainerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlContainerSpec) DeepCopyInto(out *SqlContainerSpec) {
	*out = *in
	in.SqlContainerSpec2.DeepCopyInto(&out.SqlContainerSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlContainerSpec.
func (in *SqlContainerSpec) DeepCopy() *SqlContainerSpec {
	if in == nil {
		return nil
	}
	out := new(SqlContainerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlContainerSpec2) DeepCopyInto(out *SqlContainerSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.AnalyticalStorageTtl != nil {
		in, out := &in.AnalyticalStorageTtl, &out.AnalyticalStorageTtl
		*out = new(int64)
		**out = **in
	}
	if in.AutoscaleSettings != nil {
		in, out := &in.AutoscaleSettings, &out.AutoscaleSettings
		*out = new(SqlContainerSpecAutoscaleSettings)
		(*in).DeepCopyInto(*out)
	}
	if in.ConflictResolutionPolicy != nil {
		in, out := &in.ConflictResolutionPolicy, &out.ConflictResolutionPolicy
		*out = new(SqlContainerSpecConflictResolutionPolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.DefaultTtl != nil {
		in, out := &in.DefaultTtl, &out.DefaultTtl
		*out = new(int64)
		**out = **in
	}
	if in.IndexingPolicy != nil {
		in, out := &in.IndexingPolicy, &out.IndexingPolicy
		*out = new(SqlContainerSpecIndexingPolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PartitionKeyPath != nil {
		in, out := &in.PartitionKeyPath, &out.PartitionKeyPath
		*out = new(string)
		**out = **in
	}
	if in.PartitionKeyVersion != nil {
		in, out := &in.PartitionKeyVersion, &out.PartitionKeyVersion
		*out = new(int64)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(int64)
		**out = **in
	}
	if in.UniqueKey != nil {
		in, out := &in.UniqueKey, &out.UniqueKey
		*out = make([]SqlContainerSpecUniqueKey, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlContainerSpec2.
func (in *SqlContainerSpec2) DeepCopy() *SqlContainerSpec2 {
	if in == nil {
		return nil
	}
	out := new(SqlContainerSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlContainerSpecAutoscaleSettings) DeepCopyInto(out *SqlContainerSpecAutoscaleSettings) {
	*out = *in
	if in.MaxThroughput != nil {
		in, out := &in.MaxThroughput, &out.MaxThroughput
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlContainerSpecAutoscaleSettings.
func (in *SqlContainerSpecAutoscaleSettings) DeepCopy() *SqlContainerSpecAutoscaleSettings {
	if in == nil {
		return nil
	}
	out := new(SqlContainerSpecAutoscaleSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlContainerSpecConflictResolutionPolicy) DeepCopyInto(out *SqlContainerSpecConflictResolutionPolicy) {
	*out = *in
	if in.ConflictResolutionPath != nil {
		in, out := &in.ConflictResolutionPath, &out.ConflictResolutionPath
		*out = new(string)
		**out = **in
	}
	if in.ConflictResolutionProcedure != nil {
		in, out := &in.ConflictResolutionProcedure, &out.ConflictResolutionProcedure
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlContainerSpecConflictResolutionPolicy.
func (in *SqlContainerSpecConflictResolutionPolicy) DeepCopy() *SqlContainerSpecConflictResolutionPolicy {
	if in == nil {
		return nil
	}
	out := new(SqlContainerSpecConflictResolutionPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlContainerSpecIndexingPolicy) DeepCopyInto(out *SqlContainerSpecIndexingPolicy) {
	*out = *in
	if in.CompositeIndex != nil {
		in, out := &in.CompositeIndex, &out.CompositeIndex
		*out = make([]SqlContainerSpecIndexingPolicyCompositeIndex, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExcludedPath != nil {
		in, out := &in.ExcludedPath, &out.ExcludedPath
		*out = make([]SqlContainerSpecIndexingPolicyExcludedPath, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IncludedPath != nil {
		in, out := &in.IncludedPath, &out.IncludedPath
		*out = make([]SqlContainerSpecIndexingPolicyIncludedPath, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IndexingMode != nil {
		in, out := &in.IndexingMode, &out.IndexingMode
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlContainerSpecIndexingPolicy.
func (in *SqlContainerSpecIndexingPolicy) DeepCopy() *SqlContainerSpecIndexingPolicy {
	if in == nil {
		return nil
	}
	out := new(SqlContainerSpecIndexingPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlContainerSpecIndexingPolicyCompositeIndex) DeepCopyInto(out *SqlContainerSpecIndexingPolicyCompositeIndex) {
	*out = *in
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = make([]SqlContainerSpecIndexingPolicyCompositeIndexIndex, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlContainerSpecIndexingPolicyCompositeIndex.
func (in *SqlContainerSpecIndexingPolicyCompositeIndex) DeepCopy() *SqlContainerSpecIndexingPolicyCompositeIndex {
	if in == nil {
		return nil
	}
	out := new(SqlContainerSpecIndexingPolicyCompositeIndex)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlContainerSpecIndexingPolicyCompositeIndexIndex) DeepCopyInto(out *SqlContainerSpecIndexingPolicyCompositeIndexIndex) {
	*out = *in
	if in.Order != nil {
		in, out := &in.Order, &out.Order
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlContainerSpecIndexingPolicyCompositeIndexIndex.
func (in *SqlContainerSpecIndexingPolicyCompositeIndexIndex) DeepCopy() *SqlContainerSpecIndexingPolicyCompositeIndexIndex {
	if in == nil {
		return nil
	}
	out := new(SqlContainerSpecIndexingPolicyCompositeIndexIndex)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlContainerSpecIndexingPolicyExcludedPath) DeepCopyInto(out *SqlContainerSpecIndexingPolicyExcludedPath) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlContainerSpecIndexingPolicyExcludedPath.
func (in *SqlContainerSpecIndexingPolicyExcludedPath) DeepCopy() *SqlContainerSpecIndexingPolicyExcludedPath {
	if in == nil {
		return nil
	}
	out := new(SqlContainerSpecIndexingPolicyExcludedPath)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlContainerSpecIndexingPolicyIncludedPath) DeepCopyInto(out *SqlContainerSpecIndexingPolicyIncludedPath) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlContainerSpecIndexingPolicyIncludedPath.
func (in *SqlContainerSpecIndexingPolicyIncludedPath) DeepCopy() *SqlContainerSpecIndexingPolicyIncludedPath {
	if in == nil {
		return nil
	}
	out := new(SqlContainerSpecIndexingPolicyIncludedPath)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlContainerSpecUniqueKey) DeepCopyInto(out *SqlContainerSpecUniqueKey) {
	*out = *in
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlContainerSpecUniqueKey.
func (in *SqlContainerSpecUniqueKey) DeepCopy() *SqlContainerSpecUniqueKey {
	if in == nil {
		return nil
	}
	out := new(SqlContainerSpecUniqueKey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlContainerStatus) DeepCopyInto(out *SqlContainerStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlContainerStatus.
func (in *SqlContainerStatus) DeepCopy() *SqlContainerStatus {
	if in == nil {
		return nil
	}
	out := new(SqlContainerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlDatabase) DeepCopyInto(out *SqlDatabase) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlDatabase.
func (in *SqlDatabase) DeepCopy() *SqlDatabase {
	if in == nil {
		return nil
	}
	out := new(SqlDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SqlDatabase) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlDatabaseList) DeepCopyInto(out *SqlDatabaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SqlDatabase, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlDatabaseList.
func (in *SqlDatabaseList) DeepCopy() *SqlDatabaseList {
	if in == nil {
		return nil
	}
	out := new(SqlDatabaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SqlDatabaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlDatabaseSpec) DeepCopyInto(out *SqlDatabaseSpec) {
	*out = *in
	in.SqlDatabaseSpec2.DeepCopyInto(&out.SqlDatabaseSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlDatabaseSpec.
func (in *SqlDatabaseSpec) DeepCopy() *SqlDatabaseSpec {
	if in == nil {
		return nil
	}
	out := new(SqlDatabaseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlDatabaseSpec2) DeepCopyInto(out *SqlDatabaseSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.AutoscaleSettings != nil {
		in, out := &in.AutoscaleSettings, &out.AutoscaleSettings
		*out = new(SqlDatabaseSpecAutoscaleSettings)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlDatabaseSpec2.
func (in *SqlDatabaseSpec2) DeepCopy() *SqlDatabaseSpec2 {
	if in == nil {
		return nil
	}
	out := new(SqlDatabaseSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlDatabaseSpecAutoscaleSettings) DeepCopyInto(out *SqlDatabaseSpecAutoscaleSettings) {
	*out = *in
	if in.MaxThroughput != nil {
		in, out := &in.MaxThroughput, &out.MaxThroughput
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlDatabaseSpecAutoscaleSettings.
func (in *SqlDatabaseSpecAutoscaleSettings) DeepCopy() *SqlDatabaseSpecAutoscaleSettings {
	if in == nil {
		return nil
	}
	out := new(SqlDatabaseSpecAutoscaleSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlDatabaseStatus) DeepCopyInto(out *SqlDatabaseStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlDatabaseStatus.
func (in *SqlDatabaseStatus) DeepCopy() *SqlDatabaseStatus {
	if in == nil {
		return nil
	}
	out := new(SqlDatabaseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlFunction) DeepCopyInto(out *SqlFunction) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlFunction.
func (in *SqlFunction) DeepCopy() *SqlFunction {
	if in == nil {
		return nil
	}
	out := new(SqlFunction)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SqlFunction) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlFunctionList) DeepCopyInto(out *SqlFunctionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SqlFunction, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlFunctionList.
func (in *SqlFunctionList) DeepCopy() *SqlFunctionList {
	if in == nil {
		return nil
	}
	out := new(SqlFunctionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SqlFunctionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlFunctionSpec) DeepCopyInto(out *SqlFunctionSpec) {
	*out = *in
	in.SqlFunctionSpec2.DeepCopyInto(&out.SqlFunctionSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlFunctionSpec.
func (in *SqlFunctionSpec) DeepCopy() *SqlFunctionSpec {
	if in == nil {
		return nil
	}
	out := new(SqlFunctionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlFunctionSpec2) DeepCopyInto(out *SqlFunctionSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.ContainerID != nil {
		in, out := &in.ContainerID, &out.ContainerID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlFunctionSpec2.
func (in *SqlFunctionSpec2) DeepCopy() *SqlFunctionSpec2 {
	if in == nil {
		return nil
	}
	out := new(SqlFunctionSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlFunctionStatus) DeepCopyInto(out *SqlFunctionStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlFunctionStatus.
func (in *SqlFunctionStatus) DeepCopy() *SqlFunctionStatus {
	if in == nil {
		return nil
	}
	out := new(SqlFunctionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlStoredProcedure) DeepCopyInto(out *SqlStoredProcedure) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlStoredProcedure.
func (in *SqlStoredProcedure) DeepCopy() *SqlStoredProcedure {
	if in == nil {
		return nil
	}
	out := new(SqlStoredProcedure)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SqlStoredProcedure) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlStoredProcedureList) DeepCopyInto(out *SqlStoredProcedureList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SqlStoredProcedure, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlStoredProcedureList.
func (in *SqlStoredProcedureList) DeepCopy() *SqlStoredProcedureList {
	if in == nil {
		return nil
	}
	out := new(SqlStoredProcedureList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SqlStoredProcedureList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlStoredProcedureSpec) DeepCopyInto(out *SqlStoredProcedureSpec) {
	*out = *in
	in.SqlStoredProcedureSpec2.DeepCopyInto(&out.SqlStoredProcedureSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlStoredProcedureSpec.
func (in *SqlStoredProcedureSpec) DeepCopy() *SqlStoredProcedureSpec {
	if in == nil {
		return nil
	}
	out := new(SqlStoredProcedureSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlStoredProcedureSpec2) DeepCopyInto(out *SqlStoredProcedureSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlStoredProcedureSpec2.
func (in *SqlStoredProcedureSpec2) DeepCopy() *SqlStoredProcedureSpec2 {
	if in == nil {
		return nil
	}
	out := new(SqlStoredProcedureSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlStoredProcedureStatus) DeepCopyInto(out *SqlStoredProcedureStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlStoredProcedureStatus.
func (in *SqlStoredProcedureStatus) DeepCopy() *SqlStoredProcedureStatus {
	if in == nil {
		return nil
	}
	out := new(SqlStoredProcedureStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlTrigger) DeepCopyInto(out *SqlTrigger) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlTrigger.
func (in *SqlTrigger) DeepCopy() *SqlTrigger {
	if in == nil {
		return nil
	}
	out := new(SqlTrigger)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SqlTrigger) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlTriggerList) DeepCopyInto(out *SqlTriggerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SqlTrigger, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlTriggerList.
func (in *SqlTriggerList) DeepCopy() *SqlTriggerList {
	if in == nil {
		return nil
	}
	out := new(SqlTriggerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SqlTriggerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlTriggerSpec) DeepCopyInto(out *SqlTriggerSpec) {
	*out = *in
	in.SqlTriggerSpec2.DeepCopyInto(&out.SqlTriggerSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlTriggerSpec.
func (in *SqlTriggerSpec) DeepCopy() *SqlTriggerSpec {
	if in == nil {
		return nil
	}
	out := new(SqlTriggerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlTriggerSpec2) DeepCopyInto(out *SqlTriggerSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.ContainerID != nil {
		in, out := &in.ContainerID, &out.ContainerID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Operation != nil {
		in, out := &in.Operation, &out.Operation
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlTriggerSpec2.
func (in *SqlTriggerSpec2) DeepCopy() *SqlTriggerSpec2 {
	if in == nil {
		return nil
	}
	out := new(SqlTriggerSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SqlTriggerStatus) DeepCopyInto(out *SqlTriggerStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SqlTriggerStatus.
func (in *SqlTriggerStatus) DeepCopy() *SqlTriggerStatus {
	if in == nil {
		return nil
	}
	out := new(SqlTriggerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Table) DeepCopyInto(out *Table) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Table.
func (in *Table) DeepCopy() *Table {
	if in == nil {
		return nil
	}
	out := new(Table)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Table) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableList) DeepCopyInto(out *TableList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Table, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableList.
func (in *TableList) DeepCopy() *TableList {
	if in == nil {
		return nil
	}
	out := new(TableList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TableList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableSpec) DeepCopyInto(out *TableSpec) {
	*out = *in
	in.TableSpec2.DeepCopyInto(&out.TableSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableSpec.
func (in *TableSpec) DeepCopy() *TableSpec {
	if in == nil {
		return nil
	}
	out := new(TableSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableSpec2) DeepCopyInto(out *TableSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.AutoscaleSettings != nil {
		in, out := &in.AutoscaleSettings, &out.AutoscaleSettings
		*out = new(TableSpecAutoscaleSettings)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.Throughput != nil {
		in, out := &in.Throughput, &out.Throughput
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableSpec2.
func (in *TableSpec2) DeepCopy() *TableSpec2 {
	if in == nil {
		return nil
	}
	out := new(TableSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableSpecAutoscaleSettings) DeepCopyInto(out *TableSpecAutoscaleSettings) {
	*out = *in
	if in.MaxThroughput != nil {
		in, out := &in.MaxThroughput, &out.MaxThroughput
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableSpecAutoscaleSettings.
func (in *TableSpecAutoscaleSettings) DeepCopy() *TableSpecAutoscaleSettings {
	if in == nil {
		return nil
	}
	out := new(TableSpecAutoscaleSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableStatus) DeepCopyInto(out *TableStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableStatus.
func (in *TableStatus) DeepCopy() *TableStatus {
	if in == nil {
		return nil
	}
	out := new(TableStatus)
	in.DeepCopyInto(out)
	return out
}
