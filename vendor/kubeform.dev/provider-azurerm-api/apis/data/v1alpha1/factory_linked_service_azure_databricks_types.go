/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type FactoryLinkedServiceAzureDatabricks struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              FactoryLinkedServiceAzureDatabricksSpec   `json:"spec,omitempty"`
	Status            FactoryLinkedServiceAzureDatabricksStatus `json:"status,omitempty"`
}

type FactoryLinkedServiceAzureDatabricksSpec struct {
	FactoryLinkedServiceAzureDatabricksSpec2 `json:",inline"`
	// +optional
	KubeformOutput FactoryLinkedServiceAzureDatabricksSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type FactoryLinkedServiceAzureDatabricksSpecInstancePool struct {
	ClusterVersion *string `json:"clusterVersion" tf:"cluster_version"`
	InstancePoolID *string `json:"instancePoolID" tf:"instance_pool_id"`
	// +optional
	MaxNumberOfWorkers *int64 `json:"maxNumberOfWorkers,omitempty" tf:"max_number_of_workers"`
	// +optional
	MinNumberOfWorkers *int64 `json:"minNumberOfWorkers,omitempty" tf:"min_number_of_workers"`
}

type FactoryLinkedServiceAzureDatabricksSpecKeyVaultPassword struct {
	LinkedServiceName *string `json:"linkedServiceName" tf:"linked_service_name"`
	SecretName        *string `json:"secretName" tf:"secret_name"`
}

type FactoryLinkedServiceAzureDatabricksSpecNewClusterConfig struct {
	ClusterVersion *string `json:"clusterVersion" tf:"cluster_version"`
	// +optional
	CustomTags *map[string]string `json:"customTags,omitempty" tf:"custom_tags"`
	// +optional
	DriverNodeType *string `json:"driverNodeType,omitempty" tf:"driver_node_type"`
	// +optional
	InitScripts []string `json:"initScripts,omitempty" tf:"init_scripts"`
	// +optional
	LogDestination *string `json:"logDestination,omitempty" tf:"log_destination"`
	// +optional
	MaxNumberOfWorkers *int64 `json:"maxNumberOfWorkers,omitempty" tf:"max_number_of_workers"`
	// +optional
	MinNumberOfWorkers *int64  `json:"minNumberOfWorkers,omitempty" tf:"min_number_of_workers"`
	NodeType           *string `json:"nodeType" tf:"node_type"`
	// +optional
	SparkConfig *map[string]string `json:"sparkConfig,omitempty" tf:"spark_config"`
	// +optional
	SparkEnvironmentVariables *map[string]string `json:"sparkEnvironmentVariables,omitempty" tf:"spark_environment_variables"`
}

type FactoryLinkedServiceAzureDatabricksSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`

	// +optional
	AccessToken *string `json:"-" sensitive:"true" tf:"access_token"`
	AdbDomain   *string `json:"adbDomain" tf:"adb_domain"`
	// +optional
	AdditionalProperties *map[string]string `json:"additionalProperties,omitempty" tf:"additional_properties"`
	// +optional
	Annotations     []string `json:"annotations,omitempty" tf:"annotations"`
	DataFactoryName *string  `json:"dataFactoryName" tf:"data_factory_name"`
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// +optional
	ExistingClusterID *string `json:"existingClusterID,omitempty" tf:"existing_cluster_id"`
	// +optional
	InstancePool *FactoryLinkedServiceAzureDatabricksSpecInstancePool `json:"instancePool,omitempty" tf:"instance_pool"`
	// +optional
	IntegrationRuntimeName *string `json:"integrationRuntimeName,omitempty" tf:"integration_runtime_name"`
	// +optional
	KeyVaultPassword *FactoryLinkedServiceAzureDatabricksSpecKeyVaultPassword `json:"keyVaultPassword,omitempty" tf:"key_vault_password"`
	// +optional
	MsiWorkSpaceResourceID *string `json:"msiWorkSpaceResourceID,omitempty" tf:"msi_work_space_resource_id"`
	Name                   *string `json:"name" tf:"name"`
	// +optional
	NewClusterConfig *FactoryLinkedServiceAzureDatabricksSpecNewClusterConfig `json:"newClusterConfig,omitempty" tf:"new_cluster_config"`
	// +optional
	Parameters        *map[string]string `json:"parameters,omitempty" tf:"parameters"`
	ResourceGroupName *string            `json:"resourceGroupName" tf:"resource_group_name"`
}

type FactoryLinkedServiceAzureDatabricksStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// FactoryLinkedServiceAzureDatabricksList is a list of FactoryLinkedServiceAzureDatabrickss
type FactoryLinkedServiceAzureDatabricksList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of FactoryLinkedServiceAzureDatabricks CRD objects
	Items []FactoryLinkedServiceAzureDatabricks `json:"items,omitempty"`
}
