/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-google-api/apis/compute/v1alpha1"
	"kubeform.dev/provider-google-api/client/clientset/versioned/scheme"

	rest "k8s.io/client-go/rest"
)

type ComputeV1alpha1Interface interface {
	RESTClient() rest.Interface
	AddressesGetter
	AttachedDisksGetter
	AutoscalersGetter
	BackendBucketsGetter
	BackendBucketSignedURLKeysGetter
	BackendServicesGetter
	BackendServiceSignedURLKeysGetter
	DisksGetter
	DiskIamBindingsGetter
	DiskIamMembersGetter
	DiskIamPoliciesGetter
	DiskResourcePolicyAttachmentsGetter
	ExternalVPNGatewaysGetter
	FirewallsGetter
	ForwardingRulesGetter
	GlobalAddressesGetter
	GlobalForwardingRulesGetter
	GlobalNetworkEndpointsGetter
	GlobalNetworkEndpointGroupsGetter
	HaVPNGatewaysGetter
	HealthChecksGetter
	HttpHealthChecksGetter
	HttpsHealthChecksGetter
	ImagesGetter
	ImageIamBindingsGetter
	ImageIamMembersGetter
	ImageIamPoliciesGetter
	InstancesGetter
	InstanceFromTemplatesGetter
	InstanceGroupsGetter
	InstanceGroupManagersGetter
	InstanceGroupNamedPortsGetter
	InstanceIamBindingsGetter
	InstanceIamMembersGetter
	InstanceIamPoliciesGetter
	InstanceTemplatesGetter
	InterconnectAttachmentsGetter
	ManagedSSLCertificatesGetter
	NetworksGetter
	NetworkEndpointsGetter
	NetworkEndpointGroupsGetter
	NetworkPeeringsGetter
	NetworkPeeringRoutesConfigsGetter
	NodeGroupsGetter
	NodeTemplatesGetter
	PacketMirroringsGetter
	PerInstanceConfigsGetter
	ProjectDefaultNetworkTiersGetter
	ProjectMetadatasGetter
	ProjectMetadataItemsGetter
	RegionAutoscalersGetter
	RegionBackendServicesGetter
	RegionDisksGetter
	RegionDiskIamBindingsGetter
	RegionDiskIamMembersGetter
	RegionDiskIamPoliciesGetter
	RegionDiskResourcePolicyAttachmentsGetter
	RegionHealthChecksGetter
	RegionInstanceGroupManagersGetter
	RegionNetworkEndpointGroupsGetter
	RegionPerInstanceConfigsGetter
	RegionSSLCertificatesGetter
	RegionTargetHTTPProxiesGetter
	RegionTargetHTTPSProxiesGetter
	RegionURLMapsGetter
	ReservationsGetter
	ResourcePoliciesGetter
	RoutesGetter
	RoutersGetter
	RouterInterfacesGetter
	RouterNATsGetter
	RouterPeersGetter
	SecurityPoliciesGetter
	SharedVpcHostProjectsGetter
	SharedVpcServiceProjectsGetter
	SnapshotsGetter
	SslCertificatesGetter
	SslPoliciesGetter
	SubnetworksGetter
	SubnetworkIamBindingsGetter
	SubnetworkIamMembersGetter
	SubnetworkIamPoliciesGetter
	TargetGrpcProxiesGetter
	TargetHTTPProxiesGetter
	TargetHTTPSProxiesGetter
	TargetInstancesGetter
	TargetPoolsGetter
	TargetSSLProxiesGetter
	TargetTcpProxiesGetter
	UrlMapsGetter
	VpnGatewaysGetter
	VpnTunnelsGetter
}

// ComputeV1alpha1Client is used to interact with features provided by the compute.google.kubeform.com group.
type ComputeV1alpha1Client struct {
	restClient rest.Interface
}

func (c *ComputeV1alpha1Client) Addresses(namespace string) AddressInterface {
	return newAddresses(c, namespace)
}

func (c *ComputeV1alpha1Client) AttachedDisks(namespace string) AttachedDiskInterface {
	return newAttachedDisks(c, namespace)
}

func (c *ComputeV1alpha1Client) Autoscalers(namespace string) AutoscalerInterface {
	return newAutoscalers(c, namespace)
}

func (c *ComputeV1alpha1Client) BackendBuckets(namespace string) BackendBucketInterface {
	return newBackendBuckets(c, namespace)
}

func (c *ComputeV1alpha1Client) BackendBucketSignedURLKeys(namespace string) BackendBucketSignedURLKeyInterface {
	return newBackendBucketSignedURLKeys(c, namespace)
}

func (c *ComputeV1alpha1Client) BackendServices(namespace string) BackendServiceInterface {
	return newBackendServices(c, namespace)
}

func (c *ComputeV1alpha1Client) BackendServiceSignedURLKeys(namespace string) BackendServiceSignedURLKeyInterface {
	return newBackendServiceSignedURLKeys(c, namespace)
}

func (c *ComputeV1alpha1Client) Disks(namespace string) DiskInterface {
	return newDisks(c, namespace)
}

func (c *ComputeV1alpha1Client) DiskIamBindings(namespace string) DiskIamBindingInterface {
	return newDiskIamBindings(c, namespace)
}

func (c *ComputeV1alpha1Client) DiskIamMembers(namespace string) DiskIamMemberInterface {
	return newDiskIamMembers(c, namespace)
}

func (c *ComputeV1alpha1Client) DiskIamPolicies(namespace string) DiskIamPolicyInterface {
	return newDiskIamPolicies(c, namespace)
}

func (c *ComputeV1alpha1Client) DiskResourcePolicyAttachments(namespace string) DiskResourcePolicyAttachmentInterface {
	return newDiskResourcePolicyAttachments(c, namespace)
}

func (c *ComputeV1alpha1Client) ExternalVPNGateways(namespace string) ExternalVPNGatewayInterface {
	return newExternalVPNGateways(c, namespace)
}

func (c *ComputeV1alpha1Client) Firewalls(namespace string) FirewallInterface {
	return newFirewalls(c, namespace)
}

func (c *ComputeV1alpha1Client) ForwardingRules(namespace string) ForwardingRuleInterface {
	return newForwardingRules(c, namespace)
}

func (c *ComputeV1alpha1Client) GlobalAddresses(namespace string) GlobalAddressInterface {
	return newGlobalAddresses(c, namespace)
}

func (c *ComputeV1alpha1Client) GlobalForwardingRules(namespace string) GlobalForwardingRuleInterface {
	return newGlobalForwardingRules(c, namespace)
}

func (c *ComputeV1alpha1Client) GlobalNetworkEndpoints(namespace string) GlobalNetworkEndpointInterface {
	return newGlobalNetworkEndpoints(c, namespace)
}

func (c *ComputeV1alpha1Client) GlobalNetworkEndpointGroups(namespace string) GlobalNetworkEndpointGroupInterface {
	return newGlobalNetworkEndpointGroups(c, namespace)
}

func (c *ComputeV1alpha1Client) HaVPNGateways(namespace string) HaVPNGatewayInterface {
	return newHaVPNGateways(c, namespace)
}

func (c *ComputeV1alpha1Client) HealthChecks(namespace string) HealthCheckInterface {
	return newHealthChecks(c, namespace)
}

func (c *ComputeV1alpha1Client) HttpHealthChecks(namespace string) HttpHealthCheckInterface {
	return newHttpHealthChecks(c, namespace)
}

func (c *ComputeV1alpha1Client) HttpsHealthChecks(namespace string) HttpsHealthCheckInterface {
	return newHttpsHealthChecks(c, namespace)
}

func (c *ComputeV1alpha1Client) Images(namespace string) ImageInterface {
	return newImages(c, namespace)
}

func (c *ComputeV1alpha1Client) ImageIamBindings(namespace string) ImageIamBindingInterface {
	return newImageIamBindings(c, namespace)
}

func (c *ComputeV1alpha1Client) ImageIamMembers(namespace string) ImageIamMemberInterface {
	return newImageIamMembers(c, namespace)
}

func (c *ComputeV1alpha1Client) ImageIamPolicies(namespace string) ImageIamPolicyInterface {
	return newImageIamPolicies(c, namespace)
}

func (c *ComputeV1alpha1Client) Instances(namespace string) InstanceInterface {
	return newInstances(c, namespace)
}

func (c *ComputeV1alpha1Client) InstanceFromTemplates(namespace string) InstanceFromTemplateInterface {
	return newInstanceFromTemplates(c, namespace)
}

func (c *ComputeV1alpha1Client) InstanceGroups(namespace string) InstanceGroupInterface {
	return newInstanceGroups(c, namespace)
}

func (c *ComputeV1alpha1Client) InstanceGroupManagers(namespace string) InstanceGroupManagerInterface {
	return newInstanceGroupManagers(c, namespace)
}

func (c *ComputeV1alpha1Client) InstanceGroupNamedPorts(namespace string) InstanceGroupNamedPortInterface {
	return newInstanceGroupNamedPorts(c, namespace)
}

func (c *ComputeV1alpha1Client) InstanceIamBindings(namespace string) InstanceIamBindingInterface {
	return newInstanceIamBindings(c, namespace)
}

func (c *ComputeV1alpha1Client) InstanceIamMembers(namespace string) InstanceIamMemberInterface {
	return newInstanceIamMembers(c, namespace)
}

func (c *ComputeV1alpha1Client) InstanceIamPolicies(namespace string) InstanceIamPolicyInterface {
	return newInstanceIamPolicies(c, namespace)
}

func (c *ComputeV1alpha1Client) InstanceTemplates(namespace string) InstanceTemplateInterface {
	return newInstanceTemplates(c, namespace)
}

func (c *ComputeV1alpha1Client) InterconnectAttachments(namespace string) InterconnectAttachmentInterface {
	return newInterconnectAttachments(c, namespace)
}

func (c *ComputeV1alpha1Client) ManagedSSLCertificates(namespace string) ManagedSSLCertificateInterface {
	return newManagedSSLCertificates(c, namespace)
}

func (c *ComputeV1alpha1Client) Networks(namespace string) NetworkInterface {
	return newNetworks(c, namespace)
}

func (c *ComputeV1alpha1Client) NetworkEndpoints(namespace string) NetworkEndpointInterface {
	return newNetworkEndpoints(c, namespace)
}

func (c *ComputeV1alpha1Client) NetworkEndpointGroups(namespace string) NetworkEndpointGroupInterface {
	return newNetworkEndpointGroups(c, namespace)
}

func (c *ComputeV1alpha1Client) NetworkPeerings(namespace string) NetworkPeeringInterface {
	return newNetworkPeerings(c, namespace)
}

func (c *ComputeV1alpha1Client) NetworkPeeringRoutesConfigs(namespace string) NetworkPeeringRoutesConfigInterface {
	return newNetworkPeeringRoutesConfigs(c, namespace)
}

func (c *ComputeV1alpha1Client) NodeGroups(namespace string) NodeGroupInterface {
	return newNodeGroups(c, namespace)
}

func (c *ComputeV1alpha1Client) NodeTemplates(namespace string) NodeTemplateInterface {
	return newNodeTemplates(c, namespace)
}

func (c *ComputeV1alpha1Client) PacketMirrorings(namespace string) PacketMirroringInterface {
	return newPacketMirrorings(c, namespace)
}

func (c *ComputeV1alpha1Client) PerInstanceConfigs(namespace string) PerInstanceConfigInterface {
	return newPerInstanceConfigs(c, namespace)
}

func (c *ComputeV1alpha1Client) ProjectDefaultNetworkTiers(namespace string) ProjectDefaultNetworkTierInterface {
	return newProjectDefaultNetworkTiers(c, namespace)
}

func (c *ComputeV1alpha1Client) ProjectMetadatas(namespace string) ProjectMetadataInterface {
	return newProjectMetadatas(c, namespace)
}

func (c *ComputeV1alpha1Client) ProjectMetadataItems(namespace string) ProjectMetadataItemInterface {
	return newProjectMetadataItems(c, namespace)
}

func (c *ComputeV1alpha1Client) RegionAutoscalers(namespace string) RegionAutoscalerInterface {
	return newRegionAutoscalers(c, namespace)
}

func (c *ComputeV1alpha1Client) RegionBackendServices(namespace string) RegionBackendServiceInterface {
	return newRegionBackendServices(c, namespace)
}

func (c *ComputeV1alpha1Client) RegionDisks(namespace string) RegionDiskInterface {
	return newRegionDisks(c, namespace)
}

func (c *ComputeV1alpha1Client) RegionDiskIamBindings(namespace string) RegionDiskIamBindingInterface {
	return newRegionDiskIamBindings(c, namespace)
}

func (c *ComputeV1alpha1Client) RegionDiskIamMembers(namespace string) RegionDiskIamMemberInterface {
	return newRegionDiskIamMembers(c, namespace)
}

func (c *ComputeV1alpha1Client) RegionDiskIamPolicies(namespace string) RegionDiskIamPolicyInterface {
	return newRegionDiskIamPolicies(c, namespace)
}

func (c *ComputeV1alpha1Client) RegionDiskResourcePolicyAttachments(namespace string) RegionDiskResourcePolicyAttachmentInterface {
	return newRegionDiskResourcePolicyAttachments(c, namespace)
}

func (c *ComputeV1alpha1Client) RegionHealthChecks(namespace string) RegionHealthCheckInterface {
	return newRegionHealthChecks(c, namespace)
}

func (c *ComputeV1alpha1Client) RegionInstanceGroupManagers(namespace string) RegionInstanceGroupManagerInterface {
	return newRegionInstanceGroupManagers(c, namespace)
}

func (c *ComputeV1alpha1Client) RegionNetworkEndpointGroups(namespace string) RegionNetworkEndpointGroupInterface {
	return newRegionNetworkEndpointGroups(c, namespace)
}

func (c *ComputeV1alpha1Client) RegionPerInstanceConfigs(namespace string) RegionPerInstanceConfigInterface {
	return newRegionPerInstanceConfigs(c, namespace)
}

func (c *ComputeV1alpha1Client) RegionSSLCertificates(namespace string) RegionSSLCertificateInterface {
	return newRegionSSLCertificates(c, namespace)
}

func (c *ComputeV1alpha1Client) RegionTargetHTTPProxies(namespace string) RegionTargetHTTPProxyInterface {
	return newRegionTargetHTTPProxies(c, namespace)
}

func (c *ComputeV1alpha1Client) RegionTargetHTTPSProxies(namespace string) RegionTargetHTTPSProxyInterface {
	return newRegionTargetHTTPSProxies(c, namespace)
}

func (c *ComputeV1alpha1Client) RegionURLMaps(namespace string) RegionURLMapInterface {
	return newRegionURLMaps(c, namespace)
}

func (c *ComputeV1alpha1Client) Reservations(namespace string) ReservationInterface {
	return newReservations(c, namespace)
}

func (c *ComputeV1alpha1Client) ResourcePolicies(namespace string) ResourcePolicyInterface {
	return newResourcePolicies(c, namespace)
}

func (c *ComputeV1alpha1Client) Routes(namespace string) RouteInterface {
	return newRoutes(c, namespace)
}

func (c *ComputeV1alpha1Client) Routers(namespace string) RouterInterface {
	return newRouters(c, namespace)
}

func (c *ComputeV1alpha1Client) RouterInterfaces(namespace string) RouterInterfaceInterface {
	return newRouterInterfaces(c, namespace)
}

func (c *ComputeV1alpha1Client) RouterNATs(namespace string) RouterNATInterface {
	return newRouterNATs(c, namespace)
}

func (c *ComputeV1alpha1Client) RouterPeers(namespace string) RouterPeerInterface {
	return newRouterPeers(c, namespace)
}

func (c *ComputeV1alpha1Client) SecurityPolicies(namespace string) SecurityPolicyInterface {
	return newSecurityPolicies(c, namespace)
}

func (c *ComputeV1alpha1Client) SharedVpcHostProjects(namespace string) SharedVpcHostProjectInterface {
	return newSharedVpcHostProjects(c, namespace)
}

func (c *ComputeV1alpha1Client) SharedVpcServiceProjects(namespace string) SharedVpcServiceProjectInterface {
	return newSharedVpcServiceProjects(c, namespace)
}

func (c *ComputeV1alpha1Client) Snapshots(namespace string) SnapshotInterface {
	return newSnapshots(c, namespace)
}

func (c *ComputeV1alpha1Client) SslCertificates(namespace string) SslCertificateInterface {
	return newSslCertificates(c, namespace)
}

func (c *ComputeV1alpha1Client) SslPolicies(namespace string) SslPolicyInterface {
	return newSslPolicies(c, namespace)
}

func (c *ComputeV1alpha1Client) Subnetworks(namespace string) SubnetworkInterface {
	return newSubnetworks(c, namespace)
}

func (c *ComputeV1alpha1Client) SubnetworkIamBindings(namespace string) SubnetworkIamBindingInterface {
	return newSubnetworkIamBindings(c, namespace)
}

func (c *ComputeV1alpha1Client) SubnetworkIamMembers(namespace string) SubnetworkIamMemberInterface {
	return newSubnetworkIamMembers(c, namespace)
}

func (c *ComputeV1alpha1Client) SubnetworkIamPolicies(namespace string) SubnetworkIamPolicyInterface {
	return newSubnetworkIamPolicies(c, namespace)
}

func (c *ComputeV1alpha1Client) TargetGrpcProxies(namespace string) TargetGrpcProxyInterface {
	return newTargetGrpcProxies(c, namespace)
}

func (c *ComputeV1alpha1Client) TargetHTTPProxies(namespace string) TargetHTTPProxyInterface {
	return newTargetHTTPProxies(c, namespace)
}

func (c *ComputeV1alpha1Client) TargetHTTPSProxies(namespace string) TargetHTTPSProxyInterface {
	return newTargetHTTPSProxies(c, namespace)
}

func (c *ComputeV1alpha1Client) TargetInstances(namespace string) TargetInstanceInterface {
	return newTargetInstances(c, namespace)
}

func (c *ComputeV1alpha1Client) TargetPools(namespace string) TargetPoolInterface {
	return newTargetPools(c, namespace)
}

func (c *ComputeV1alpha1Client) TargetSSLProxies(namespace string) TargetSSLProxyInterface {
	return newTargetSSLProxies(c, namespace)
}

func (c *ComputeV1alpha1Client) TargetTcpProxies(namespace string) TargetTcpProxyInterface {
	return newTargetTcpProxies(c, namespace)
}

func (c *ComputeV1alpha1Client) UrlMaps(namespace string) UrlMapInterface {
	return newUrlMaps(c, namespace)
}

func (c *ComputeV1alpha1Client) VpnGateways(namespace string) VpnGatewayInterface {
	return newVpnGateways(c, namespace)
}

func (c *ComputeV1alpha1Client) VpnTunnels(namespace string) VpnTunnelInterface {
	return newVpnTunnels(c, namespace)
}

// NewForConfig creates a new ComputeV1alpha1Client for the given config.
func NewForConfig(c *rest.Config) (*ComputeV1alpha1Client, error) {
	config := *c
	if err := setConfigDefaults(&config); err != nil {
		return nil, err
	}
	client, err := rest.RESTClientFor(&config)
	if err != nil {
		return nil, err
	}
	return &ComputeV1alpha1Client{client}, nil
}

// NewForConfigOrDie creates a new ComputeV1alpha1Client for the given config and
// panics if there is an error in the config.
func NewForConfigOrDie(c *rest.Config) *ComputeV1alpha1Client {
	client, err := NewForConfig(c)
	if err != nil {
		panic(err)
	}
	return client
}

// New creates a new ComputeV1alpha1Client for the given RESTClient.
func New(c rest.Interface) *ComputeV1alpha1Client {
	return &ComputeV1alpha1Client{c}
}

func setConfigDefaults(config *rest.Config) error {
	gv := v1alpha1.SchemeGroupVersion
	config.GroupVersion = &gv
	config.APIPath = "/apis"
	config.NegotiatedSerializer = scheme.Codecs.WithoutConversion()

	if config.UserAgent == "" {
		config.UserAgent = rest.DefaultKubernetesUserAgent()
	}

	return nil
}

// RESTClient returns a RESTClient that is used to communicate
// with API server by this client implementation.
func (c *ComputeV1alpha1Client) RESTClient() rest.Interface {
	if c == nil {
		return nil
	}
	return c.restClient
}
