// +build !ignore_autogenerated

/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	apiv1alpha1 "kubeform.dev/apimachinery/api/v1alpha1"

	runtime "k8s.io/apimachinery/pkg/runtime"
	v1 "kmodules.xyz/client-go/api/v1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LiteSubscription) DeepCopyInto(out *LiteSubscription) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LiteSubscription.
func (in *LiteSubscription) DeepCopy() *LiteSubscription {
	if in == nil {
		return nil
	}
	out := new(LiteSubscription)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LiteSubscription) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LiteSubscriptionList) DeepCopyInto(out *LiteSubscriptionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LiteSubscription, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LiteSubscriptionList.
func (in *LiteSubscriptionList) DeepCopy() *LiteSubscriptionList {
	if in == nil {
		return nil
	}
	out := new(LiteSubscriptionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LiteSubscriptionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LiteSubscriptionSpec) DeepCopyInto(out *LiteSubscriptionSpec) {
	*out = *in
	in.LiteSubscriptionSpec2.DeepCopyInto(&out.LiteSubscriptionSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LiteSubscriptionSpec.
func (in *LiteSubscriptionSpec) DeepCopy() *LiteSubscriptionSpec {
	if in == nil {
		return nil
	}
	out := new(LiteSubscriptionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LiteSubscriptionSpec2) DeepCopyInto(out *LiteSubscriptionSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.DeliveryConfig != nil {
		in, out := &in.DeliveryConfig, &out.DeliveryConfig
		*out = new(LiteSubscriptionSpecDeliveryConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Topic != nil {
		in, out := &in.Topic, &out.Topic
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LiteSubscriptionSpec2.
func (in *LiteSubscriptionSpec2) DeepCopy() *LiteSubscriptionSpec2 {
	if in == nil {
		return nil
	}
	out := new(LiteSubscriptionSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LiteSubscriptionSpecDeliveryConfig) DeepCopyInto(out *LiteSubscriptionSpecDeliveryConfig) {
	*out = *in
	if in.DeliveryRequirement != nil {
		in, out := &in.DeliveryRequirement, &out.DeliveryRequirement
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LiteSubscriptionSpecDeliveryConfig.
func (in *LiteSubscriptionSpecDeliveryConfig) DeepCopy() *LiteSubscriptionSpecDeliveryConfig {
	if in == nil {
		return nil
	}
	out := new(LiteSubscriptionSpecDeliveryConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LiteSubscriptionStatus) DeepCopyInto(out *LiteSubscriptionStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LiteSubscriptionStatus.
func (in *LiteSubscriptionStatus) DeepCopy() *LiteSubscriptionStatus {
	if in == nil {
		return nil
	}
	out := new(LiteSubscriptionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LiteTopic) DeepCopyInto(out *LiteTopic) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LiteTopic.
func (in *LiteTopic) DeepCopy() *LiteTopic {
	if in == nil {
		return nil
	}
	out := new(LiteTopic)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LiteTopic) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LiteTopicList) DeepCopyInto(out *LiteTopicList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LiteTopic, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LiteTopicList.
func (in *LiteTopicList) DeepCopy() *LiteTopicList {
	if in == nil {
		return nil
	}
	out := new(LiteTopicList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LiteTopicList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LiteTopicSpec) DeepCopyInto(out *LiteTopicSpec) {
	*out = *in
	in.LiteTopicSpec2.DeepCopyInto(&out.LiteTopicSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LiteTopicSpec.
func (in *LiteTopicSpec) DeepCopy() *LiteTopicSpec {
	if in == nil {
		return nil
	}
	out := new(LiteTopicSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LiteTopicSpec2) DeepCopyInto(out *LiteTopicSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PartitionConfig != nil {
		in, out := &in.PartitionConfig, &out.PartitionConfig
		*out = new(LiteTopicSpecPartitionConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RetentionConfig != nil {
		in, out := &in.RetentionConfig, &out.RetentionConfig
		*out = new(LiteTopicSpecRetentionConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LiteTopicSpec2.
func (in *LiteTopicSpec2) DeepCopy() *LiteTopicSpec2 {
	if in == nil {
		return nil
	}
	out := new(LiteTopicSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LiteTopicSpecPartitionConfig) DeepCopyInto(out *LiteTopicSpecPartitionConfig) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(LiteTopicSpecPartitionConfigCapacity)
		(*in).DeepCopyInto(*out)
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LiteTopicSpecPartitionConfig.
func (in *LiteTopicSpecPartitionConfig) DeepCopy() *LiteTopicSpecPartitionConfig {
	if in == nil {
		return nil
	}
	out := new(LiteTopicSpecPartitionConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LiteTopicSpecPartitionConfigCapacity) DeepCopyInto(out *LiteTopicSpecPartitionConfigCapacity) {
	*out = *in
	if in.PublishMIBPerSec != nil {
		in, out := &in.PublishMIBPerSec, &out.PublishMIBPerSec
		*out = new(int64)
		**out = **in
	}
	if in.SubscribeMIBPerSec != nil {
		in, out := &in.SubscribeMIBPerSec, &out.SubscribeMIBPerSec
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LiteTopicSpecPartitionConfigCapacity.
func (in *LiteTopicSpecPartitionConfigCapacity) DeepCopy() *LiteTopicSpecPartitionConfigCapacity {
	if in == nil {
		return nil
	}
	out := new(LiteTopicSpecPartitionConfigCapacity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LiteTopicSpecRetentionConfig) DeepCopyInto(out *LiteTopicSpecRetentionConfig) {
	*out = *in
	if in.PerPartitionBytes != nil {
		in, out := &in.PerPartitionBytes, &out.PerPartitionBytes
		*out = new(string)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LiteTopicSpecRetentionConfig.
func (in *LiteTopicSpecRetentionConfig) DeepCopy() *LiteTopicSpecRetentionConfig {
	if in == nil {
		return nil
	}
	out := new(LiteTopicSpecRetentionConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LiteTopicStatus) DeepCopyInto(out *LiteTopicStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LiteTopicStatus.
func (in *LiteTopicStatus) DeepCopy() *LiteTopicStatus {
	if in == nil {
		return nil
	}
	out := new(LiteTopicStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Subscription) DeepCopyInto(out *Subscription) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Subscription.
func (in *Subscription) DeepCopy() *Subscription {
	if in == nil {
		return nil
	}
	out := new(Subscription)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Subscription) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionIamBinding) DeepCopyInto(out *SubscriptionIamBinding) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionIamBinding.
func (in *SubscriptionIamBinding) DeepCopy() *SubscriptionIamBinding {
	if in == nil {
		return nil
	}
	out := new(SubscriptionIamBinding)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubscriptionIamBinding) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionIamBindingList) DeepCopyInto(out *SubscriptionIamBindingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SubscriptionIamBinding, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionIamBindingList.
func (in *SubscriptionIamBindingList) DeepCopy() *SubscriptionIamBindingList {
	if in == nil {
		return nil
	}
	out := new(SubscriptionIamBindingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubscriptionIamBindingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionIamBindingSpec) DeepCopyInto(out *SubscriptionIamBindingSpec) {
	*out = *in
	in.SubscriptionIamBindingSpec2.DeepCopyInto(&out.SubscriptionIamBindingSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionIamBindingSpec.
func (in *SubscriptionIamBindingSpec) DeepCopy() *SubscriptionIamBindingSpec {
	if in == nil {
		return nil
	}
	out := new(SubscriptionIamBindingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionIamBindingSpec2) DeepCopyInto(out *SubscriptionIamBindingSpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(SubscriptionIamBindingSpecCondition)
		(*in).DeepCopyInto(*out)
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.Subscription != nil {
		in, out := &in.Subscription, &out.Subscription
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionIamBindingSpec2.
func (in *SubscriptionIamBindingSpec2) DeepCopy() *SubscriptionIamBindingSpec2 {
	if in == nil {
		return nil
	}
	out := new(SubscriptionIamBindingSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionIamBindingSpecCondition) DeepCopyInto(out *SubscriptionIamBindingSpecCondition) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionIamBindingSpecCondition.
func (in *SubscriptionIamBindingSpecCondition) DeepCopy() *SubscriptionIamBindingSpecCondition {
	if in == nil {
		return nil
	}
	out := new(SubscriptionIamBindingSpecCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionIamBindingStatus) DeepCopyInto(out *SubscriptionIamBindingStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionIamBindingStatus.
func (in *SubscriptionIamBindingStatus) DeepCopy() *SubscriptionIamBindingStatus {
	if in == nil {
		return nil
	}
	out := new(SubscriptionIamBindingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionIamMember) DeepCopyInto(out *SubscriptionIamMember) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionIamMember.
func (in *SubscriptionIamMember) DeepCopy() *SubscriptionIamMember {
	if in == nil {
		return nil
	}
	out := new(SubscriptionIamMember)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubscriptionIamMember) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionIamMemberList) DeepCopyInto(out *SubscriptionIamMemberList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SubscriptionIamMember, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionIamMemberList.
func (in *SubscriptionIamMemberList) DeepCopy() *SubscriptionIamMemberList {
	if in == nil {
		return nil
	}
	out := new(SubscriptionIamMemberList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubscriptionIamMemberList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionIamMemberSpec) DeepCopyInto(out *SubscriptionIamMemberSpec) {
	*out = *in
	in.SubscriptionIamMemberSpec2.DeepCopyInto(&out.SubscriptionIamMemberSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionIamMemberSpec.
func (in *SubscriptionIamMemberSpec) DeepCopy() *SubscriptionIamMemberSpec {
	if in == nil {
		return nil
	}
	out := new(SubscriptionIamMemberSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionIamMemberSpec2) DeepCopyInto(out *SubscriptionIamMemberSpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(SubscriptionIamMemberSpecCondition)
		(*in).DeepCopyInto(*out)
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.Member != nil {
		in, out := &in.Member, &out.Member
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.Subscription != nil {
		in, out := &in.Subscription, &out.Subscription
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionIamMemberSpec2.
func (in *SubscriptionIamMemberSpec2) DeepCopy() *SubscriptionIamMemberSpec2 {
	if in == nil {
		return nil
	}
	out := new(SubscriptionIamMemberSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionIamMemberSpecCondition) DeepCopyInto(out *SubscriptionIamMemberSpecCondition) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionIamMemberSpecCondition.
func (in *SubscriptionIamMemberSpecCondition) DeepCopy() *SubscriptionIamMemberSpecCondition {
	if in == nil {
		return nil
	}
	out := new(SubscriptionIamMemberSpecCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionIamMemberStatus) DeepCopyInto(out *SubscriptionIamMemberStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionIamMemberStatus.
func (in *SubscriptionIamMemberStatus) DeepCopy() *SubscriptionIamMemberStatus {
	if in == nil {
		return nil
	}
	out := new(SubscriptionIamMemberStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionIamPolicy) DeepCopyInto(out *SubscriptionIamPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionIamPolicy.
func (in *SubscriptionIamPolicy) DeepCopy() *SubscriptionIamPolicy {
	if in == nil {
		return nil
	}
	out := new(SubscriptionIamPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubscriptionIamPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionIamPolicyList) DeepCopyInto(out *SubscriptionIamPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SubscriptionIamPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionIamPolicyList.
func (in *SubscriptionIamPolicyList) DeepCopy() *SubscriptionIamPolicyList {
	if in == nil {
		return nil
	}
	out := new(SubscriptionIamPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubscriptionIamPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionIamPolicySpec) DeepCopyInto(out *SubscriptionIamPolicySpec) {
	*out = *in
	in.SubscriptionIamPolicySpec2.DeepCopyInto(&out.SubscriptionIamPolicySpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionIamPolicySpec.
func (in *SubscriptionIamPolicySpec) DeepCopy() *SubscriptionIamPolicySpec {
	if in == nil {
		return nil
	}
	out := new(SubscriptionIamPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionIamPolicySpec2) DeepCopyInto(out *SubscriptionIamPolicySpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.PolicyData != nil {
		in, out := &in.PolicyData, &out.PolicyData
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Subscription != nil {
		in, out := &in.Subscription, &out.Subscription
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionIamPolicySpec2.
func (in *SubscriptionIamPolicySpec2) DeepCopy() *SubscriptionIamPolicySpec2 {
	if in == nil {
		return nil
	}
	out := new(SubscriptionIamPolicySpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionIamPolicyStatus) DeepCopyInto(out *SubscriptionIamPolicyStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionIamPolicyStatus.
func (in *SubscriptionIamPolicyStatus) DeepCopy() *SubscriptionIamPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(SubscriptionIamPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionList) DeepCopyInto(out *SubscriptionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Subscription, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionList.
func (in *SubscriptionList) DeepCopy() *SubscriptionList {
	if in == nil {
		return nil
	}
	out := new(SubscriptionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubscriptionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionSpec) DeepCopyInto(out *SubscriptionSpec) {
	*out = *in
	in.SubscriptionSpec2.DeepCopyInto(&out.SubscriptionSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionSpec.
func (in *SubscriptionSpec) DeepCopy() *SubscriptionSpec {
	if in == nil {
		return nil
	}
	out := new(SubscriptionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionSpec2) DeepCopyInto(out *SubscriptionSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.AckDeadlineSeconds != nil {
		in, out := &in.AckDeadlineSeconds, &out.AckDeadlineSeconds
		*out = new(int64)
		**out = **in
	}
	if in.DeadLetterPolicy != nil {
		in, out := &in.DeadLetterPolicy, &out.DeadLetterPolicy
		*out = new(SubscriptionSpecDeadLetterPolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.EnableMessageOrdering != nil {
		in, out := &in.EnableMessageOrdering, &out.EnableMessageOrdering
		*out = new(bool)
		**out = **in
	}
	if in.ExpirationPolicy != nil {
		in, out := &in.ExpirationPolicy, &out.ExpirationPolicy
		*out = new(SubscriptionSpecExpirationPolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.MessageRetentionDuration != nil {
		in, out := &in.MessageRetentionDuration, &out.MessageRetentionDuration
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.PushConfig != nil {
		in, out := &in.PushConfig, &out.PushConfig
		*out = new(SubscriptionSpecPushConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.RetainAckedMessages != nil {
		in, out := &in.RetainAckedMessages, &out.RetainAckedMessages
		*out = new(bool)
		**out = **in
	}
	if in.RetryPolicy != nil {
		in, out := &in.RetryPolicy, &out.RetryPolicy
		*out = new(SubscriptionSpecRetryPolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.Topic != nil {
		in, out := &in.Topic, &out.Topic
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionSpec2.
func (in *SubscriptionSpec2) DeepCopy() *SubscriptionSpec2 {
	if in == nil {
		return nil
	}
	out := new(SubscriptionSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionSpecDeadLetterPolicy) DeepCopyInto(out *SubscriptionSpecDeadLetterPolicy) {
	*out = *in
	if in.DeadLetterTopic != nil {
		in, out := &in.DeadLetterTopic, &out.DeadLetterTopic
		*out = new(string)
		**out = **in
	}
	if in.MaxDeliveryAttempts != nil {
		in, out := &in.MaxDeliveryAttempts, &out.MaxDeliveryAttempts
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionSpecDeadLetterPolicy.
func (in *SubscriptionSpecDeadLetterPolicy) DeepCopy() *SubscriptionSpecDeadLetterPolicy {
	if in == nil {
		return nil
	}
	out := new(SubscriptionSpecDeadLetterPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionSpecExpirationPolicy) DeepCopyInto(out *SubscriptionSpecExpirationPolicy) {
	*out = *in
	if in.Ttl != nil {
		in, out := &in.Ttl, &out.Ttl
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionSpecExpirationPolicy.
func (in *SubscriptionSpecExpirationPolicy) DeepCopy() *SubscriptionSpecExpirationPolicy {
	if in == nil {
		return nil
	}
	out := new(SubscriptionSpecExpirationPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionSpecPushConfig) DeepCopyInto(out *SubscriptionSpecPushConfig) {
	*out = *in
	if in.Attributes != nil {
		in, out := &in.Attributes, &out.Attributes
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.OidcToken != nil {
		in, out := &in.OidcToken, &out.OidcToken
		*out = new(SubscriptionSpecPushConfigOidcToken)
		(*in).DeepCopyInto(*out)
	}
	if in.PushEndpoint != nil {
		in, out := &in.PushEndpoint, &out.PushEndpoint
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionSpecPushConfig.
func (in *SubscriptionSpecPushConfig) DeepCopy() *SubscriptionSpecPushConfig {
	if in == nil {
		return nil
	}
	out := new(SubscriptionSpecPushConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionSpecPushConfigOidcToken) DeepCopyInto(out *SubscriptionSpecPushConfigOidcToken) {
	*out = *in
	if in.Audience != nil {
		in, out := &in.Audience, &out.Audience
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountEmail != nil {
		in, out := &in.ServiceAccountEmail, &out.ServiceAccountEmail
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionSpecPushConfigOidcToken.
func (in *SubscriptionSpecPushConfigOidcToken) DeepCopy() *SubscriptionSpecPushConfigOidcToken {
	if in == nil {
		return nil
	}
	out := new(SubscriptionSpecPushConfigOidcToken)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionSpecRetryPolicy) DeepCopyInto(out *SubscriptionSpecRetryPolicy) {
	*out = *in
	if in.MaximumBackoff != nil {
		in, out := &in.MaximumBackoff, &out.MaximumBackoff
		*out = new(string)
		**out = **in
	}
	if in.MinimumBackoff != nil {
		in, out := &in.MinimumBackoff, &out.MinimumBackoff
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionSpecRetryPolicy.
func (in *SubscriptionSpecRetryPolicy) DeepCopy() *SubscriptionSpecRetryPolicy {
	if in == nil {
		return nil
	}
	out := new(SubscriptionSpecRetryPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionStatus) DeepCopyInto(out *SubscriptionStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionStatus.
func (in *SubscriptionStatus) DeepCopy() *SubscriptionStatus {
	if in == nil {
		return nil
	}
	out := new(SubscriptionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Topic) DeepCopyInto(out *Topic) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Topic.
func (in *Topic) DeepCopy() *Topic {
	if in == nil {
		return nil
	}
	out := new(Topic)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Topic) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicIamBinding) DeepCopyInto(out *TopicIamBinding) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicIamBinding.
func (in *TopicIamBinding) DeepCopy() *TopicIamBinding {
	if in == nil {
		return nil
	}
	out := new(TopicIamBinding)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TopicIamBinding) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicIamBindingList) DeepCopyInto(out *TopicIamBindingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TopicIamBinding, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicIamBindingList.
func (in *TopicIamBindingList) DeepCopy() *TopicIamBindingList {
	if in == nil {
		return nil
	}
	out := new(TopicIamBindingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TopicIamBindingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicIamBindingSpec) DeepCopyInto(out *TopicIamBindingSpec) {
	*out = *in
	in.TopicIamBindingSpec2.DeepCopyInto(&out.TopicIamBindingSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicIamBindingSpec.
func (in *TopicIamBindingSpec) DeepCopy() *TopicIamBindingSpec {
	if in == nil {
		return nil
	}
	out := new(TopicIamBindingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicIamBindingSpec2) DeepCopyInto(out *TopicIamBindingSpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(TopicIamBindingSpecCondition)
		(*in).DeepCopyInto(*out)
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.Topic != nil {
		in, out := &in.Topic, &out.Topic
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicIamBindingSpec2.
func (in *TopicIamBindingSpec2) DeepCopy() *TopicIamBindingSpec2 {
	if in == nil {
		return nil
	}
	out := new(TopicIamBindingSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicIamBindingSpecCondition) DeepCopyInto(out *TopicIamBindingSpecCondition) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicIamBindingSpecCondition.
func (in *TopicIamBindingSpecCondition) DeepCopy() *TopicIamBindingSpecCondition {
	if in == nil {
		return nil
	}
	out := new(TopicIamBindingSpecCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicIamBindingStatus) DeepCopyInto(out *TopicIamBindingStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicIamBindingStatus.
func (in *TopicIamBindingStatus) DeepCopy() *TopicIamBindingStatus {
	if in == nil {
		return nil
	}
	out := new(TopicIamBindingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicIamMember) DeepCopyInto(out *TopicIamMember) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicIamMember.
func (in *TopicIamMember) DeepCopy() *TopicIamMember {
	if in == nil {
		return nil
	}
	out := new(TopicIamMember)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TopicIamMember) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicIamMemberList) DeepCopyInto(out *TopicIamMemberList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TopicIamMember, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicIamMemberList.
func (in *TopicIamMemberList) DeepCopy() *TopicIamMemberList {
	if in == nil {
		return nil
	}
	out := new(TopicIamMemberList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TopicIamMemberList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicIamMemberSpec) DeepCopyInto(out *TopicIamMemberSpec) {
	*out = *in
	in.TopicIamMemberSpec2.DeepCopyInto(&out.TopicIamMemberSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicIamMemberSpec.
func (in *TopicIamMemberSpec) DeepCopy() *TopicIamMemberSpec {
	if in == nil {
		return nil
	}
	out := new(TopicIamMemberSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicIamMemberSpec2) DeepCopyInto(out *TopicIamMemberSpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(TopicIamMemberSpecCondition)
		(*in).DeepCopyInto(*out)
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.Member != nil {
		in, out := &in.Member, &out.Member
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.Topic != nil {
		in, out := &in.Topic, &out.Topic
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicIamMemberSpec2.
func (in *TopicIamMemberSpec2) DeepCopy() *TopicIamMemberSpec2 {
	if in == nil {
		return nil
	}
	out := new(TopicIamMemberSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicIamMemberSpecCondition) DeepCopyInto(out *TopicIamMemberSpecCondition) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicIamMemberSpecCondition.
func (in *TopicIamMemberSpecCondition) DeepCopy() *TopicIamMemberSpecCondition {
	if in == nil {
		return nil
	}
	out := new(TopicIamMemberSpecCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicIamMemberStatus) DeepCopyInto(out *TopicIamMemberStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicIamMemberStatus.
func (in *TopicIamMemberStatus) DeepCopy() *TopicIamMemberStatus {
	if in == nil {
		return nil
	}
	out := new(TopicIamMemberStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicIamPolicy) DeepCopyInto(out *TopicIamPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicIamPolicy.
func (in *TopicIamPolicy) DeepCopy() *TopicIamPolicy {
	if in == nil {
		return nil
	}
	out := new(TopicIamPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TopicIamPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicIamPolicyList) DeepCopyInto(out *TopicIamPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TopicIamPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicIamPolicyList.
func (in *TopicIamPolicyList) DeepCopy() *TopicIamPolicyList {
	if in == nil {
		return nil
	}
	out := new(TopicIamPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TopicIamPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicIamPolicySpec) DeepCopyInto(out *TopicIamPolicySpec) {
	*out = *in
	in.TopicIamPolicySpec2.DeepCopyInto(&out.TopicIamPolicySpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicIamPolicySpec.
func (in *TopicIamPolicySpec) DeepCopy() *TopicIamPolicySpec {
	if in == nil {
		return nil
	}
	out := new(TopicIamPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicIamPolicySpec2) DeepCopyInto(out *TopicIamPolicySpec2) {
	*out = *in
	out.ProviderRef = in.ProviderRef
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.PolicyData != nil {
		in, out := &in.PolicyData, &out.PolicyData
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Topic != nil {
		in, out := &in.Topic, &out.Topic
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicIamPolicySpec2.
func (in *TopicIamPolicySpec2) DeepCopy() *TopicIamPolicySpec2 {
	if in == nil {
		return nil
	}
	out := new(TopicIamPolicySpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicIamPolicyStatus) DeepCopyInto(out *TopicIamPolicyStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicIamPolicyStatus.
func (in *TopicIamPolicyStatus) DeepCopy() *TopicIamPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(TopicIamPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicList) DeepCopyInto(out *TopicList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Topic, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicList.
func (in *TopicList) DeepCopy() *TopicList {
	if in == nil {
		return nil
	}
	out := new(TopicList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TopicList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicSpec) DeepCopyInto(out *TopicSpec) {
	*out = *in
	in.TopicSpec2.DeepCopyInto(&out.TopicSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicSpec.
func (in *TopicSpec) DeepCopy() *TopicSpec {
	if in == nil {
		return nil
	}
	out := new(TopicSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicSpec2) DeepCopyInto(out *TopicSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.KmsKeyName != nil {
		in, out := &in.KmsKeyName, &out.KmsKeyName
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.MessageStoragePolicy != nil {
		in, out := &in.MessageStoragePolicy, &out.MessageStoragePolicy
		*out = new(TopicSpecMessageStoragePolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicSpec2.
func (in *TopicSpec2) DeepCopy() *TopicSpec2 {
	if in == nil {
		return nil
	}
	out := new(TopicSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicSpecMessageStoragePolicy) DeepCopyInto(out *TopicSpecMessageStoragePolicy) {
	*out = *in
	if in.AllowedPersistenceRegions != nil {
		in, out := &in.AllowedPersistenceRegions, &out.AllowedPersistenceRegions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicSpecMessageStoragePolicy.
func (in *TopicSpecMessageStoragePolicy) DeepCopy() *TopicSpecMessageStoragePolicy {
	if in == nil {
		return nil
	}
	out := new(TopicSpecMessageStoragePolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicStatus) DeepCopyInto(out *TopicStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicStatus.
func (in *TopicStatus) DeepCopy() *TopicStatus {
	if in == nil {
		return nil
	}
	out := new(TopicStatus)
	in.DeepCopyInto(out)
	return out
}
