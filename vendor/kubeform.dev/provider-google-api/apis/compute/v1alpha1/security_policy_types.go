/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type SecurityPolicy struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SecurityPolicySpec   `json:"spec,omitempty"`
	Status            SecurityPolicyStatus `json:"status,omitempty"`
}

type SecurityPolicySpec struct {
	SecurityPolicySpec2 `json:",inline"`
	// +optional
	KubeformOutput SecurityPolicySpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type SecurityPolicySpecRuleMatchConfig struct {
	// Set of IP addresses or ranges (IPV4 or IPV6) in CIDR notation to match against inbound traffic. There is a limit of 10 IP ranges per rule. A value of '*' matches all IPs (can be used to override the default behavior).
	// +kubebuilder:validation:MaxItems=10
	// +kubebuilder:validation:MinItems=1
	SrcIPRanges []string `json:"srcIPRanges" tf:"src_ip_ranges"`
}

type SecurityPolicySpecRuleMatchExpr struct {
	// Textual representation of an expression in Common Expression Language syntax. The application context of the containing message determines which well-known feature set of CEL is supported.
	Expression *string `json:"expression" tf:"expression"`
}

type SecurityPolicySpecRuleMatch struct {
	// The configuration options available when specifying versioned_expr. This field must be specified if versioned_expr is specified and cannot be specified if versioned_expr is not specified.
	// +optional
	Config *SecurityPolicySpecRuleMatchConfig `json:"config,omitempty" tf:"config"`
	// User defined CEVAL expression. A CEVAL expression is used to specify match criteria such as origin.ip, source.region_code and contents in the request header.
	// +optional
	Expr *SecurityPolicySpecRuleMatchExpr `json:"expr,omitempty" tf:"expr"`
	// Predefined rule expression. If this field is specified, config must also be specified. Available options:   SRC_IPS_V1: Must specify the corresponding src_ip_ranges field in config.
	// +optional
	VersionedExpr *string `json:"versionedExpr,omitempty" tf:"versioned_expr"`
}

type SecurityPolicySpecRule struct {
	// Action to take when match matches the request. Valid values:   "allow" : allow access to target, "deny(status)" : deny access to target, returns the HTTP response code specified (valid values are 403, 404 and 502)
	Action *string `json:"action" tf:"action"`
	// An optional description of this rule. Max size is 64.
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding action is enforced.
	Match *SecurityPolicySpecRuleMatch `json:"match" tf:"match"`
	// When set to true, the action specified above is not enforced. Stackdriver logs for requests that trigger a preview action are annotated as such.
	// +optional
	Preview *bool `json:"preview,omitempty" tf:"preview"`
	// An unique positive integer indicating the priority of evaluation for a rule. Rules are evaluated from highest priority (lowest numerically) to lowest priority (highest numerically) in order.
	Priority *int64 `json:"priority" tf:"priority"`
}

type SecurityPolicySpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// An optional description of this security policy. Max size is 2048.
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// Fingerprint of this resource.
	// +optional
	Fingerprint *string `json:"fingerprint,omitempty" tf:"fingerprint"`
	// The name of the security policy.
	Name *string `json:"name" tf:"name"`
	// The project in which the resource belongs. If it is not provided, the provider project is used.
	// +optional
	Project *string `json:"project,omitempty" tf:"project"`
	// The set of rules that belong to this policy. There must always be a default rule (rule with priority 2147483647 and match "*"). If no rules are provided when creating a security policy, a default rule with action "allow" will be added.
	// +optional
	Rule []SecurityPolicySpecRule `json:"rule,omitempty" tf:"rule"`
	// The URI of the created resource.
	// +optional
	SelfLink *string `json:"selfLink,omitempty" tf:"self_link"`
}

type SecurityPolicyStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// SecurityPolicyList is a list of SecurityPolicys
type SecurityPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of SecurityPolicy CRD objects
	Items []SecurityPolicy `json:"items,omitempty"`
}
