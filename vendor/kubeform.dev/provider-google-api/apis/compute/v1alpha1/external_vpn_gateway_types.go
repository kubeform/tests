/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type ExternalVPNGateway struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ExternalVPNGatewaySpec   `json:"spec,omitempty"`
	Status            ExternalVPNGatewayStatus `json:"status,omitempty"`
}

type ExternalVPNGatewaySpec struct {
	ExternalVPNGatewaySpec2 `json:",inline"`
	// +optional
	KubeformOutput ExternalVPNGatewaySpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type ExternalVPNGatewaySpecInterface struct {
	// The numeric ID for this interface. Allowed values are based on the redundancy type
	// of this external VPN gateway
	// * '0 - SINGLE_IP_INTERNALLY_REDUNDANT'
	// * '0, 1 - TWO_IPS_REDUNDANCY'
	// * '0, 1, 2, 3 - FOUR_IPS_REDUNDANCY'
	// +optional
	ID *int64 `json:"ID,omitempty" tf:"id"`
	// IP address of the interface in the external VPN gateway.
	// Only IPv4 is supported. This IP address can be either from
	// your on-premise gateway or another Cloud provider's VPN gateway,
	// it cannot be an IP address from Google Compute Engine.
	// +optional
	IpAddress *string `json:"ipAddress,omitempty" tf:"ip_address"`
}

type ExternalVPNGatewaySpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// An optional description of this resource.
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// A list of interfaces on this external VPN gateway.
	// +optional
	Interface []ExternalVPNGatewaySpecInterface `json:"interface,omitempty" tf:"interface"`
	// Name of the resource. Provided by the client when the resource is
	// created. The name must be 1-63 characters long, and comply with
	// RFC1035.  Specifically, the name must be 1-63 characters long and
	// match the regular expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means
	// the first character must be a lowercase letter, and all following
	// characters must be a dash, lowercase letter, or digit, except the last
	// character, which cannot be a dash.
	Name *string `json:"name" tf:"name"`
	// +optional
	Project *string `json:"project,omitempty" tf:"project"`
	// Indicates the redundancy type of this external VPN gateway Possible values: ["FOUR_IPS_REDUNDANCY", "SINGLE_IP_INTERNALLY_REDUNDANT", "TWO_IPS_REDUNDANCY"]
	// +optional
	RedundancyType *string `json:"redundancyType,omitempty" tf:"redundancy_type"`
	// +optional
	SelfLink *string `json:"selfLink,omitempty" tf:"self_link"`
}

type ExternalVPNGatewayStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ExternalVPNGatewayList is a list of ExternalVPNGateways
type ExternalVPNGatewayList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of ExternalVPNGateway CRD objects
	Items []ExternalVPNGateway `json:"items,omitempty"`
}
