// +build !ignore_autogenerated

/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	apiv1alpha1 "kubeform.dev/apimachinery/api/v1alpha1"

	runtime "k8s.io/apimachinery/pkg/runtime"
	v1 "kmodules.xyz/client-go/api/v1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigPatchDeployment) DeepCopyInto(out *ConfigPatchDeployment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigPatchDeployment.
func (in *ConfigPatchDeployment) DeepCopy() *ConfigPatchDeployment {
	if in == nil {
		return nil
	}
	out := new(ConfigPatchDeployment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConfigPatchDeployment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigPatchDeploymentList) DeepCopyInto(out *ConfigPatchDeploymentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ConfigPatchDeployment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigPatchDeploymentList.
func (in *ConfigPatchDeploymentList) DeepCopy() *ConfigPatchDeploymentList {
	if in == nil {
		return nil
	}
	out := new(ConfigPatchDeploymentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConfigPatchDeploymentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigPatchDeploymentSpec) DeepCopyInto(out *ConfigPatchDeploymentSpec) {
	*out = *in
	in.ConfigPatchDeploymentSpec2.DeepCopyInto(&out.ConfigPatchDeploymentSpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigPatchDeploymentSpec.
func (in *ConfigPatchDeploymentSpec) DeepCopy() *ConfigPatchDeploymentSpec {
	if in == nil {
		return nil
	}
	out := new(ConfigPatchDeploymentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigPatchDeploymentSpec2) DeepCopyInto(out *ConfigPatchDeploymentSpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.InstanceFilter != nil {
		in, out := &in.InstanceFilter, &out.InstanceFilter
		*out = new(ConfigPatchDeploymentSpecInstanceFilter)
		(*in).DeepCopyInto(*out)
	}
	if in.LastExecuteTime != nil {
		in, out := &in.LastExecuteTime, &out.LastExecuteTime
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OneTimeSchedule != nil {
		in, out := &in.OneTimeSchedule, &out.OneTimeSchedule
		*out = new(ConfigPatchDeploymentSpecOneTimeSchedule)
		(*in).DeepCopyInto(*out)
	}
	if in.PatchConfig != nil {
		in, out := &in.PatchConfig, &out.PatchConfig
		*out = new(ConfigPatchDeploymentSpecPatchConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.PatchDeploymentID != nil {
		in, out := &in.PatchDeploymentID, &out.PatchDeploymentID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RecurringSchedule != nil {
		in, out := &in.RecurringSchedule, &out.RecurringSchedule
		*out = new(ConfigPatchDeploymentSpecRecurringSchedule)
		(*in).DeepCopyInto(*out)
	}
	if in.Rollout != nil {
		in, out := &in.Rollout, &out.Rollout
		*out = new(ConfigPatchDeploymentSpecRollout)
		(*in).DeepCopyInto(*out)
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigPatchDeploymentSpec2.
func (in *ConfigPatchDeploymentSpec2) DeepCopy() *ConfigPatchDeploymentSpec2 {
	if in == nil {
		return nil
	}
	out := new(ConfigPatchDeploymentSpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigPatchDeploymentSpecInstanceFilter) DeepCopyInto(out *ConfigPatchDeploymentSpecInstanceFilter) {
	*out = *in
	if in.All != nil {
		in, out := &in.All, &out.All
		*out = new(bool)
		**out = **in
	}
	if in.GroupLabels != nil {
		in, out := &in.GroupLabels, &out.GroupLabels
		*out = make([]ConfigPatchDeploymentSpecInstanceFilterGroupLabels, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceNamePrefixes != nil {
		in, out := &in.InstanceNamePrefixes, &out.InstanceNamePrefixes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Instances != nil {
		in, out := &in.Instances, &out.Instances
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigPatchDeploymentSpecInstanceFilter.
func (in *ConfigPatchDeploymentSpecInstanceFilter) DeepCopy() *ConfigPatchDeploymentSpecInstanceFilter {
	if in == nil {
		return nil
	}
	out := new(ConfigPatchDeploymentSpecInstanceFilter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigPatchDeploymentSpecInstanceFilterGroupLabels) DeepCopyInto(out *ConfigPatchDeploymentSpecInstanceFilterGroupLabels) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigPatchDeploymentSpecInstanceFilterGroupLabels.
func (in *ConfigPatchDeploymentSpecInstanceFilterGroupLabels) DeepCopy() *ConfigPatchDeploymentSpecInstanceFilterGroupLabels {
	if in == nil {
		return nil
	}
	out := new(ConfigPatchDeploymentSpecInstanceFilterGroupLabels)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigPatchDeploymentSpecOneTimeSchedule) DeepCopyInto(out *ConfigPatchDeploymentSpecOneTimeSchedule) {
	*out = *in
	if in.ExecuteTime != nil {
		in, out := &in.ExecuteTime, &out.ExecuteTime
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigPatchDeploymentSpecOneTimeSchedule.
func (in *ConfigPatchDeploymentSpecOneTimeSchedule) DeepCopy() *ConfigPatchDeploymentSpecOneTimeSchedule {
	if in == nil {
		return nil
	}
	out := new(ConfigPatchDeploymentSpecOneTimeSchedule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigPatchDeploymentSpecPatchConfig) DeepCopyInto(out *ConfigPatchDeploymentSpecPatchConfig) {
	*out = *in
	if in.Apt != nil {
		in, out := &in.Apt, &out.Apt
		*out = new(ConfigPatchDeploymentSpecPatchConfigApt)
		(*in).DeepCopyInto(*out)
	}
	if in.Goo != nil {
		in, out := &in.Goo, &out.Goo
		*out = new(ConfigPatchDeploymentSpecPatchConfigGoo)
		(*in).DeepCopyInto(*out)
	}
	if in.PostStep != nil {
		in, out := &in.PostStep, &out.PostStep
		*out = new(ConfigPatchDeploymentSpecPatchConfigPostStep)
		(*in).DeepCopyInto(*out)
	}
	if in.PreStep != nil {
		in, out := &in.PreStep, &out.PreStep
		*out = new(ConfigPatchDeploymentSpecPatchConfigPreStep)
		(*in).DeepCopyInto(*out)
	}
	if in.RebootConfig != nil {
		in, out := &in.RebootConfig, &out.RebootConfig
		*out = new(string)
		**out = **in
	}
	if in.WindowsUpdate != nil {
		in, out := &in.WindowsUpdate, &out.WindowsUpdate
		*out = new(ConfigPatchDeploymentSpecPatchConfigWindowsUpdate)
		(*in).DeepCopyInto(*out)
	}
	if in.Yum != nil {
		in, out := &in.Yum, &out.Yum
		*out = new(ConfigPatchDeploymentSpecPatchConfigYum)
		(*in).DeepCopyInto(*out)
	}
	if in.Zypper != nil {
		in, out := &in.Zypper, &out.Zypper
		*out = new(ConfigPatchDeploymentSpecPatchConfigZypper)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigPatchDeploymentSpecPatchConfig.
func (in *ConfigPatchDeploymentSpecPatchConfig) DeepCopy() *ConfigPatchDeploymentSpecPatchConfig {
	if in == nil {
		return nil
	}
	out := new(ConfigPatchDeploymentSpecPatchConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigPatchDeploymentSpecPatchConfigApt) DeepCopyInto(out *ConfigPatchDeploymentSpecPatchConfigApt) {
	*out = *in
	if in.Excludes != nil {
		in, out := &in.Excludes, &out.Excludes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExclusivePackages != nil {
		in, out := &in.ExclusivePackages, &out.ExclusivePackages
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigPatchDeploymentSpecPatchConfigApt.
func (in *ConfigPatchDeploymentSpecPatchConfigApt) DeepCopy() *ConfigPatchDeploymentSpecPatchConfigApt {
	if in == nil {
		return nil
	}
	out := new(ConfigPatchDeploymentSpecPatchConfigApt)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigPatchDeploymentSpecPatchConfigGoo) DeepCopyInto(out *ConfigPatchDeploymentSpecPatchConfigGoo) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigPatchDeploymentSpecPatchConfigGoo.
func (in *ConfigPatchDeploymentSpecPatchConfigGoo) DeepCopy() *ConfigPatchDeploymentSpecPatchConfigGoo {
	if in == nil {
		return nil
	}
	out := new(ConfigPatchDeploymentSpecPatchConfigGoo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigPatchDeploymentSpecPatchConfigPostStep) DeepCopyInto(out *ConfigPatchDeploymentSpecPatchConfigPostStep) {
	*out = *in
	if in.LinuxExecStepConfig != nil {
		in, out := &in.LinuxExecStepConfig, &out.LinuxExecStepConfig
		*out = new(ConfigPatchDeploymentSpecPatchConfigPostStepLinuxExecStepConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.WindowsExecStepConfig != nil {
		in, out := &in.WindowsExecStepConfig, &out.WindowsExecStepConfig
		*out = new(ConfigPatchDeploymentSpecPatchConfigPostStepWindowsExecStepConfig)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigPatchDeploymentSpecPatchConfigPostStep.
func (in *ConfigPatchDeploymentSpecPatchConfigPostStep) DeepCopy() *ConfigPatchDeploymentSpecPatchConfigPostStep {
	if in == nil {
		return nil
	}
	out := new(ConfigPatchDeploymentSpecPatchConfigPostStep)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigPatchDeploymentSpecPatchConfigPostStepLinuxExecStepConfig) DeepCopyInto(out *ConfigPatchDeploymentSpecPatchConfigPostStepLinuxExecStepConfig) {
	*out = *in
	if in.AllowedSuccessCodes != nil {
		in, out := &in.AllowedSuccessCodes, &out.AllowedSuccessCodes
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	if in.GcsObject != nil {
		in, out := &in.GcsObject, &out.GcsObject
		*out = new(ConfigPatchDeploymentSpecPatchConfigPostStepLinuxExecStepConfigGcsObject)
		(*in).DeepCopyInto(*out)
	}
	if in.Interpreter != nil {
		in, out := &in.Interpreter, &out.Interpreter
		*out = new(string)
		**out = **in
	}
	if in.LocalPath != nil {
		in, out := &in.LocalPath, &out.LocalPath
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigPatchDeploymentSpecPatchConfigPostStepLinuxExecStepConfig.
func (in *ConfigPatchDeploymentSpecPatchConfigPostStepLinuxExecStepConfig) DeepCopy() *ConfigPatchDeploymentSpecPatchConfigPostStepLinuxExecStepConfig {
	if in == nil {
		return nil
	}
	out := new(ConfigPatchDeploymentSpecPatchConfigPostStepLinuxExecStepConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigPatchDeploymentSpecPatchConfigPostStepLinuxExecStepConfigGcsObject) DeepCopyInto(out *ConfigPatchDeploymentSpecPatchConfigPostStepLinuxExecStepConfigGcsObject) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.GenerationNumber != nil {
		in, out := &in.GenerationNumber, &out.GenerationNumber
		*out = new(string)
		**out = **in
	}
	if in.Object != nil {
		in, out := &in.Object, &out.Object
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigPatchDeploymentSpecPatchConfigPostStepLinuxExecStepConfigGcsObject.
func (in *ConfigPatchDeploymentSpecPatchConfigPostStepLinuxExecStepConfigGcsObject) DeepCopy() *ConfigPatchDeploymentSpecPatchConfigPostStepLinuxExecStepConfigGcsObject {
	if in == nil {
		return nil
	}
	out := new(ConfigPatchDeploymentSpecPatchConfigPostStepLinuxExecStepConfigGcsObject)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigPatchDeploymentSpecPatchConfigPostStepWindowsExecStepConfig) DeepCopyInto(out *ConfigPatchDeploymentSpecPatchConfigPostStepWindowsExecStepConfig) {
	*out = *in
	if in.AllowedSuccessCodes != nil {
		in, out := &in.AllowedSuccessCodes, &out.AllowedSuccessCodes
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	if in.GcsObject != nil {
		in, out := &in.GcsObject, &out.GcsObject
		*out = new(ConfigPatchDeploymentSpecPatchConfigPostStepWindowsExecStepConfigGcsObject)
		(*in).DeepCopyInto(*out)
	}
	if in.Interpreter != nil {
		in, out := &in.Interpreter, &out.Interpreter
		*out = new(string)
		**out = **in
	}
	if in.LocalPath != nil {
		in, out := &in.LocalPath, &out.LocalPath
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigPatchDeploymentSpecPatchConfigPostStepWindowsExecStepConfig.
func (in *ConfigPatchDeploymentSpecPatchConfigPostStepWindowsExecStepConfig) DeepCopy() *ConfigPatchDeploymentSpecPatchConfigPostStepWindowsExecStepConfig {
	if in == nil {
		return nil
	}
	out := new(ConfigPatchDeploymentSpecPatchConfigPostStepWindowsExecStepConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigPatchDeploymentSpecPatchConfigPostStepWindowsExecStepConfigGcsObject) DeepCopyInto(out *ConfigPatchDeploymentSpecPatchConfigPostStepWindowsExecStepConfigGcsObject) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.GenerationNumber != nil {
		in, out := &in.GenerationNumber, &out.GenerationNumber
		*out = new(string)
		**out = **in
	}
	if in.Object != nil {
		in, out := &in.Object, &out.Object
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigPatchDeploymentSpecPatchConfigPostStepWindowsExecStepConfigGcsObject.
func (in *ConfigPatchDeploymentSpecPatchConfigPostStepWindowsExecStepConfigGcsObject) DeepCopy() *ConfigPatchDeploymentSpecPatchConfigPostStepWindowsExecStepConfigGcsObject {
	if in == nil {
		return nil
	}
	out := new(ConfigPatchDeploymentSpecPatchConfigPostStepWindowsExecStepConfigGcsObject)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigPatchDeploymentSpecPatchConfigPreStep) DeepCopyInto(out *ConfigPatchDeploymentSpecPatchConfigPreStep) {
	*out = *in
	if in.LinuxExecStepConfig != nil {
		in, out := &in.LinuxExecStepConfig, &out.LinuxExecStepConfig
		*out = new(ConfigPatchDeploymentSpecPatchConfigPreStepLinuxExecStepConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.WindowsExecStepConfig != nil {
		in, out := &in.WindowsExecStepConfig, &out.WindowsExecStepConfig
		*out = new(ConfigPatchDeploymentSpecPatchConfigPreStepWindowsExecStepConfig)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigPatchDeploymentSpecPatchConfigPreStep.
func (in *ConfigPatchDeploymentSpecPatchConfigPreStep) DeepCopy() *ConfigPatchDeploymentSpecPatchConfigPreStep {
	if in == nil {
		return nil
	}
	out := new(ConfigPatchDeploymentSpecPatchConfigPreStep)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigPatchDeploymentSpecPatchConfigPreStepLinuxExecStepConfig) DeepCopyInto(out *ConfigPatchDeploymentSpecPatchConfigPreStepLinuxExecStepConfig) {
	*out = *in
	if in.AllowedSuccessCodes != nil {
		in, out := &in.AllowedSuccessCodes, &out.AllowedSuccessCodes
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	if in.GcsObject != nil {
		in, out := &in.GcsObject, &out.GcsObject
		*out = new(ConfigPatchDeploymentSpecPatchConfigPreStepLinuxExecStepConfigGcsObject)
		(*in).DeepCopyInto(*out)
	}
	if in.Interpreter != nil {
		in, out := &in.Interpreter, &out.Interpreter
		*out = new(string)
		**out = **in
	}
	if in.LocalPath != nil {
		in, out := &in.LocalPath, &out.LocalPath
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigPatchDeploymentSpecPatchConfigPreStepLinuxExecStepConfig.
func (in *ConfigPatchDeploymentSpecPatchConfigPreStepLinuxExecStepConfig) DeepCopy() *ConfigPatchDeploymentSpecPatchConfigPreStepLinuxExecStepConfig {
	if in == nil {
		return nil
	}
	out := new(ConfigPatchDeploymentSpecPatchConfigPreStepLinuxExecStepConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigPatchDeploymentSpecPatchConfigPreStepLinuxExecStepConfigGcsObject) DeepCopyInto(out *ConfigPatchDeploymentSpecPatchConfigPreStepLinuxExecStepConfigGcsObject) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.GenerationNumber != nil {
		in, out := &in.GenerationNumber, &out.GenerationNumber
		*out = new(string)
		**out = **in
	}
	if in.Object != nil {
		in, out := &in.Object, &out.Object
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigPatchDeploymentSpecPatchConfigPreStepLinuxExecStepConfigGcsObject.
func (in *ConfigPatchDeploymentSpecPatchConfigPreStepLinuxExecStepConfigGcsObject) DeepCopy() *ConfigPatchDeploymentSpecPatchConfigPreStepLinuxExecStepConfigGcsObject {
	if in == nil {
		return nil
	}
	out := new(ConfigPatchDeploymentSpecPatchConfigPreStepLinuxExecStepConfigGcsObject)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigPatchDeploymentSpecPatchConfigPreStepWindowsExecStepConfig) DeepCopyInto(out *ConfigPatchDeploymentSpecPatchConfigPreStepWindowsExecStepConfig) {
	*out = *in
	if in.AllowedSuccessCodes != nil {
		in, out := &in.AllowedSuccessCodes, &out.AllowedSuccessCodes
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	if in.GcsObject != nil {
		in, out := &in.GcsObject, &out.GcsObject
		*out = new(ConfigPatchDeploymentSpecPatchConfigPreStepWindowsExecStepConfigGcsObject)
		(*in).DeepCopyInto(*out)
	}
	if in.Interpreter != nil {
		in, out := &in.Interpreter, &out.Interpreter
		*out = new(string)
		**out = **in
	}
	if in.LocalPath != nil {
		in, out := &in.LocalPath, &out.LocalPath
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigPatchDeploymentSpecPatchConfigPreStepWindowsExecStepConfig.
func (in *ConfigPatchDeploymentSpecPatchConfigPreStepWindowsExecStepConfig) DeepCopy() *ConfigPatchDeploymentSpecPatchConfigPreStepWindowsExecStepConfig {
	if in == nil {
		return nil
	}
	out := new(ConfigPatchDeploymentSpecPatchConfigPreStepWindowsExecStepConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigPatchDeploymentSpecPatchConfigPreStepWindowsExecStepConfigGcsObject) DeepCopyInto(out *ConfigPatchDeploymentSpecPatchConfigPreStepWindowsExecStepConfigGcsObject) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.GenerationNumber != nil {
		in, out := &in.GenerationNumber, &out.GenerationNumber
		*out = new(string)
		**out = **in
	}
	if in.Object != nil {
		in, out := &in.Object, &out.Object
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigPatchDeploymentSpecPatchConfigPreStepWindowsExecStepConfigGcsObject.
func (in *ConfigPatchDeploymentSpecPatchConfigPreStepWindowsExecStepConfigGcsObject) DeepCopy() *ConfigPatchDeploymentSpecPatchConfigPreStepWindowsExecStepConfigGcsObject {
	if in == nil {
		return nil
	}
	out := new(ConfigPatchDeploymentSpecPatchConfigPreStepWindowsExecStepConfigGcsObject)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigPatchDeploymentSpecPatchConfigWindowsUpdate) DeepCopyInto(out *ConfigPatchDeploymentSpecPatchConfigWindowsUpdate) {
	*out = *in
	if in.Classifications != nil {
		in, out := &in.Classifications, &out.Classifications
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Excludes != nil {
		in, out := &in.Excludes, &out.Excludes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExclusivePatches != nil {
		in, out := &in.ExclusivePatches, &out.ExclusivePatches
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigPatchDeploymentSpecPatchConfigWindowsUpdate.
func (in *ConfigPatchDeploymentSpecPatchConfigWindowsUpdate) DeepCopy() *ConfigPatchDeploymentSpecPatchConfigWindowsUpdate {
	if in == nil {
		return nil
	}
	out := new(ConfigPatchDeploymentSpecPatchConfigWindowsUpdate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigPatchDeploymentSpecPatchConfigYum) DeepCopyInto(out *ConfigPatchDeploymentSpecPatchConfigYum) {
	*out = *in
	if in.Excludes != nil {
		in, out := &in.Excludes, &out.Excludes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExclusivePackages != nil {
		in, out := &in.ExclusivePackages, &out.ExclusivePackages
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Minimal != nil {
		in, out := &in.Minimal, &out.Minimal
		*out = new(bool)
		**out = **in
	}
	if in.Security != nil {
		in, out := &in.Security, &out.Security
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigPatchDeploymentSpecPatchConfigYum.
func (in *ConfigPatchDeploymentSpecPatchConfigYum) DeepCopy() *ConfigPatchDeploymentSpecPatchConfigYum {
	if in == nil {
		return nil
	}
	out := new(ConfigPatchDeploymentSpecPatchConfigYum)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigPatchDeploymentSpecPatchConfigZypper) DeepCopyInto(out *ConfigPatchDeploymentSpecPatchConfigZypper) {
	*out = *in
	if in.Categories != nil {
		in, out := &in.Categories, &out.Categories
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Excludes != nil {
		in, out := &in.Excludes, &out.Excludes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExclusivePatches != nil {
		in, out := &in.ExclusivePatches, &out.ExclusivePatches
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Severities != nil {
		in, out := &in.Severities, &out.Severities
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.WithOptional != nil {
		in, out := &in.WithOptional, &out.WithOptional
		*out = new(bool)
		**out = **in
	}
	if in.WithUpdate != nil {
		in, out := &in.WithUpdate, &out.WithUpdate
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigPatchDeploymentSpecPatchConfigZypper.
func (in *ConfigPatchDeploymentSpecPatchConfigZypper) DeepCopy() *ConfigPatchDeploymentSpecPatchConfigZypper {
	if in == nil {
		return nil
	}
	out := new(ConfigPatchDeploymentSpecPatchConfigZypper)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigPatchDeploymentSpecRecurringSchedule) DeepCopyInto(out *ConfigPatchDeploymentSpecRecurringSchedule) {
	*out = *in
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = new(string)
		**out = **in
	}
	if in.LastExecuteTime != nil {
		in, out := &in.LastExecuteTime, &out.LastExecuteTime
		*out = new(string)
		**out = **in
	}
	if in.Monthly != nil {
		in, out := &in.Monthly, &out.Monthly
		*out = new(ConfigPatchDeploymentSpecRecurringScheduleMonthly)
		(*in).DeepCopyInto(*out)
	}
	if in.NextExecuteTime != nil {
		in, out := &in.NextExecuteTime, &out.NextExecuteTime
		*out = new(string)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = new(string)
		**out = **in
	}
	if in.TimeOfDay != nil {
		in, out := &in.TimeOfDay, &out.TimeOfDay
		*out = new(ConfigPatchDeploymentSpecRecurringScheduleTimeOfDay)
		(*in).DeepCopyInto(*out)
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(ConfigPatchDeploymentSpecRecurringScheduleTimeZone)
		(*in).DeepCopyInto(*out)
	}
	if in.Weekly != nil {
		in, out := &in.Weekly, &out.Weekly
		*out = new(ConfigPatchDeploymentSpecRecurringScheduleWeekly)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigPatchDeploymentSpecRecurringSchedule.
func (in *ConfigPatchDeploymentSpecRecurringSchedule) DeepCopy() *ConfigPatchDeploymentSpecRecurringSchedule {
	if in == nil {
		return nil
	}
	out := new(ConfigPatchDeploymentSpecRecurringSchedule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigPatchDeploymentSpecRecurringScheduleMonthly) DeepCopyInto(out *ConfigPatchDeploymentSpecRecurringScheduleMonthly) {
	*out = *in
	if in.MonthDay != nil {
		in, out := &in.MonthDay, &out.MonthDay
		*out = new(int64)
		**out = **in
	}
	if in.WeekDayOfMonth != nil {
		in, out := &in.WeekDayOfMonth, &out.WeekDayOfMonth
		*out = new(ConfigPatchDeploymentSpecRecurringScheduleMonthlyWeekDayOfMonth)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigPatchDeploymentSpecRecurringScheduleMonthly.
func (in *ConfigPatchDeploymentSpecRecurringScheduleMonthly) DeepCopy() *ConfigPatchDeploymentSpecRecurringScheduleMonthly {
	if in == nil {
		return nil
	}
	out := new(ConfigPatchDeploymentSpecRecurringScheduleMonthly)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigPatchDeploymentSpecRecurringScheduleMonthlyWeekDayOfMonth) DeepCopyInto(out *ConfigPatchDeploymentSpecRecurringScheduleMonthlyWeekDayOfMonth) {
	*out = *in
	if in.DayOfWeek != nil {
		in, out := &in.DayOfWeek, &out.DayOfWeek
		*out = new(string)
		**out = **in
	}
	if in.WeekOrdinal != nil {
		in, out := &in.WeekOrdinal, &out.WeekOrdinal
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigPatchDeploymentSpecRecurringScheduleMonthlyWeekDayOfMonth.
func (in *ConfigPatchDeploymentSpecRecurringScheduleMonthlyWeekDayOfMonth) DeepCopy() *ConfigPatchDeploymentSpecRecurringScheduleMonthlyWeekDayOfMonth {
	if in == nil {
		return nil
	}
	out := new(ConfigPatchDeploymentSpecRecurringScheduleMonthlyWeekDayOfMonth)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigPatchDeploymentSpecRecurringScheduleTimeOfDay) DeepCopyInto(out *ConfigPatchDeploymentSpecRecurringScheduleTimeOfDay) {
	*out = *in
	if in.Hours != nil {
		in, out := &in.Hours, &out.Hours
		*out = new(int64)
		**out = **in
	}
	if in.Minutes != nil {
		in, out := &in.Minutes, &out.Minutes
		*out = new(int64)
		**out = **in
	}
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(int64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigPatchDeploymentSpecRecurringScheduleTimeOfDay.
func (in *ConfigPatchDeploymentSpecRecurringScheduleTimeOfDay) DeepCopy() *ConfigPatchDeploymentSpecRecurringScheduleTimeOfDay {
	if in == nil {
		return nil
	}
	out := new(ConfigPatchDeploymentSpecRecurringScheduleTimeOfDay)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigPatchDeploymentSpecRecurringScheduleTimeZone) DeepCopyInto(out *ConfigPatchDeploymentSpecRecurringScheduleTimeZone) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigPatchDeploymentSpecRecurringScheduleTimeZone.
func (in *ConfigPatchDeploymentSpecRecurringScheduleTimeZone) DeepCopy() *ConfigPatchDeploymentSpecRecurringScheduleTimeZone {
	if in == nil {
		return nil
	}
	out := new(ConfigPatchDeploymentSpecRecurringScheduleTimeZone)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigPatchDeploymentSpecRecurringScheduleWeekly) DeepCopyInto(out *ConfigPatchDeploymentSpecRecurringScheduleWeekly) {
	*out = *in
	if in.DayOfWeek != nil {
		in, out := &in.DayOfWeek, &out.DayOfWeek
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigPatchDeploymentSpecRecurringScheduleWeekly.
func (in *ConfigPatchDeploymentSpecRecurringScheduleWeekly) DeepCopy() *ConfigPatchDeploymentSpecRecurringScheduleWeekly {
	if in == nil {
		return nil
	}
	out := new(ConfigPatchDeploymentSpecRecurringScheduleWeekly)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigPatchDeploymentSpecRollout) DeepCopyInto(out *ConfigPatchDeploymentSpecRollout) {
	*out = *in
	if in.DisruptionBudget != nil {
		in, out := &in.DisruptionBudget, &out.DisruptionBudget
		*out = new(ConfigPatchDeploymentSpecRolloutDisruptionBudget)
		(*in).DeepCopyInto(*out)
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigPatchDeploymentSpecRollout.
func (in *ConfigPatchDeploymentSpecRollout) DeepCopy() *ConfigPatchDeploymentSpecRollout {
	if in == nil {
		return nil
	}
	out := new(ConfigPatchDeploymentSpecRollout)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigPatchDeploymentSpecRolloutDisruptionBudget) DeepCopyInto(out *ConfigPatchDeploymentSpecRolloutDisruptionBudget) {
	*out = *in
	if in.Fixed != nil {
		in, out := &in.Fixed, &out.Fixed
		*out = new(int64)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigPatchDeploymentSpecRolloutDisruptionBudget.
func (in *ConfigPatchDeploymentSpecRolloutDisruptionBudget) DeepCopy() *ConfigPatchDeploymentSpecRolloutDisruptionBudget {
	if in == nil {
		return nil
	}
	out := new(ConfigPatchDeploymentSpecRolloutDisruptionBudget)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigPatchDeploymentStatus) DeepCopyInto(out *ConfigPatchDeploymentStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigPatchDeploymentStatus.
func (in *ConfigPatchDeploymentStatus) DeepCopy() *ConfigPatchDeploymentStatus {
	if in == nil {
		return nil
	}
	out := new(ConfigPatchDeploymentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoginSSHPublicKey) DeepCopyInto(out *LoginSSHPublicKey) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoginSSHPublicKey.
func (in *LoginSSHPublicKey) DeepCopy() *LoginSSHPublicKey {
	if in == nil {
		return nil
	}
	out := new(LoginSSHPublicKey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoginSSHPublicKey) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoginSSHPublicKeyList) DeepCopyInto(out *LoginSSHPublicKeyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LoginSSHPublicKey, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoginSSHPublicKeyList.
func (in *LoginSSHPublicKeyList) DeepCopy() *LoginSSHPublicKeyList {
	if in == nil {
		return nil
	}
	out := new(LoginSSHPublicKeyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoginSSHPublicKeyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoginSSHPublicKeySpec) DeepCopyInto(out *LoginSSHPublicKeySpec) {
	*out = *in
	in.LoginSSHPublicKeySpec2.DeepCopyInto(&out.LoginSSHPublicKeySpec2)
	in.KubeformOutput.DeepCopyInto(&out.KubeformOutput)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoginSSHPublicKeySpec.
func (in *LoginSSHPublicKeySpec) DeepCopy() *LoginSSHPublicKeySpec {
	if in == nil {
		return nil
	}
	out := new(LoginSSHPublicKeySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoginSSHPublicKeySpec2) DeepCopyInto(out *LoginSSHPublicKeySpec2) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	out.ProviderRef = in.ProviderRef
	if in.ExpirationTimeUsec != nil {
		in, out := &in.ExpirationTimeUsec, &out.ExpirationTimeUsec
		*out = new(string)
		**out = **in
	}
	if in.Fingerprint != nil {
		in, out := &in.Fingerprint, &out.Fingerprint
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoginSSHPublicKeySpec2.
func (in *LoginSSHPublicKeySpec2) DeepCopy() *LoginSSHPublicKeySpec2 {
	if in == nil {
		return nil
	}
	out := new(LoginSSHPublicKeySpec2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoginSSHPublicKeyStatus) DeepCopyInto(out *LoginSSHPublicKeyStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoginSSHPublicKeyStatus.
func (in *LoginSSHPublicKeyStatus) DeepCopy() *LoginSSHPublicKeyStatus {
	if in == nil {
		return nil
	}
	out := new(LoginSSHPublicKeyStatus)
	in.DeepCopyInto(out)
	return out
}
