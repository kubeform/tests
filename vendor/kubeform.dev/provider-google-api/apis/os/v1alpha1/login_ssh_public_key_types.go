/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type LoginSSHPublicKey struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              LoginSSHPublicKeySpec   `json:"spec,omitempty"`
	Status            LoginSSHPublicKeyStatus `json:"status,omitempty"`
}

type LoginSSHPublicKeySpec struct {
	LoginSSHPublicKeySpec2 `json:",inline"`
	// +optional
	KubeformOutput LoginSSHPublicKeySpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type LoginSSHPublicKeySpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// An expiration time in microseconds since epoch.
	// +optional
	ExpirationTimeUsec *string `json:"expirationTimeUsec,omitempty" tf:"expiration_time_usec"`
	// The SHA-256 fingerprint of the SSH public key.
	// +optional
	Fingerprint *string `json:"fingerprint,omitempty" tf:"fingerprint"`
	// Public key text in SSH format, defined by RFC4253 section 6.6.
	Key *string `json:"key" tf:"key"`
	// The project ID of the Google Cloud Platform project.
	// +optional
	Project *string `json:"project,omitempty" tf:"project"`
	// The user email.
	User *string `json:"user" tf:"user"`
}

type LoginSSHPublicKeyStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// LoginSSHPublicKeyList is a list of LoginSSHPublicKeys
type LoginSSHPublicKeyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of LoginSSHPublicKey CRD objects
	Items []LoginSSHPublicKey `json:"items,omitempty"`
}
