/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type ManagementConnectivityTest struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ManagementConnectivityTestSpec   `json:"spec,omitempty"`
	Status            ManagementConnectivityTestStatus `json:"status,omitempty"`
}

type ManagementConnectivityTestSpec struct {
	ManagementConnectivityTestSpec2 `json:",inline"`
	// +optional
	KubeformOutput ManagementConnectivityTestSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type ManagementConnectivityTestSpecDestination struct {
	// A Compute Engine instance URI.
	// +optional
	Instance *string `json:"instance,omitempty" tf:"instance"`
	// The IP address of the endpoint, which can be an external or
	// internal IP. An IPv6 address is only allowed when the test's
	// destination is a global load balancer VIP.
	// +optional
	IpAddress *string `json:"ipAddress,omitempty" tf:"ip_address"`
	// A Compute Engine network URI.
	// +optional
	Network *string `json:"network,omitempty" tf:"network"`
	// The IP protocol port of the endpoint. Only applicable when
	// protocol is TCP or UDP.
	// +optional
	Port *int64 `json:"port,omitempty" tf:"port"`
	// Project ID where the endpoint is located. The Project ID can be
	// derived from the URI if you provide a VM instance or network URI.
	// The following are two cases where you must provide the project ID:
	// 1. Only the IP address is specified, and the IP address is within
	// a GCP project. 2. When you are using Shared VPC and the IP address
	// that you provide is from the service project. In this case, the
	// network that the IP address resides in is defined in the host
	// project.
	// +optional
	ProjectID *string `json:"projectID,omitempty" tf:"project_id"`
}

type ManagementConnectivityTestSpecSource struct {
	// A Compute Engine instance URI.
	// +optional
	Instance *string `json:"instance,omitempty" tf:"instance"`
	// The IP address of the endpoint, which can be an external or
	// internal IP. An IPv6 address is only allowed when the test's
	// destination is a global load balancer VIP.
	// +optional
	IpAddress *string `json:"ipAddress,omitempty" tf:"ip_address"`
	// A Compute Engine network URI.
	// +optional
	Network *string `json:"network,omitempty" tf:"network"`
	// Type of the network where the endpoint is located. Possible values: ["GCP_NETWORK", "NON_GCP_NETWORK"]
	// +optional
	NetworkType *string `json:"networkType,omitempty" tf:"network_type"`
	// The IP protocol port of the endpoint. Only applicable when
	// protocol is TCP or UDP.
	// +optional
	Port *int64 `json:"port,omitempty" tf:"port"`
	// Project ID where the endpoint is located. The Project ID can be
	// derived from the URI if you provide a VM instance or network URI.
	// The following are two cases where you must provide the project ID:
	//
	// 1. Only the IP address is specified, and the IP address is
	//    within a GCP project.
	// 2. When you are using Shared VPC and the IP address
	//    that you provide is from the service project. In this case,
	//    the network that the IP address resides in is defined in the
	//    host project.
	// +optional
	ProjectID *string `json:"projectID,omitempty" tf:"project_id"`
}

type ManagementConnectivityTestSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// The user-supplied description of the Connectivity Test.
	// Maximum of 512 characters.
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// Required. Destination specification of the Connectivity Test.
	//
	// You can use a combination of destination IP address, Compute
	// Engine VM instance, or VPC network to uniquely identify the
	// destination location.
	//
	// Even if the destination IP address is not unique, the source IP
	// location is unique. Usually, the analysis can infer the destination
	// endpoint from route information.
	//
	// If the destination you specify is a VM instance and the instance has
	// multiple network interfaces, then you must also specify either a
	// destination IP address or VPC network to identify the destination
	// interface.
	//
	// A reachability analysis proceeds even if the destination location
	// is ambiguous. However, the result can include endpoints that you
	// don't intend to test.
	Destination *ManagementConnectivityTestSpecDestination `json:"destination" tf:"destination"`
	// Resource labels to represent user-provided metadata.
	// +optional
	Labels *map[string]string `json:"labels,omitempty" tf:"labels"`
	// Unique name for the connectivity test.
	Name *string `json:"name" tf:"name"`
	// +optional
	Project *string `json:"project,omitempty" tf:"project"`
	// IP Protocol of the test. When not provided, "TCP" is assumed.
	// +optional
	Protocol *string `json:"protocol,omitempty" tf:"protocol"`
	// Other projects that may be relevant for reachability analysis.
	// This is applicable to scenarios where a test can cross project
	// boundaries.
	// +optional
	RelatedProjects []string `json:"relatedProjects,omitempty" tf:"related_projects"`
	// Required. Source specification of the Connectivity Test.
	//
	// You can use a combination of source IP address, virtual machine
	// (VM) instance, or Compute Engine network to uniquely identify the
	// source location.
	//
	// Examples: If the source IP address is an internal IP address within
	// a Google Cloud Virtual Private Cloud (VPC) network, then you must
	// also specify the VPC network. Otherwise, specify the VM instance,
	// which already contains its internal IP address and VPC network
	// information.
	//
	// If the source of the test is within an on-premises network, then
	// you must provide the destination VPC network.
	//
	// If the source endpoint is a Compute Engine VM instance with multiple
	// network interfaces, the instance itself is not sufficient to
	// identify the endpoint. So, you must also specify the source IP
	// address or VPC network.
	//
	// A reachability analysis proceeds even if the source location is
	// ambiguous. However, the test result may include endpoints that
	// you don't intend to test.
	Source *ManagementConnectivityTestSpecSource `json:"source" tf:"source"`
}

type ManagementConnectivityTestStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ManagementConnectivityTestList is a list of ManagementConnectivityTests
type ManagementConnectivityTestList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of ManagementConnectivityTest CRD objects
	Items []ManagementConnectivityTest `json:"items,omitempty"`
}
