/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type RecordSet struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              RecordSetSpec   `json:"spec,omitempty"`
	Status            RecordSetStatus `json:"status,omitempty"`
}

type RecordSetSpec struct {
	RecordSetSpec2 `json:",inline"`
	// +optional
	KubeformOutput RecordSetSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type RecordSetSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// Identifies the managed zone addressed by this request.
	ManagedZone *string `json:"managedZone" tf:"managed_zone"`
	// For example, www.example.com.
	Name *string `json:"name" tf:"name"`
	// +optional
	Project *string `json:"project,omitempty" tf:"project"`
	// The string data for the records in this record set whose meaning depends on the DNS type.
	// For TXT record, if the string data contains spaces, add surrounding \" if you don't want your string to get
	// split on spaces. To specify a single record value longer than 255 characters such as a TXT record for
	// DKIM, add \"\" inside the Terraform configuration string (e.g. "first255characters\"\"morecharacters").
	// +optional
	Rrdatas []string `json:"rrdatas,omitempty" tf:"rrdatas"`
	// Number of seconds that this ResourceRecordSet can be cached by
	// resolvers.
	// +optional
	Ttl *int64 `json:"ttl,omitempty" tf:"ttl"`
	// One of valid DNS resource types. Possible values: ["A", "AAAA", "CAA", "CNAME", "MX", "NAPTR", "NS", "PTR", "SOA", "SPF", "SRV", "TLSA", "TXT"]
	Type *string `json:"type" tf:"type"`
}

type RecordSetStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// RecordSetList is a list of RecordSets
type RecordSetList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of RecordSet CRD objects
	Items []RecordSet `json:"items,omitempty"`
}
