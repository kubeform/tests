/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type LossPreventionDeidentifyTemplate struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              LossPreventionDeidentifyTemplateSpec   `json:"spec,omitempty"`
	Status            LossPreventionDeidentifyTemplateStatus `json:"status,omitempty"`
}

type LossPreventionDeidentifyTemplateSpec struct {
	LossPreventionDeidentifyTemplateSpec2 `json:",inline"`
	// +optional
	KubeformOutput LossPreventionDeidentifyTemplateSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type LossPreventionDeidentifyTemplateSpecDeidentifyConfigInfoTypeTransformationsTransformationsInfoTypes struct {
	// Name of the information type.
	Name *string `json:"name" tf:"name"`
}

type LossPreventionDeidentifyTemplateSpecDeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnore struct {
	// Characters to not transform when masking.
	// +optional
	CharacterToSkip *string `json:"characterToSkip,omitempty" tf:"character_to_skip"`
	// Common characters to not transform when masking. Useful to avoid removing punctuation. Possible values: ["NUMERIC", "ALPHA_UPPER_CASE", "ALPHA_LOWER_CASE", "PUNCTUATION", "WHITESPACE"]
	// +optional
	CommonCharactersToIgnore *string `json:"commonCharactersToIgnore,omitempty" tf:"common_characters_to_ignore"`
}

type LossPreventionDeidentifyTemplateSpecDeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfig struct {
	// Characters to skip when doing de-identification of a value. These will be left alone and skipped.
	// +optional
	CharactersToIgnore []LossPreventionDeidentifyTemplateSpecDeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfigCharactersToIgnore `json:"charactersToIgnore,omitempty" tf:"characters_to_ignore"`
	// Character to use to mask the sensitive valuesâ€”for example, * for an alphabetic string such as a name, or 0 for a numeric string
	// such as ZIP code or credit card number. This string must have a length of 1. If not supplied, this value defaults to * for
	// strings, and 0 for digits.
	// +optional
	MaskingCharacter *string `json:"maskingCharacter,omitempty" tf:"masking_character"`
	// Number of characters to mask. If not set, all matching chars will be masked. Skipped characters do not count towards this tally.
	// +optional
	NumberToMask *int64 `json:"numberToMask,omitempty" tf:"number_to_mask"`
	// Mask characters in reverse order. For example, if masking_character is 0, number_to_mask is 14, and reverse_order is 'false', then the
	// input string '1234-5678-9012-3456' is masked as '00000000000000-3456'.
	// +optional
	ReverseOrder *bool `json:"reverseOrder,omitempty" tf:"reverse_order"`
}

type LossPreventionDeidentifyTemplateSpecDeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueDateValue struct {
	// Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a
	// year by itself or a year and month where the day is not significant.
	// +optional
	Day *int64 `json:"day,omitempty" tf:"day"`
	// Month of year. Must be from 1 to 12, or 0 if specifying a year without a month and day.
	// +optional
	Month *int64 `json:"month,omitempty" tf:"month"`
	// Year of date. Must be from 1 to 9999, or 0 if specifying a date without a year.
	// +optional
	Year *int64 `json:"year,omitempty" tf:"year"`
}

type LossPreventionDeidentifyTemplateSpecDeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValue struct {
	// Hours of day in 24 hour format. Should be from 0 to 23.
	// +optional
	Hours *int64 `json:"hours,omitempty" tf:"hours"`
	// Minutes of hour of day. Must be from 0 to 59.
	// +optional
	Minutes *int64 `json:"minutes,omitempty" tf:"minutes"`
	// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
	// +optional
	Nanos *int64 `json:"nanos,omitempty" tf:"nanos"`
	// Seconds of minutes of the time. Must normally be from 0 to 59.
	// +optional
	Seconds *int64 `json:"seconds,omitempty" tf:"seconds"`
}

type LossPreventionDeidentifyTemplateSpecDeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValue struct {
	// A boolean value.
	// +optional
	BooleanValue *bool `json:"booleanValue,omitempty" tf:"boolean_value"`
	// Represents a whole or partial calendar date.
	// +optional
	DateValue *LossPreventionDeidentifyTemplateSpecDeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueDateValue `json:"dateValue,omitempty" tf:"date_value"`
	// Represents a day of the week. Possible values: ["MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY"]
	// +optional
	DayOfWeekValue *string `json:"dayOfWeekValue,omitempty" tf:"day_of_week_value"`
	// A float value.
	// +optional
	FloatValue *float64 `json:"floatValue,omitempty" tf:"float_value"`
	// An integer value.
	// +optional
	IntegerValue *int64 `json:"integerValue,omitempty" tf:"integer_value"`
	// A string value.
	// +optional
	StringValue *string `json:"stringValue,omitempty" tf:"string_value"`
	// Represents a time of day.
	// +optional
	TimeValue *LossPreventionDeidentifyTemplateSpecDeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValueTimeValue `json:"timeValue,omitempty" tf:"time_value"`
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	// +optional
	TimestampValue *string `json:"timestampValue,omitempty" tf:"timestamp_value"`
}

type LossPreventionDeidentifyTemplateSpecDeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfig struct {
	// Replace each input value with a given value.
	NewValue *LossPreventionDeidentifyTemplateSpecDeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfigNewValue `json:"newValue" tf:"new_value"`
}

type LossPreventionDeidentifyTemplateSpecDeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformation struct {
	// Partially mask a string by replacing a given number of characters with a fixed character.
	// Masking can start from the beginning or end of the string.
	// +optional
	CharacterMaskConfig *LossPreventionDeidentifyTemplateSpecDeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationCharacterMaskConfig `json:"characterMaskConfig,omitempty" tf:"character_mask_config"`
	// Replace each input value with a given value.
	// +optional
	ReplaceConfig *LossPreventionDeidentifyTemplateSpecDeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformationReplaceConfig `json:"replaceConfig,omitempty" tf:"replace_config"`
}

type LossPreventionDeidentifyTemplateSpecDeidentifyConfigInfoTypeTransformationsTransformations struct {
	// InfoTypes to apply the transformation to. Leaving this empty will apply the transformation to apply to
	// all findings that correspond to infoTypes that were requested in InspectConfig.
	// +optional
	InfoTypes []LossPreventionDeidentifyTemplateSpecDeidentifyConfigInfoTypeTransformationsTransformationsInfoTypes `json:"infoTypes,omitempty" tf:"info_types"`
	// Primitive transformation to apply to the infoType.
	PrimitiveTransformation *LossPreventionDeidentifyTemplateSpecDeidentifyConfigInfoTypeTransformationsTransformationsPrimitiveTransformation `json:"primitiveTransformation" tf:"primitive_transformation"`
}

type LossPreventionDeidentifyTemplateSpecDeidentifyConfigInfoTypeTransformations struct {
	// Transformation for each infoType. Cannot specify more than one for a given infoType.
	Transformations []LossPreventionDeidentifyTemplateSpecDeidentifyConfigInfoTypeTransformationsTransformations `json:"transformations" tf:"transformations"`
}

type LossPreventionDeidentifyTemplateSpecDeidentifyConfig struct {
	// Specifies free-text based transformations to be applied to the dataset.
	InfoTypeTransformations *LossPreventionDeidentifyTemplateSpecDeidentifyConfigInfoTypeTransformations `json:"infoTypeTransformations" tf:"info_type_transformations"`
}

type LossPreventionDeidentifyTemplateSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// Configuration of the deidentify template
	DeidentifyConfig *LossPreventionDeidentifyTemplateSpecDeidentifyConfig `json:"deidentifyConfig" tf:"deidentify_config"`
	// A description of the template.
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// User set display name of the template.
	// +optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name"`
	// The resource name of the template. Set by the server.
	// +optional
	Name *string `json:"name,omitempty" tf:"name"`
	// The parent of the template in any of the following formats:
	//
	// * 'projects/{{project}}'
	// * 'projects/{{project}}/locations/{{location}}'
	// * 'organizations/{{organization_id}}'
	// * 'organizations/{{organization_id}}/locations/{{location}}'
	Parent *string `json:"parent" tf:"parent"`
}

type LossPreventionDeidentifyTemplateStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// LossPreventionDeidentifyTemplateList is a list of LossPreventionDeidentifyTemplates
type LossPreventionDeidentifyTemplateList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of LossPreventionDeidentifyTemplate CRD objects
	Items []LossPreventionDeidentifyTemplate `json:"items,omitempty"`
}
