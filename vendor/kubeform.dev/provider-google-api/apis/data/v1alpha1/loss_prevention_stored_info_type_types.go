/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type LossPreventionStoredInfoType struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              LossPreventionStoredInfoTypeSpec   `json:"spec,omitempty"`
	Status            LossPreventionStoredInfoTypeStatus `json:"status,omitempty"`
}

type LossPreventionStoredInfoTypeSpec struct {
	LossPreventionStoredInfoTypeSpec2 `json:",inline"`
	// +optional
	KubeformOutput LossPreventionStoredInfoTypeSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type LossPreventionStoredInfoTypeSpecDictionaryCloudStoragePath struct {
	// A url representing a file or path (no wildcards) in Cloud Storage. Example: 'gs://[BUCKET_NAME]/dictionary.txt'
	Path *string `json:"path" tf:"path"`
}

type LossPreventionStoredInfoTypeSpecDictionaryWordList struct {
	// Words or phrases defining the dictionary. The dictionary must contain at least one
	// phrase and every phrase must contain at least 2 characters that are letters or digits.
	Words []string `json:"words" tf:"words"`
}

type LossPreventionStoredInfoTypeSpecDictionary struct {
	// Newline-delimited file of words in Cloud Storage. Only a single file is accepted.
	// +optional
	CloudStoragePath *LossPreventionStoredInfoTypeSpecDictionaryCloudStoragePath `json:"cloudStoragePath,omitempty" tf:"cloud_storage_path"`
	// List of words or phrases to search for.
	// +optional
	WordList *LossPreventionStoredInfoTypeSpecDictionaryWordList `json:"wordList,omitempty" tf:"word_list"`
}

type LossPreventionStoredInfoTypeSpecLargeCustomDictionaryBigQueryFieldField struct {
	// Name describing the field.
	Name *string `json:"name" tf:"name"`
}

type LossPreventionStoredInfoTypeSpecLargeCustomDictionaryBigQueryFieldTable struct {
	// The dataset ID of the table.
	DatasetID *string `json:"datasetID" tf:"dataset_id"`
	// The Google Cloud Platform project ID of the project containing the table.
	ProjectID *string `json:"projectID" tf:"project_id"`
	// The name of the table.
	TableID *string `json:"tableID" tf:"table_id"`
}

type LossPreventionStoredInfoTypeSpecLargeCustomDictionaryBigQueryField struct {
	// Designated field in the BigQuery table.
	Field *LossPreventionStoredInfoTypeSpecLargeCustomDictionaryBigQueryFieldField `json:"field" tf:"field"`
	// Field in a BigQuery table where each cell represents a dictionary phrase.
	Table *LossPreventionStoredInfoTypeSpecLargeCustomDictionaryBigQueryFieldTable `json:"table" tf:"table"`
}

type LossPreventionStoredInfoTypeSpecLargeCustomDictionaryCloudStorageFileSet struct {
	// The url, in the format 'gs://<bucket>/<path>'. Trailing wildcard in the path is allowed.
	Url *string `json:"url" tf:"url"`
}

type LossPreventionStoredInfoTypeSpecLargeCustomDictionaryOutputPath struct {
	// A url representing a file or path (no wildcards) in Cloud Storage. Example: 'gs://[BUCKET_NAME]/dictionary.txt'
	Path *string `json:"path" tf:"path"`
}

type LossPreventionStoredInfoTypeSpecLargeCustomDictionary struct {
	// Field in a BigQuery table where each cell represents a dictionary phrase.
	// +optional
	BigQueryField *LossPreventionStoredInfoTypeSpecLargeCustomDictionaryBigQueryField `json:"bigQueryField,omitempty" tf:"big_query_field"`
	// Set of files containing newline-delimited lists of dictionary phrases.
	// +optional
	CloudStorageFileSet *LossPreventionStoredInfoTypeSpecLargeCustomDictionaryCloudStorageFileSet `json:"cloudStorageFileSet,omitempty" tf:"cloud_storage_file_set"`
	// Location to store dictionary artifacts in Google Cloud Storage. These files will only be accessible by project owners and the DLP API.
	// If any of these artifacts are modified, the dictionary is considered invalid and can no longer be used.
	OutputPath *LossPreventionStoredInfoTypeSpecLargeCustomDictionaryOutputPath `json:"outputPath" tf:"output_path"`
}

type LossPreventionStoredInfoTypeSpecRegex struct {
	// The index of the submatch to extract as findings. When not specified, the entire match is returned. No more than 3 may be included.
	// +optional
	GroupIndexes []int64 `json:"groupIndexes,omitempty" tf:"group_indexes"`
	// Pattern defining the regular expression.
	// Its syntax (https://github.com/google/re2/wiki/Syntax) can be found under the google/re2 repository on GitHub.
	Pattern *string `json:"pattern" tf:"pattern"`
}

type LossPreventionStoredInfoTypeSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// A description of the info type.
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// Dictionary which defines the rule.
	// +optional
	Dictionary *LossPreventionStoredInfoTypeSpecDictionary `json:"dictionary,omitempty" tf:"dictionary"`
	// User set display name of the info type.
	// +optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name"`
	// Dictionary which defines the rule.
	// +optional
	LargeCustomDictionary *LossPreventionStoredInfoTypeSpecLargeCustomDictionary `json:"largeCustomDictionary,omitempty" tf:"large_custom_dictionary"`
	// The resource name of the info type. Set by the server.
	// +optional
	Name *string `json:"name,omitempty" tf:"name"`
	// The parent of the info type in any of the following formats:
	//
	// * 'projects/{{project}}'
	// * 'projects/{{project}}/locations/{{location}}'
	// * 'organizations/{{organization_id}}'
	// * 'organizations/{{organization_id}}/locations/{{location}}'
	Parent *string `json:"parent" tf:"parent"`
	// Regular expression which defines the rule.
	// +optional
	Regex *LossPreventionStoredInfoTypeSpecRegex `json:"regex,omitempty" tf:"regex"`
}

type LossPreventionStoredInfoTypeStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// LossPreventionStoredInfoTypeList is a list of LossPreventionStoredInfoTypes
type LossPreventionStoredInfoTypeList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of LossPreventionStoredInfoType CRD objects
	Items []LossPreventionStoredInfoType `json:"items,omitempty"`
}
