/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type GcPolicy struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              GcPolicySpec   `json:"spec,omitempty"`
	Status            GcPolicyStatus `json:"status,omitempty"`
}

type GcPolicySpec struct {
	GcPolicySpec2 `json:",inline"`
	// +optional
	KubeformOutput GcPolicySpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type GcPolicySpecMaxAge struct {
	// Number of days before applying GC policy.
	// +optional
	// Deprecated
	Days *int64 `json:"days,omitempty" tf:"days"`
	// Duration before applying GC policy
	// +optional
	Duration *string `json:"duration,omitempty" tf:"duration"`
}

type GcPolicySpecMaxVersion struct {
	// Number of version before applying the GC policy.
	Number *int64 `json:"number" tf:"number"`
}

type GcPolicySpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// The name of the column family.
	ColumnFamily *string `json:"columnFamily" tf:"column_family"`
	// The name of the Bigtable instance.
	InstanceName *string `json:"instanceName" tf:"instance_name"`
	// GC policy that applies to all cells older than the given age.
	// +optional
	MaxAge *GcPolicySpecMaxAge `json:"maxAge,omitempty" tf:"max_age"`
	// GC policy that applies to all versions of a cell except for the most recent.
	// +optional
	MaxVersion []GcPolicySpecMaxVersion `json:"maxVersion,omitempty" tf:"max_version"`
	// If multiple policies are set, you should choose between UNION OR INTERSECTION.
	// +optional
	Mode *string `json:"mode,omitempty" tf:"mode"`
	// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	// +optional
	Project *string `json:"project,omitempty" tf:"project"`
	// The name of the table.
	Table *string `json:"table" tf:"table"`
}

type GcPolicyStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// GcPolicyList is a list of GcPolicys
type GcPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of GcPolicy CRD objects
	Items []GcPolicy `json:"items,omitempty"`
}
