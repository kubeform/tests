/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type HmacKey struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              HmacKeySpec   `json:"spec,omitempty"`
	Status            HmacKeyStatus `json:"status,omitempty"`
}

type HmacKeySpec struct {
	HmacKeySpec2 `json:",inline"`
	// +optional
	KubeformOutput HmacKeySpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type HmacKeySpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`

	// The access ID of the HMAC Key.
	// +optional
	AccessID *string `json:"accessID,omitempty" tf:"access_id"`
	// +optional
	Project *string `json:"project,omitempty" tf:"project"`
	// HMAC secret key material.
	// +optional
	Secret *string `json:"-" sensitive:"true" tf:"secret"`
	// The email address of the key's associated service account.
	ServiceAccountEmail *string `json:"serviceAccountEmail" tf:"service_account_email"`
	// The state of the key. Can be set to one of ACTIVE, INACTIVE. Default value: "ACTIVE" Possible values: ["ACTIVE", "INACTIVE"]
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// 'The creation time of the HMAC key in RFC 3339 format. '
	// +optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created"`
	// 'The last modification time of the HMAC key metadata in RFC 3339 format.'
	// +optional
	Updated *string `json:"updated,omitempty" tf:"updated"`
}

type HmacKeyStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// HmacKeyList is a list of HmacKeys
type HmacKeyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of HmacKey CRD objects
	Items []HmacKey `json:"items,omitempty"`
}
