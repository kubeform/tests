/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type ObjectAccessControl struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ObjectAccessControlSpec   `json:"spec,omitempty"`
	Status            ObjectAccessControlStatus `json:"status,omitempty"`
}

type ObjectAccessControlSpec struct {
	ObjectAccessControlSpec2 `json:",inline"`
	// +optional
	KubeformOutput ObjectAccessControlSpec2 `json:"kubeformOutput,omitempty" tf:"-"`
}

type ObjectAccessControlSpecProjectTeam struct {
	// The project team associated with the entity
	// +optional
	ProjectNumber *string `json:"projectNumber,omitempty" tf:"project_number"`
	// The team. Possible values: ["editors", "owners", "viewers"]
	// +optional
	Team *string `json:"team,omitempty" tf:"team"`
}

type ObjectAccessControlSpec2 struct {
	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// The name of the bucket.
	Bucket *string `json:"bucket" tf:"bucket"`
	// The domain associated with the entity.
	// +optional
	Domain *string `json:"domain,omitempty" tf:"domain"`
	// The email address associated with the entity.
	// +optional
	Email *string `json:"email,omitempty" tf:"email"`
	// The entity holding the permission, in one of the following forms:
	//   * user-{{userId}}
	//   * user-{{email}} (such as "user-liz@example.com")
	//   * group-{{groupId}}
	//   * group-{{email}} (such as "group-example@googlegroups.com")
	//   * domain-{{domain}} (such as "domain-example.com")
	//   * project-team-{{projectId}}
	//   * allUsers
	//   * allAuthenticatedUsers
	Entity *string `json:"entity" tf:"entity"`
	// The ID for the entity
	// +optional
	EntityID *string `json:"entityID,omitempty" tf:"entity_id"`
	// The content generation of the object, if applied to an object.
	// +optional
	Generation *int64 `json:"generation,omitempty" tf:"generation"`
	// The name of the object to apply the access control to.
	Object *string `json:"object" tf:"object"`
	// The project team associated with the entity
	// +optional
	ProjectTeam []ObjectAccessControlSpecProjectTeam `json:"projectTeam,omitempty" tf:"project_team"`
	// The access permission for the entity. Possible values: ["OWNER", "READER"]
	Role *string `json:"role" tf:"role"`
}

type ObjectAccessControlStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase base.Phase `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ObjectAccessControlList is a list of ObjectAccessControls
type ObjectAccessControlList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of ObjectAccessControl CRD objects
	Items []ObjectAccessControl `json:"items,omitempty"`
}
